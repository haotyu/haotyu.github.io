<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浩宇的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-26T09:32:50.978Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>浩宇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XSS跨站脚本攻击</title>
    <link href="http://example.com/2022/07/14/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2022/07/14/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</id>
    <published>2022-07-14T06:21:53.000Z</published>
    <updated>2022-07-26T09:32:50.978Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4beee3e12c3d33782c865ff157e2beca919e69ab20055f7aded251767d72ad97">905c4d0cf8e39f3f4fbbf98d9acd6e65f6485a59a752de72b62105fc716f7636db70b840ddbe2cd3172df21f039b2fce8061c85178bab9ec715c22a7a3b46b11e844e86562b235f88676e2623520d894a9e455290d18a3b377369c735d649b1308373e2a04ffd65fa977de2b59a00699634c2c283ba6b4bf80411121d48d5e4e0172f2ac7f5eeb374ea43cb06231d1ce50a30b0ad74691822eacc729c7d0f076d3b510074896a559adf38c72cced70242747f8ccd4ea19eeb38c3036c0e9d60eb5fa20cc83ee4001f090fe4605cfc8659c7389760f99df39f93e5155a3078b560b89b644e1f9a62b7bde65570f1407ba0bb9a36a7f10139423160d77227367df618041c79d3ec73f576dd96ed2f43d4c9466765c6183eb606fff7ebbfcdb4a91d4877663dc1d8cb5dd4e7b82e4c1150f0a2947d206f6fbf89d4ac40df5c1e338cb742200e6da0eb7022051b440128c67f8fe0eef4e2d13683957facdadc9f7cbe15cd951a22745c51ba08e31d3debfd69354c4571fd734c5e6f7333aeb2279b686a26530b83410e348dfb22cea0a13a678a1fe275e2a884f27579dbc1df298aee5c0c9f0e77dcc8663f197bd1162b5a8f014c4df3c4a16a27bbdc27eee61b263da167933d971c91a043bc99bd6b1c52916fb99728db0a6456049d9f6260a3aa2c9a6a0fe97c2159fae88db818ed6c6c8c83cfff4b1290d694d0492ee3fb7c3040a958bbb4bb161c0db9c5c7aee5ae1386817ba88ae193650cb7787d7979f767a93d139ef4db3a840247245af6a19417e6ba90a2667d21e1e3cfa210cdb1f9baa51d06039f6f9fcc728363ab2faab2f3e1ee691fa15904f5a41b8d212e74a98b947a1b05eb268eea24e2ee674a78ec0f918c766be19b8ca2b970aefaf7ad01cf1bf720144de691fa14ab9e21de43ad3c07030a355da9180501a62b049c2321d9c0f2d1f2e6d41b3b332ac051c2e564cb01640288a7614e1ccff330d2bb2c0e7fb1cbb53a89c0c238baf81f9bebfbacbfca36dc2260afcdb818f8a632f20de553946e5198681d2809dc3ad67bd5e432610865ded6fe38be2bc2d3c03ac98a453f6d888ad6cac5d0e4f6ccb6f5507b6fda282a50be9e2b6e187f1972ec468aa2475d6eea584030a668e8f18b9aeb2cfa945ba78377e0eef3296c5d249d46cadc19179129289806cfcff90e337ed36e1c6b7b56d0848f5b56f71b29a4a0135e1b8b444d09225c79f37b5699999860ad158c486b6912367ccccbb366a5d8c7d2423bb0e8274a87aad398090c182e34b6f3bd02e85dee2d27545fa380ca9b0d9fe0a203a780dc54472a918ffae00bda0d80f3cfc49fbe7aaddb40c68482d60124ba371d91869498c30aa61cb14de1bb81c8ed0b4263735890905f24889541ae2bec8a8985e1c261610b1b8d3e9a5349ab350040c1b8828031eafda69e9bb958dd75e7f5903d12324aafec300428034ba48c5615561fb806a67fa8564ee13dee7351c692cf47dce98b91843f96236b9646259837ff21d8bf447d63dd12d5b23067c53e05a6d3f7b2ed62f901de2ffeca2c459aab9fadbe50c6a1b2b7871b6bacdb323377785bef4a62e9e4297cde7fb497b7a7c7259ea44e1c3c5a0e19890d2434c1ea67c66befe0f5a28ab942132f5072cbef198be4ecbe918dce043fe92738fe712480dda83535f86a48cc3d612ee2235e07d75fd793145ff722a1947a09cb0e6927bf5031b777b8df08ca4d0877d7773350de60d5dba1762cca2c577f495f0971da34d5f38152a909fb54eb4ac5dcb88b899f2c1f968b17c1b76fd8bf2135d2e2945229859c866b537dcdba1d8c86ba1adde7e882593cebd262c4a145340e1496c500b7f87d4f9fdec8f04ca409b1ab9c4bf46e3ba2d4a821bd8ef62f1a0b95792022c407be9ebf5c2b0ab5fbd59e63be25fa553be9f6b323a242c81ecb60718aae5c887cbd84d5d6349f062fbc36372dc0082b80982197b38222ea3fc913baaf85848cba81a4b4971af4624d2dd46c7a4f08e8373fadea8df2275886a5d4aa67d0aa6706eb90bb7a5473047a1ac00bf2ed4e335b5cc388db25c859cfeffbcd158615e6fc1fa3544633a7ee4964583af6917abf28e256003a2a294c96a3e693aca29da092dc9c78047c7524adb70fe3ab180b062e79a06af76f3632c8cff8f57f938c7cc932f4cdbf227383f175f1183e21c9e81fa00c8c00d4bf82ae11f3f20c8e972c040a5aeb9fd72fa79cd68736371f9082a28d207624d545d7373b4f62d65abd3749b554a0a0a6e44db22eec11917d03534fe8f1dabd4aebea9dcfdcbc230a9ab1137e24b73c5feff3b3a6474a3ecec3f52e33e535989b61bf8597c77beec845502da11f5904004c7774df1fc71ed5a40e55fc29d0c08dd9117ced328561d2675902a32151c70bf0c4d44f20c59ffaf324e6579c1444e21730fddab5fb466066d43c16e0d5e4e4e191118ab499bc2a40d37e40fe64552a3d126995dfa776b5dfed51378889e2641f0a99312ca194e4f927fda6e8c4ff06e6fd715b87a29955db040d297a5f64874b5e4bcb5d24252f60ae28c49339f37e2f94a460239703af86b3ea9853388f891d23c6abea7fa206d7a412f515049cb234a59c6c99cef66784cba2388491f9f3a375e407214f3008ae47c9b597c8a4a3b4d307fc5ccf0c2522ff3e190a276d8d39d34a05667b9a265a294a2b6d5bdca5c4cb9cb7ef7eed9b3da146f05ec4cb7ac08b816a85a322cfb61739622709243606fa21cc51b860138b7c0279e965fa8bab3ca891381441b3a60e656bd671f0a5053d8413eb327caa019c4f6ea719c7478fa8daf9d7bbfbad04c139acc407c824539c4336130b4627ac82de72839396629c47ec067db4fba6ad5d3603529745c1a6eaac7049deb9bc5197517e5ae535f303b78425fb967255fb5efe2cd8877f51c7dad97a26aa0f9d61873ebbc754e3d2f67dd647fcdbe07c205eff89c0bcc5fe204f949899cc4c29952aad92bf90f8d4eb86f59e3ee65808a7410a4ebf30e1e5e6bddb084a554188487981c8f7e525a65d8cfb41a3ba4201b8eff05ba8c8a80279c3a22c53ed92d34c1a915e0756cb6c842680e821e1fdec87e66b39be9fd8408530bd85b89ac6476399509bc8399321d1bbbbd2ac5bc46201e6164b89ad53e5bb43adaf1fcddcdbda89c8348acf66f680c6eac34ed184492bc08c392c8e9d9abddcbaee3cdc565e1e5d8024f13c80d6e56334340df81e4a60b2c91f79c8da3268dee8fe943403e904ce8ecb1cfe672d746de8a27e8c5a81958107854840bc946227b730b8feff1045eed87671d007f057fd8acaccc914cefa06b514a769d7ac05d1a2625476d08432282009a2530403735d24cfe4ec4167c544633b8d4bbbea2f61d893f3ec4bb0613a7a38d2dd70e708ce9feb0272e174bae4d864ce39123b3667fcebe0c04497d60611c6fe3a2f31fe4acdbb578328f6e1483f074913c20f5a69cfc22e047f417f2705a03f02e66c9e7964ecc985601becbf0b646f6ccf193120e78c75aebe9335b7b9fc6135a31522a23e3802b532bdb91dcad0560f6175bbe731c688843952ef3fdbf51c63612815f1de2881c8ab08cbbf4840d5f4389a93e3831e32ee1a0c0ad29b0d1fe5bf6ba8daad60964c68ce3f4ac2aab15081872d1ebea98cc703dda873e305d5534023c514067eb2ed0f462fcd3c83388d3de2e6525e81b2671fbabd7ab0521589eae9ffa7e2c501cfbe4808d97ced4bcf942af6129d6cec0f2af151cdea1bc0fd14dc85989d8fca1320bdd019a4ba36e41ba24a3687b49bf9c229dc4845bd92d9610f0514224ec75587fa5f1deda609080f3d3a1b6a30da5a41dde3d8e5c1247cc6b32a7808b7204ab32e0d97aa59f69755d8a1170a3a8b5aa3a06bf3f0b31f1116df05cc1075476356e4519d7624dee18ec99a0753017d3af0ac94904e758af09e96e906272714f0b0df77005c71dee65d8ae147c260986c74d43acc4cfcc0259e92e81e379f6db4418b15b945aafb4d69e8718765056bb639a210970ab5e0ff931243613885128425751b31c64586c07b74ba99fbcd48bb43fd447d793a715ff6d360fbfcd967250050754b7333f7a04f84f3d6c72ec177eab5c7644d575405193ac86b32fc87a9be2e4ed5d0f17ec0be1c1fb91f5e2b59b791325b161e9868b8faa4c1f36ce0980c978e3b369b806332ffbefea7f26bdb663925bda89874d13acea978e99978dc720c49f17ffce3a923abbd87a8e1e415d6cdeba12f6f881911d93af7ae3e94d0b3bab401bc3f032c1dfe7dd7d860e7a660d62660f4db6e7495bd0d1d0f9af68f8955b8408700d3237feac16b0ee07f088223293e24806264734eb0728c5fb02f9e707c5d4f6ee61b67e2e44d3f7f6fae1cf80e3f9e3ba8840848a693ef7acc6556af0123d61c5645d51774f4580e3d2b18e89154af10edced6df2b868396af593936dda61ddaa2e7d204c4a2c50ec5c708ef9297e448a29d6d48ba419f4712470164df2abdcf7b22f4863369bceda7d3b7f971ec0c0c80374999c0fa23f864e1f0ad8ad86e30861babd15a436064d32ea6dc80da1d9150405479aa5ae0d436a1b395508e873d6d3b29a96fef3418f34515be69f339601c17004c595d65e5dd8f8ef62f0cf478d21f38bbd336cf7c9217bce308eca9b32d8969e994deff14dbf05ea460fee70f39d029eff7412117f85fb3e5451514278f91a2f038da89478f589cc1dabece85fb7a5c2322f173094c2302807d1a5d2074d45e430a28afd6922da21c35e51a30e3db4a0e308ea75000e5859641aba932fdf2f50529aa1963600b9ac6a6c2b7ac58642ee66cddab3fbc542ff4fcc830a7552bc6af28645d5373ac4bfa70585876532bd0fa76aa8ca4fd0ef24c93c1c22dea5c0c099c4f1caff0ae4e4c7666fe0b26ad974594a2277032db5fdc92b1dcb3245242f46f2edbdb7647fcf876ffbf911bb837bbffb07dcd47082db9df2b0d94afed9341385b02037b1035162d0eeaec4b6aeac93f8a54351abb51241f305410483ac38179ab834661af893c57e44f304d9de605355aeef2ed185608b34ddbc8b57938b66f62326b86c4db2c499caf8a161d6b1fbe0f70b8ad36c7c774952983a286233a68981baf86acd810da19ae0397e6a4cfdad62f8369921c6cea5cd393a4bc65056a98af8ede499b191da4f22a071dab47eb8e55f2a6932b05df241ed31130a5cee4e9327a161ecef57fd0722f8d3a2a7b2b14f47651bdc7142af4436f8c8ba369bbdabd7ea2667c8cc640500acf6b04b016a5c15b4420ea9affe520ff36b0f8c039c38c5adf541f098f54650e45d8ccb776473fb4e5dcfd4b687990612e4b58edefe9acdbb392df2ef78af69061ebd5aa469b83608272c1206b2cb926a5cf74ff85386559b1dd105da9c5239d1903960c710290592708451a17ade25cb4569a39d4ff1a9e5d322698b142190a50f5f85c58d3c3eba5b4d8cb238467fdda020a8544344b3269a8f365f7793ae0d152cbffd9696c9ac4f58e2e8b5c988b421ede5decc37f09df0ca13363ad2d8914bff48cd59d7b4e7b3a12cc7f94c027fa5401e3bb56b8bacf45b0f16fe61e6d3280b2a3c4484bd17422caa652a515a8632dd121673944179e22304c2c80b67ea49ab0ba1ec213836bb7ab92578738876c1930680f370f2f540fde3ad45db2271e98b1865f0e7dcc376a937777486ecb033481deb2f1b99b2443379a4f058a11fc17085f0cf82a29fbfa312d449d16f455fdcf080778202835568b319a8610e6b83a293517f931d21a06ef1b054c9e0141363abbec2cd51e03dbeeea88f96c5286dd9a261821b8ceafb2cc467d556a6227f6c0df63226ac5c5eb1f1b0e2586c25f2207a03d96ce9efd8cc97273e65dc423084b18b654810a14e804313f18c3bbdbd6a1fb8f0c4da2080e113092ffd8df72524432ad5a7d4dc66d7a867b12839d59d57966c53c4f21fde7297a6ae857d89ff25d2273da29cb7ed30beecb09b5651511544422d8204bbda9f31bcbbcacecec9877942d17d2cc714ab4247221b779a4e7facc071ccac2487a3757b6406528a93ee3a23b88ed32c81b07e2c5cd5625a5171a53bfbeaf44f3da3ac7007fbdb73f24b949f14fe2081ee04988b351d1e42b7f5884d2aa93df832f43b5b340b0ce6a06aa4934a82d7ddc569488b66c1849dfe6a3e6d01c68a76a542b30520c3a689b94d5fdf12fdb9d13349462a30076c84e1e4cf13eb80b7439a6e44a5cd462fee505029b30d1c453e06ec218f1beaddc8b02138630c2d681c03315f439c59ce24c77e38a8d60d5d922b7d40adf3516816819ba94617b393e0065922ea678b70d5683917f1f8b67cd0156b50ff9d0b68ea8b40894cecffcde3ed4979fbfd545ddc23ff952e8ce3c5b488114126384add4ccf3e4a2e5e23be80b2ba8ac4744cd2062b6e41d29cf1ac52af81be65a24379641e2648c04790851cb95bd42bcb068825f49df85e2f732e7d7993fa14e0955ae2518f9573953623630024231606e81ce518f5f01a1ea645e5ea87be7cc15534a7fc682206b09c1dd4c121145f248c6df22c83d016b70a5bfa2c5964261e5a946f403a9e5698122694fd4332a97a58d6a13b5c5e796534d69b79467a589bd43032a05a4f534f48efb0c7590faa6d17ae3d4f84474351c34465459fc24530a10c684b7a60b6c7c199cdca93fede795b7052ba4525d8f9df48c45ad676b74ba23f04fb14aa6691395a1e44d78658aa58d5d619bf21dffae31bdf80dc14246f8c1aab4d36dd82d357afd57e2e9ad052191540fabb112a8f26b2467f57e2487e9f616be51761571c143ac353aea8c1b2c30040a99c4cdba0dbf98c884bed4875caca7c4af0bb07fc24982bad5aac0a319fd266c342d52808521b4b04831ef0c89341433ef1c7084eb57f1e1418d57f4e96f4139f871930bf7225e14adf2137ee39db862504c352ba205ecbcf8f1d719e6cf5aa42fa4eab99c5bf35f12e16e24ffd419ff4e2b14173ae385e09ec5e26804992d8cb310e31a974937468b01a99c02c905ee8ce9d6bd36e03b539a51d6dd7d8b5821433394661557e7105627235346f387c2d4422ae4f73fcf55256fab147a76285e92f8693aa355df8b925c39ee0fd6af5038fbf19aa858a3e44d89494070e06642fc23aa5b1ff8decc29291702eab6933e899c3bc0dae1e77e4d7ce4e6dd1a2e0acd31fa0de51e290bd9da14cdfadb143e28ccb402eb90edf2c96ca801783821b9ca9a3624d63d7cb5713b87b9c9bccb32669eafea581d77e9355349fb90bc76f595e1f43d1b57f71123792de294a7a9c11bfdac03d2a20ea17f72c69252c67cf886d1d7acde28de37758eb261daa259912ddf3ea9df60736962b075d07628102aa6be7fbad711e7b8168e35d4c4a54c5e110a2be8838330a3186e849f81f485606380d0bfecdee477e56ec69bcc1c73e82fea3a98e49389b6207b54b04e97e2ec31ea183e17b1df597395279f57638a7529c74a9e6130c96b8b53d0096ebd17e0d5bd8d9118ab7aa9c41726e04f1deca83d529e26fe91b9b3a789bf1d2299eed6bed1059047e868344158e53d78b11f11a116e2616c84d0b1f50f3cda5f8b36f19a55a001de53a30fd3ecee25951af1be1195d30e60503115ef2031aad2afd6aa70871e8938bc41f08cd9975ba8f2bbfd65d6dadabb530881df3e99d7d515bf3e2927844ffb9517dba2bab91a2584b86ebf9957ea907afe80370a38a176160f234800e03cfcf93cbf15d787cf8cff5b47e589bffd45c5af5e4bfeca4009cb2c4f6c8449f95fa38dc2c05fe29668124649312edd163f9b230327740c6441935c7e59e55039abdc0f1ac48eee83d604c777e9669e9fc1a1bc37d16706b90faa35c66be2559aac41671d2714fa126228911590825d8d9bb219520b7f749a3089a7ff9a666506f383f2599389c4625b46516613a80f9e85cd1322844d19029ba23d8fd29e396b77d9933a8a1e6df3980a6581ec6356edf00b2ba41538a936f666c96c6c9a5559af9668c89c7ba2ce763f628c0e597fd233a890b80a9c2e26c51778c1fa12ecc1964097e8ba06d29d03480ccfac01bca8b8f296d4898b2c7a18669190a3274254341ef1d39c0f42709f6192156fac1297d247914264b1b3bc46ac27cdc240b876cfc3b5abb6b8d0bae151a80fb633d3d45c1a9f89eff81afd26b22b5358887cd93042ba0c7f1eb84cde3823d29e641430d3f53c619063530b1fba9ef24da07734ffa4ddc0ce5dcbaf33c952de6cd7597006e5183ae5e8b074aa87289abfbd32a96c1413cdb6934341676349e876c96234ba11fd8d970f00638d37d8bbd5198c1f98ba1158aebd7b2ab60b631f3ef520534af832a4c5b1350c290b52cc3b3fbf81aa3b3dfeffff5da89531b31f88c236fe256938dc714c10a804650419c81f61833bba81b8e246c9c43c52cc76101474956cd4d3b50d4fd7e52d07971b012c63600a175d33a9d7d39d92bcefe504ca97cf0cbae3e67ccd22a07fcf121c6f64a9c4ffaf583fe142e049fbb6e4ff33d68f7954201d5628efb89f1961bb0a8378f6a57310386b7f2c58de9a775bd0f40784d07d18618611dacea18f35857f9e8dc3eaf6a77a9062ba35cdd2df4bc3007bf38f840b83989effc4f1ec37e45c085ffe2002a4de5015d396d19f1b475843631fba708a7efd90134d27bae8ffb0fc53a88fed28aa701719f3062e31ca144ae6341e3c0d027e8ef64fa92970927d131ce0b3dcfc61cc609673d5a806253af6883a571a718715eef9f5adf4494972e47c1a2bc4d1a4c579c39c573563f1e8a9b13594b6667826ff764b946f62f4c0c48242c454f794c4699eedcbd5225ec3074121b15dddac7cdf93b60e0bc69136b7ad2e2ca7eec8569c2592a77e4a3d44c041ecd63f24bb564086a13c605a3013747196fd24fee32e8fa8b4041b3d92b6f58df6fdca429a8c45f9e8b9607f0b0f00038cf30be56ad6d8da076fc7c0e23dc031fd8f70565faf9a569c9afc75475743a34166fe3032ecd53fa2628eb1973939dc1c52a3bc2f0d12b74ea66fd1589ddb94321baf1ffdcff2459305548c8d86968ad5cdeeb646dd261a4341a71c1d511d5d950bff72bb4444e8500ccc2c3ad8f6ab6c09589700ae4393d52ea91f0099545fe25d84d577779aa4aa011b8defd4b5a5f58d88bbe88fa193144c3343eeb7b1c510a204d21bd0b6245fbe1c66b1da967c26ecff3c4c372391df560259ae78827bce2a06a3fc0370ece7495da76314babfebc6cc12071883db0ccb1a58b8d5d56c85503d1d1e78ed4c753c7b5534b4c6e6aaac1cbcb5094d45b705fca8204f67e5f041aa3a0b1be751a87845e281516335f2027f4b705f89782c42d68b086ef2790eb3c14a03b91b1bb5e817da4a3e73ae7341e0ae476ebfcf0e788ed17b5a94d7a7aa3ee623c5e961c98e3afec8d3acea354a11ff9c8a1305b166967b69b26e6f0f2848ff633fee1a293528f81f4721521cf117b53293524bc31bebad04e9f71ef9b8442832298526f91aebaf10098106c0af70e214bbde18462c60276af5e89f20e2c954c574248226b09e462644e0f8df66f63129283545bc7ba8c5089d7c201b6d18c75e4cad2f2c57e4901984b11904efb85b0bbca750827cc2941851015343049eb59fad4be5f567cf2341856125955b1342e785ccd348bdc9f31c2be7098c494a4c49dc53e2c7afe10ab5ff2fc35f128d0991b93069dc94b8925017974f438a2a058aec8d2044b52189a747971ee94f68fc09be7a6e0cc12ff49c08023a23a012be78dbd5346f3e896bc06551fed2599d1883b3f4dfde9f4d71763e2183d1181c9556113853f3162ebdbcd080f18b540bf8dafa2f37ff7babb45ee677049c6fd47e71c289a1128ca5ad3a275a04000f523af6b9b099630b8fbd46d328ac22b342d6489c8f3145b8de84518e25c088471320edc0bb3f45e5ae356b1c1a7e4f92fdab11142ae10be19e587d98d51f073ab69f3049f67f4151f84d963547d2efa47286ea93bf0b2545f608294c693bd47be68e48d4b29761dfd4d31ab66330c16cd5649a734566194e980fa2b2af0390be589202dc99060894ba96eb45296a102e50a1a86058254e00f123773035763f310b333c4d6a42c832a1de220969ebc4c56f1cc2080329407cadcf1306e4a08d3a25bccf2d4bd33876dd5b449fc36a19bac19fc102d4081be20482e3f33a2128d77e00b09e6b3af4238d9bedd24dc3eecf4554e5bfcecceb087e51d566f6d04ccab32f714761f370acc5545cc79e9e837fc52358db3f5d86dd27ea8c5bb7693f58cb803666cdb06f6ad55724ede5564b014e84b2cb0ef617aa0d25564ecf111536ba05e42d1c3a7bfc1533899d5d5a2c182d99dd71b5a03ac7bf7731fffeda31f7d8707511aa6ac6737a1c40beb33c9971edb247c7fd2b224a46160f191567c9b8fe139cf8319ed5727e852b78e0ce2080a709b97f9956e882a9c7918c84208dcd022b733af3bc3b02e84f44680699514c23e6e7808e56d59799a04bc0389a027e977b5bd838155e12cac07b3dc06492b1c908350717f1cee0c5256febe63ce51aa7f413aa6765d093fe1f33f3f89fb56d4f4a23caf3c58796b7ec00e4e9c7d37b3f86ea18dd0a07f9469854585cbfcb9c96eab9c066798ab8d15ee5cd0d2072a42d84ccb3fa874df2790f0bc0be1b136c4a7ae28a046faae5d75d70d177a70b9ebee749ff9e6808226ab25881b85455554b6e10f8829359953fb43fa9098b742fafd2bd85f11eee2eb2795b148da7d2e79c209e30f0bc7555ed5307fa17bd7287fcbaf81d520db9ac438590e9f809815215ae1c16f1bca804ccef55da5bbed26594e5a3a362d7b1a50be3c12116c90ab90e4cc1d5eb639ad6f413836906d4608809159479e0dee95a46a416b00e616a9964e174a75723f2dad3c060e354320b52219a0aae757b55d27d03c7636b72682a3b6c2d2a44e99b3f221f56c61b4c408ce967174ba848656ae2b632fd77892e5dcd5b18b0a0194096455c8e93e457ca1bddb8dba1444a70e1e3e7f01056b2a807e823f5529731401b40ac8ab143be0bac88103b9e1fdd826e6f60bc7b92658509fbf8ea5ef0c964ba9fc41b860b639ae7f555259603713efd25f0c8ebd38cf55ef1aedfc4ad59023f6d233813cea20987d98007421cca899fd28c77e61d03f4b6f8e4aaf1f783e2d7bf154d1d024a7994c6eca9bcbd853e41154699049e6cf79ada9ebb7de0f7d51c5c4de2894ea878fdac055d02f0a6d321810be93b44b89c182d2418ce814060e9ff10b65458e365cf76f8e87025f2bc3569f4de025d633da9abbbbeb9a5642ac955123dd6a2bbb1ab0061f8bb2258146e4674248722f230f554d9024b114f48e60b7909a61d53fe8715ea4185561899f702dbae8f1418f2864312a9794d2cfd5e79f35089649a70831d661c24206ecae122b96580baa286c06887a2ee207c179325c24f2ba10b7f012f6dc2e803c27137aa4e002b85a72c80a162748728f6a70e35397e00b91d300d61d8e74475f41fa236d40b09a157c85ab974c213b2e8e4cb1af84fa3a2a069a1bda681e527e8f90257db7b5991efd46c70d644660ceaf48a7a3a2dc351da36e679b5de5254dfc2201f3ce8be65f714d62c9de382d536a11115fa2147c096befad1f262e5bb517f4a5d08224d1a26d4bcc457db48e87d6088a564ea3394461f4ca4399c7a188c6b5329d0dd60111160e1c9c9e32055aba3024693d498d17173b48a0f990686ca10790ed0fffd6db245b7967d2a11453006643eaf8263042766be909e6456be7d1a6dac73ebccfd3d7049b4c05808915ee82564c609e55d88b3563798bf8e8154909a9613014def6c14c1ef152d4c20c4dc198b3f93ed205e185f2f6b95a10e1b8c2e4137f514eea35c1dfa82c0c0a0c2a7bebd82561582dd43fd81d4badc07a01081bd7752be81496e3241250d382f24445dc7fcd977b2e0079e4010d1ef697ddd34ac9964668674c5f020588421541db4cab5cb2c5430e2c7084e42a21d965c64d989cea6e477dc01914cfbe209065ae0ae97e5422f8a5542f8c821eeaa6dcf6e48f52e7ea5c6155faa9974dc7e3767cc8f2a3b6e60fa27bf4bf57ea15f43a6c0e47b6c6620fc4bb21673be1b9e114a8195f95623f157c5aa71613280dd00bb0d815c8e02cc94190e131f8fb2be5aa1a53708729f1e002f608357ae01432e93f37e574e99f2ebc249e48a6e95332ddf85e60de76dd698f20e6a60564c414dedc74cdd19dd14d8bb797cbec42e1e2ab360d3acb781006abff38ce4c7b658fc67d57b829588db9cfad20b518e6f51543ec5230f15d4fab083630254f5924312a75761ad5ca10c39936e92519c7faa267dc89aa9c01df8a7b2fa132e4ad683848b35dfa072050e01a34a70a8d7ebc45c87148a530c3cb1e3e6940df8e672207317294cdc386b732a473d3e0f1d49504953f17eb014aad8fe731c45d770f4e19fe41462e9f11c94d5c6c3a3371f2dc5acf79038493783e0f11e005e5bdbe9822467f6dde1354ce34c93cfd1ce48c400e27a48afd97b8492e250af298040f7af132815b77127d40debe06adb2e4b862dfbfea62f977d076b57f76103a77b751fd55708d39e7aa3bf8514cdf08e6229588d6b0ecf283456da89b01e5bee7df5789dca4b8d5abb62934ed5751e68c03da6cfb4ba0cb133fa481c307643a288ebf44e6a1c5609cd26d74a1528e62ad6d5c621d07cad20de28ee6277255a17444b35d89babe48371a044fbb1d7402305f4a6188a2475d955eebc33be04654ba66a9530e62f143dadca13c7093c377bb675c4632b1c152bd642b8daf04833516cf0467b7053c74341ff83e3e22fae1dd11b3d7be4057b8e49ca10ed9441b126195a394fa09c98c9e99ccb21d5b7cf9c070b3ddd1a71ae3ef197ad0b621daada017a552beddccd598f1dfaa2caa8223f170760cab940949205f142b48e92c9e538932c5468e495fad5787c5a675b3127f251190408cc1d2b4d03d1139d6fdbb093fdaa0615d1e2a6cc8a94bb656f205cf68865a97fc7dfd98d566dd8bdb4914ab66cd20c0e90d199299cd275e9768dcad9d564a679931e3d9d749c2ba12c10c80cd589fc9d78bcff72554bd12a676b1740c680669f61fb989943e11483fd300aea5804b3925d1f40de757d64e27562fd2ffaedd60286d510ad7051edc3f17e7183e35bd93bab850c2563d5b9910b4b3c18111ebf3b2d44c5c013a91bfe39262f2eb61d19af2b84449ba068aaedf75bf0805f2d864bd1769e56edc398b6f78bb05561d42eff32e8a5daa88b64ae0cec50edc5f72e4f3da6db8a0314ab7696bb8937a09d1d46c3860df611645337472c77fe3d56937c392a621691f0fc7d16b0e02476e2cb48e441288f73e03a03e0a4971d8264f01e15b86ac98f0af6c2ede54a6dc371053731ee89b4aea973980820caccfb0e1386aa943dff305e38b5c6fc84b4036ca0caaf154923e9de23fb61f61c7dd3f65fcb62c9aba0133adbbe8dda813d381ab2e0eb2fc44c71f7170c243e880a8c8793aaa70b1e8398ea98aeb8b8f993dcff17b60fc7b67b8dbc8dcff707a467a59faec762ee89c28a1e02956216365b96e0a2a1c48b2a5d2ef94e96f2fd2e8c2347528f2dbf9efc90a8719e0dd493d43b0fcf3e75069a101188f14dd0b0c41a6fc123801cdb4bdef07f98d753e994b6b86a2d12eeffd01c0bff065c44ef7a9f7a154363804913401e42f9e6b43bab9e1a6250f562f39b752244bc4d0c97cf1e928257a8fb0536433e88ad3ec9e75e79fb2c863ca15b2c9ece6e9034de5f860b7572c8163da70ec043966e62c63f36be02a7361aba10f42269675a1af199db592626fcfde6edbd34fd686e619fbc8fb8525d8842901156fcbebec7381c6a1c13364520f9bae7d318b0d26e26dcf3184da09b2d5c7d61e7b8b0431b76a376d771e89a19b71df151781aea637b36606ee78336026f25858272dd1e61d7d830009e018f2f9ffe088bb4c6d34eb6a61d815d454ba67235aa7cd0f7404709faba6e015414e4ac04e137bb2a3b68fdcbd0478293bef0626a097f0059d3a47e41f63c80ad5659b33fbe71d50225faf2b566a540d82a3df8746137c1d9b246fcba00988a8e1399579d7d2a9a7304ed9d148057a9410797bc6d020ca8aa80e66c21030068fc6eaa04f9d8a4391c56665b66244fcba4449fb12f937a9b5ff24e4420dd1e1f8bdbc000415005236d34fa81962be7b041d43f098fa3c43b6ca44ede3470b62e23a53cf4dedceeec05483a779f5289616c2f91a8dc2dcd0eadd77d195e69232204c090db6b542a8062a4b10a747197cf8acae22ee960acbf0afdab90ac818f982f190190d9a982329f3480999bff9abf7aadeb2da27645e1c984141db85f08c479dae0701e3428353bf19b2638b6e57e86b398e688f2cbefe9aea2d9fba0992d942e5baab8f9b7c27a38f738a14b81021bc78920f2d5b4f1ce827e957b8cee1ca3cb094912b6d8cb076c42c83ad25b955ff792a84b49748b8b4bd0e8ec99fd0126c0aa3fd1d1c396f15094ae56bfd1e93425a4532a2d1e20b09f500bf529704b91d5c560bc907df4092bca52cc0168ec8dc370d367143040022ba0782a0ac752ebc76197d3303f00f6c7961d1143b827393837899b1fa416e9fa9d78a17b5103849ddd0e71963dce0034291fabf44a6fe3e5d03856389044a1f60a7103885331708942b755ba3fa2f4a73136beb9088006e4cddf7694e19911a01293ec8d811314eaf7ec70472be13da04e038fb9c62a5e09c089b748f784f499c233d34404f5ee8c60b603fd65c78f2e9acdee59f847ba604ad074cd21ea92e2361ce10248bf32dacd84bca9920257c50fee36a570c3e3ccce877926456db1543a869ed9b927b58d7635cf0ed22a3de63232450e39cd4273dcb20a2cb5bb6ef139651877661948f29090100ed3f89b6d839e4aab6f9d0fc9fd810332c826f6060fa1aefab2beaf537838879160e29cf00a0017392f8508f90f948c24d8f28c9bb7a4045e5c2805600582af6d515f301ef48c602a0ef58a7372462f50dd0dc14028559f4fa26e060e9cd5216cbe33f04ca1160545efa6f77f4339afb79303fb5c5c3150aef9698cc2e44865b7f67c4026345deba4887d7b8f58354ee3464adcbc8001542c487e0b49ae3681bc1abbe414cdfd6d962b07f8e5f0713d4fb9d0a7b1f70def9e71e849656a74ac13c4b33e60cf2efc4ab98deaf6a6b879245b04de27ec865c85c1752c8cb60145f7aa81d231a73d882a67857935ed701e8f42edd4ff179147297a29d8e1a8933f806ae8f148d0efa0be227c04fcde7fc792945dc02fcd766d4602f79bb4a4cba57e1d9775c39e5e7aa82174121813d4cc5beb314331fc010aca6e03c209bef4f7531b03e531a2e2c863ff1a7998f33393ce7979b037e4a49d46b7689310e1ff89dc5e2d8f159865faa94d37ffffb5e50fa3f77d6f9513ca9fd2012e8f3b9caa3a7eec2e48e22ecedca7abc86673708a49db993e569632c4a4943fe64ee6dd1e8590c5ce9a1cf4873f0c13e4e0df59a316029d3aa4ef7ddc54cf4528552a86fc4d3c53cb36980117aa07bd664161114c27028f01b787020f6f3328234cabd306fbf608a12b4f5d8be804fbfbc65bc0f5a7e465892772d0c02119cd654eae21dddc1d3bb18d0d9a92f6e983982b54baea6d20f63a75c98c2bba11806159fd4edd25fd1bc6274f3743b6a27f3100a47b47f9872ed35d27e94d9940617e417d0760d0abb0e35eaba55fea5f2ca2317a3345c5a516de6b5c94ccbff1c7adda5863aea0bff9070271b29e2a8f5995dddc96c05863d7b5c5864942d1995694a96f80bebc8fe85aee75ca34702e169955a511785630d919e5eac9a566a192cbf60533965ba8ebc6e3438cf1147a573246c5bd8931b525ed72cc2c2d998b5d00248e128b05a03eb66978364250ac6cb5a29ba443d080371688f0c91b241cb811bae512f2027448b5bfc058ed727f2274d9ba430226c071e64331a8ea0cd917cc616d84b8e55c3ca8a3137bb75469eac19727be10d4d1431505b92e0417e9cb9b98ba802057d33a6c7b287aefa452c5d7237b4e00135fdb062b91ad9bc394b2fccdfae657f659addb5e4cec89b3dce6e9ab8d269522db45b51af5ef74c1e183ec367513f3c0cd362e8dcca219b17efbdff305a92de1926d9b69550dd9dd115b30e68f52795425cac316c194ea32de5b8e2080cb910ca6d34c495116d157bef3c858e41fab841adb98633957ea23f873c39f848cd3e2e985e4c0872fefe8c1548522cea6f1ce149394b8fa5b571393b264f2cc03d43cd044cdd58980efa1b24154c0a766a781d02855b836610917256ac984783065b398b09fc0766a2563ddfdc00c647eb7048787d79f925c344020b5ce56ed758ec13bda8c305cd6c2e2b09780ef2aa0fa9120d97b5909a2a32c1abba2f7ac7b43902e09bb7b5e7f2547713b0b977dd003159b58b7e2c56ec1dd548bc565db1527138ca66760fabc4c2e2172c43d81089433ed8cece61658f1e219c67d5a897a6dea98975879335638969f90c744603083f1b7159277477d6b11bda3681a5b9c1f64e29d297c0c65ab64ee007b2ce166bb0820d1a3aef0a161758474f4c4016844968b675349d8919ccae1decd85def0363af522e3cffd4d9bcb33f8e2f3aff7ada16f6d51f1987d89cb5c588164fdbaed7cc53f1abd3d7f5732360d7786d84b17862a7f82bc334d788260cbbc82922663ef147251a3942a6eabeeaa436e9ef1eed5701704e47c90f5ef74051b575b505994537fe01b867c0abd7d4d0289d42032f74cae94c4019befcc1122d8ff56bc08424d61bc6bca675d9b445312831e386c1c960964236b03a9662bb98e79906d33a947b7aae4c033cc3f93d498063e95ebae9d155daffe9f0748f0e296e47461f95476f51f49724c6cbabda5ddb927b08ecf0a6f9df8ea39d3690d8916ef5d77059e50bb2b8c55aa2d7031449e2b4345e027c79b543753f41052fc6052884db6a55089a5c6945313658186d2da6420ecfab9d168ac8f23e4cc98a3ae2e1f2d0054e7065ca6948f6de1456ff716c4e6347c9d4fe12d111fd64944e485c39e869fe89fb66fa16e0e775c0e163dfa54f128ca352e15e72d72a11a1964a7ea4b08061fc692668013e3c43bead84398f7d148b82625045b4a5c74caad68c75c8f04989a28b8b7cce5bcff6a8a68f380c3b8d6cee1ad422228239c86bb2a4920241cb6fb51aaed7415cb8026c5dc5939bd9029744bc9549f492bb16bfd60f56c70408293706862d6a6ca619187ad75c938f6d47e3955f1f37371270ff79e3d8bee13e1f823f7231e547bcc6f25831c424db875503635f5c6e9258619db714c929cefa8b2c296738bcb07342c68a617e8b8c49dd380d84349994935e89e0324ecf00c345aada3c9bd9bb283c28a06397063c3572e790d9fc0e9eaa56d36fdd4afe0617dbb2779662a5c8faeb0e642eca5a27dfa68240525130522ae1731a91f9578f9ca7d6bbc9ee5b8c517e99f11c6372cd27b16a6f1e262422492e644b3714c3ccbd3344c8688beeb88ab3225edf3272bd3f0d616fc7563fcb0e99c132dc22b025397f08feb1485597b942837849cf0c9ba7783344013232840f52508e26778ced5655caebeda0b6c35decef1de2d83e755f8557237864c207498cb35b0d10f2f946f4ecbdb30b45c06018e19521ec4bcc91a34f323c13bfcf57147d6eece7c2ac10bd65c74bcf290c9aaac987d4646aae4dc37987410e2e2f10de20086d33426e5880c52d5d21a33bed7e2526b58369383e5f9e3b4f36c6cfae6745b457384440ef04e03e20087f6a5e1e46779000e0285cf5b157bd7ca7c66997f7ea6db426ed35bb7af4775fd49b86d357088393f0f82319e5a696802f2a754228703707664ea220a293dca37ea7ab524ea669a99ca871e0050e3abf88caf69e627f57e8677e9c13a41b7a3ca718a6091f77df2544fea15c2529f5c5d863db90e7e1e1198f7c1ef706a8ee41b2a7669a0367ece7ac37a4d9a107b7c87dcef13d405839493cdca53f7bf583b96cf8d9c823ab5937cef40b3b5835c35be514affd10d7319a562fff82f9b371b677165a49541d39520d2ecd67306ce10772bd92442b3f832a3c8bc6a0b344503b4d98aec645f28bc8d846dfa52cfa6e402a69175369b24eb8bfe51f2a1005b489a3a85b9daf41ee3344923e58d0e00158dccd9623dc7cf6e2ee250a038dd4352c0cfb3ec8206e93cfd101bba7a34f1bddac5ab9f8d12f7fe93522dc7eb6c1b4809e5b31ab036d6faf1ab60d8ce51eacaf5134bb0fe9f50dcd406352bf1d213a9e4409e0c602e99e45c972d42ba17cc7e831f7ba7d7c9dd0110556bdd3cb3acbc75460d40cdfd7ed4abfce9a3a762a72e2b073a0cb9b4c456067fa74eaf061ec607ee45e831d265417440f85bbcb361519a0501b96c1442ecf98a52a8d14daae39111d8cec408359446bd830b08fba83173910fd01498cb9a2f5bb2ae6ff4b0a58e4bf101e8b1bff76fef76a8d34e0fd3118a8fcba7302d500f7646a7fc8e8651b189a99dcaea8818a8435d8a72ea977dd0aa9140bbd37165c655a7ca2becc09f7faba22cd64533c4e61aa7ee8a0613a583fcc0c4e6815a2357ba1d4aeea80d2b85dda311d617308ebf3abfbe2f3ba5374c127a51d8def34f00139e9c2a977b79cf47eeab444bcd0318044f0d43a93b8b3c34adb9b3ef716fb0a483f23bc7a259aaf5a42a27303f57282bdeb8bd60a960c2dd3795fae30044f13b23849b94ea8a0c73ec270152502da88e7ab7366cbc48a9cd71cbf34e60c862288bc8bdd855ddf2834ebe07b481c9ad0aad8c6202329bb22b198826cd0b695d08a4f7ad7dc2ea48b19cdb5e97d897d609d544692caa2107b5decb808fe3b2e805a26373b048e49fd9f6cdfeb80baad5ce50d55e4ca2cad243acfd9583f2f9dc73dc4efe0e13d490f6958a68550a644663ae57854cfefe6a9676154b6731a0a97791352a47b8e23ff7ea6d33ff2e952a98b9cc205e42c2dfc6a7c4641df79fbc98a6d6db3ac51348caebdc2071bc82435a1671d3a72e1c23714fa6003ead27af4288dd7befab41edaa7e0f19276ed4d85e698d73f0eb7f66b22451777d2549c505575d811fbdd2bfced2a77ea240b79e7c15d381f172c9bf359a7f177ad5f03ef8e9e884badd0b90a1ea29c0a5924906dde543fb586db6914e408d3614507af06cee677c97b28bde419cbe4a83bffd7c27289e8a4e2fad880fbb8edf033f2f59a2f03bec3ed45efb01f4266cd1aafc229706516ba751536de73ea6d1611af85ef48e42f748889eb612df949c46ee30a70a72f6b7ca056cf6bceb18846f1f089f924b3df42e341bb4d2c5131261adc78fe60adefbcb079bf242593011eebe396d996bcbb76cff1aaef99251beb07489fa18e878c3c712129e150fe06ae68c8b528995aba360fe44c48d48be942ad26690066b43972e5ea8716f03c81f152965f3444a6d353c4be14fcea9fec702eadcc1d17896e0c95d6845b84975b8b55a0a7a1d898e6002d3ee67d092833e9a2c57b28d2eaac5b06c15cececdf010bb06ebb76ec67ea3464b7b430f8312966b475e4379ea9fb9154424a5a1c0bd67f9deb37e4ed5bf8d259f568752b2cbf8ed320d1fd06f0a3a00131302562908d260b3f9c4c655ddcc4de8a6f36ab6555e07c6fd7248a815cbe64f543346733d7266e32a0e4fe20b9af07c4b77490c4f6a41f321ee20ee9ad2b8e5ab6df2517bdec7daf8e74704e2fb8b26281aaf07386fc51b9f63d5608eb238df260f3bfb7302573945e70645e4250f5609fdb2a6cd71a946d6b3138d08a33251fe4c7c542c6de29971ebb3327068defab8dde426812e0596f1f6121f28cfd30e59e4b7f5794a1e520cad4ed3d72a4aa2c5f015b02c4833b4e2874ec83cea7da33a291eae1c73af73b838c3ff850fffb342874f8d7b9d32e5ab9d5a003bacb17155b6b1f413c527ad58b762040a0fc139a75236937a8e2ba0e1c72e00c9237d75d99b3c2e0edfb09516cee3237bd6988bbc1f8599ca9f5959dd1ff6e59b5bfe0820dfc95b0ae0647d29338e72c0f2452686ab65afee283d7816bffe2ab01074fe77b76f3531bf187380130e3b8a86588113e1fc25c10bd13caedd3a9294ca579255d8ebb9411a2472c747b2ae8548051a798e9421708196f38af228305bf2ac3211f0840808ea3c10b09f8cee6e6ace64a543eb1f6b56d457b9ac5449987fa38db28876095ad91d7f8e70157fb07099bebc7c67a967fc358fa3e1b1a9f648e6426d8b8631df381785ab1438ca88fae177640cb44f0a7ef17f5827d9f3d8da95cafd1d07912f7f03d6bba4e679d9e667cc3a294def1535d860d76b566c8a96469e23eecb91586983e28dffaf691d8117c926892b6727f3ddc4f0b3eefbb93b259d738b8c725cae3c1cc903095805e1795d445f02afd97e73803ee67ba4b4f0e4a49af374215ec065456fa831a07706f369a87c0968a39c68da90537d873c6e8fc3d0bea788f07780b14064f5e141fdc171428a5b3ac6917ee5b1fb2e0a12ecf5d76ca17d4fff8409a81d2fbfe244c93902950b405c5887777858f1774e6b5920a531078bd371eb7d3ab17df9b3860bb820a1e3084588ecdc57afc0c9564bcc4882a4dc260e0ddd2df3ffa2bdae3e6a75710d62fb350f5d05b1a326eba129919552c862352379347502df4ae223e4d237bd5bfecc09eb0be8eedd9f1319690bc096561af2f9803dbd19ecc195bff18e4e9402efc8578ad644fb6563b1700b95d968720da55e1d5480e6326fe841662b6bc34292c3be8697d1cd1415d237fee12618f6c1a41ae3582cb340dbad767c57c8d452fe0ca4b86813ad2ab8a7ab1b6dae55bdf899ccc18c2e11ab69b77a94ecf6fea43c8c23f1748e747e8d7850c53656735debdaa19a2bd6755bf1ddfb4e8b175bf05da8b3a7938cd78524f097b2cc779e392f3a35779b401d0bbdbf377a57b1b09af1ee89edec8e97c8b4196629bc94b6aacf36d7c325b5df6e6bd8bbe32974e7ec71d81940d86e344c98a2e064dc1a5d5f9a5d401442ce7fe2d1653862662d86777cbcd4e9205804cc9ca0be48788a62950de31cc6af55f7c185ffa06c5244dd57505383778a96c956ccbb607715e3b403c40e2d4466e389a2a22e3d31611153f64e97c26dcd9eeaeb275ace6039b3801d944082bb193888cc0ddc40a052ccb7821aa61052b065923a58570e50f1b01c81e72ee56abef8a27dd55c8472615a9df0c17ffe0bb29c31ed7eac531c952873139ef0fd952e2a6f35c54482447c2e1f337fc495af0a0edb2f8c1e2204a6380b8a06d407ee15045c266f187f91356e27ffd8707fdcacd6a5b7a2a28b5a58ddb668b9cdc5433692f526574e7b2a81cd5608074ab0e7cfcd2a5abe97bb7f8255280d2ce9f0930fd63a9a094b2395c4fd39354c1bad0443011ae28204ee769f3d5dde753afbae75685e27cd55d0b3072fc00e31fe58d09ab181b9a7a6a473c8ba9ecde3ea01372d8543deee5513ce5a388db738e63f02afdd0cbdb12dd391eb9e97285a9de4d34261059208eea72a45889d4c0c6a076bbf73548fcbf02fb7b22c60dd52db0bbe771c713ce1518a368ffe84db9d9fab971f652b9db4f3ae981689bbc1f7bf36a2241336065c7488a11fbc25ca296ad2a3306a08f8d9c49687c989b80fd2f5f37e73446143c1227bb953969877cc2ac3727bf542e66d8ecdf3abc87899c628c681591181304e3b7ed5f7ad70608dbb40cb12059a224959edfae79c75313f0b08d20f593c79376d6d232242b0e2d4dbe7af1e6f036f9b95027e9cb25216b4b26da383f7dd59010d70e8714a1f370dc6803aed0f223108fed4a7318620b10a3b3fbbeceb87722825988664622a1e98a58a420e1de4c400295908594a1bc7b3f6a7ddfaf95563cb7eb432c3b1387c2b9fd31f759798994ee26fc348a1625d63d4a42194c4c2f15ccfe5c8c76655ebb0e8c25b30613c35a259857e22d88ff90719f501f3227a8e514c9e780f3053dde8a853d516b03a3e438d65ba49e2095e26d3f6a9eece31392fe312bb4aad6a9128401101262cb52735e91ffafa13248ead6736cff673d0cb52ad980edcc24b87196015b1d229ac48e69a386ddaa6ed980b22ce081779b3ba614e3a386328400b4c4e69b79c6aadf3cdde3cfe9ad26b49622fb15e0c51355140b03c108da2ea0242af673a294036de4c6a469164a5bed9bfa6941e7454ee1cf4ca7d2aa254f4f254ae676c15bfeaeefd3c042f1db698040d0758aee32954890848e8d36d3d6acba26a43e8a4f9b3d62d68f350522fe954d59f07f581d5a41921d36a36c72d9772c0dc2da4d0dcd2886bb6856fe3097ba35d323137ff4b79258216348300195b68293f08deb6aa34419079bc1b560ba1ee700a8fac4b9e666ff810f5da6f39548444a1292330f96f5ca0bb08e7b9000b028533d616f4b835f11ac883e9e7657343ab4dfb105b52f0e1e55a99e948f092636bc7952cf159641f15e4a5157c6eb7d562e4a6f52335d008aed97d4a9db1019fa65f772edbd681a4bfa768eda57bb7e14a2dfb90bdcd1806c7dff8ef749fa3b1e097fb5996a527e27fc42869b456e58e802bde13e2fb2a828ba27c2a1d1080d9cb9251129409aa2e2aedcf76416637bb05ee80373b1e14453d8d8d97b9c541c67c510303e0336ca2eeac49fa8ec8b1ffce19199dded3b9049fbc6a0ce8c4ab521d7752a760a28bd5e21cb2c37c8f4fd689334d75324c222ab0bb6cbbc058bbf3a6916b304ced43c1455d7fa509a67e23291a479c934b22dace512cf1ecc47094a0354675f6d8815d5a14288caf36e56f8aaa9d72a04e8cc6a53dca8360f6478bad89d1fb47030d92fdb8ea7f77cf927327ed41f245920cd0070ff00ca0994d8fd3135d03489f34fc528eed2f42f91fa297bfeed4ca685d8a8df4184bcf9d61736c0b321daaef77a3ed31cd33a3268ca54e6b685c9dafe51777a0da8a5491be6f2aba8892a5120099cbfe90d578e4a40a7581f40a8b1c363fed555bdb393603f3db239ad05f68069967f4c5511415fdd681c5e0f4a08267d0e57ddef8626a4faa488fb7c507d88ba68683415d1b0859412dc69b4a106bef9ff33563b0bae0fa1b4ad8fe3b68aac438698d47663f1c4ca760bf947934ce3cfee3f7d05b623cde8d542875d76965cef3bb78913ad620c640534dba236626dc23b8e12ec76be4f7b00e840a810c9f06e8b3348c17ad10486a33b450b95e4616723492cfcd799919f0ef9ae13c33119bd0d99cce3fb6f085e0060f178c58ec4473f63f11d1486ca675f978784a045749cfc4a308ec2f8571298159ee1fd82119c53ef2f9b6ee94d7c8ce419f1e5b74e87ec250712a3e83c7930476a92aa89f9a181ec1c845814135356a38694585ecfb1aaab0dee209a9a08ba4279e2904d8165048e1f033a1cb490ac3e4cc972dd0db20266cffea81e3c23f4d24d53da739322f88df1e308cb610f71faaf74b282a4bb91e27919b91d9260fcdaf03a2701dd9c832fea90fb5b5d867cdcd77ad9c83dea4694d89319d28740cd9f218bce5c2578c3b16c3219fd6a9f1b943a197375de4da72a626f8d202c4bc9fa3f1d0b3bf0f2fde46aa8d519f30ff74b08256a009f1122e3794333f1a0d1a43707f6297ecccdcea2063e6f993056980547a331fb09cf1ff34b05b58ba5d17330549724c386c66c091007308ca03a976cb9b8a88f6d268e74233898e3e41b6cb245cdc383c34e5049f22e8bc24aad33d20d92f11515c945e4ab7f6d62ea495859c9b576f034501582027b29c9ded6c8ec4e458402961fb9e35cd5c6ab8bdf67f5c9367808704826b760627b7ad5cb03c0ea3faf679f02a5026cb7839484dfb8b36eece60f1bfcca9d12d21292dd062b2be05100c473f7e1de0ed7121441d0d8fa4330b7e2fb9a3c44ff158d481e851885a23d3199ac34fae24f32e01ed747708659708cdde789026782a769bb6d1bb2faf77cc3060c8044ed52efe3780bbb52ed10280a4d6d7558f388fbdaf3f053b455f63de27bc597b201e6f585dc4055af517a9689cedf8d2b8a7a2141086340a1f07db6ed95465cec11b85942b233702f4aca3d2e4c8a7cffe98a3ef8a3e1da815751955728a8700c5a814fbdb768beb1d571f92024cd4e6bfa919cc24d7a81a7ac9e08b4d0a1c19b5f3180e4391e43c5305daccd3482e715df3262413868333171cad1faf0749118b4fe6a45adad50cfa9ce425e1b96abb59abbf6b45087ef68d8625dda691c0e50b18baaa45cfa35196d7a50210a8aa31d421c0e9f067d2ea386e49e1aec25062d996abf1da292b387683f55a00d90673f6fad3c7f6986102a252aab69f028d866b310568658f04f9ce9b28ab02a96b288f7bf62c7ad7bdb6a60dcf23477540883b388610b898ed7c73777fe47e8a20832b1a2d87ecd87888ae1a2c24dd0b28671da4166b844629620f98682ceed6daa4fa70bd0af64c696d0a17a738a127ee44284f2fa5f650abd7d96bd7344f2fe8a63f278abe4985febfc56c1df31ff95f0e0da8b73d36d48e41a089b39e5f3c23ea0c9fb1f9e45028d3e0a91e820408406d3a4886bdffe07464e6e87e9b7e4f4c90ba1b89f9b25f1cd1bf8203f89a7588da323d8a3a2cd6f206c8d461f3fc52a64ef4cc81567f9afae7d37c6e8a0ed480053a2822c1167ce806f6dcd7da7a6da901c9210c64b21342edeef7769250771085b07903d6fd4f6b5255c03e6571b06ff39a6e02d3c53aec46f10355b84de48545ef7116b7dc5e83ea30f0813545c9100d6ea5bed606fa4b588b337a738fa5b5e21f53d991249a7bf8d739001bec19be4fe264f2883ae2c95ca4a89a862821efa7a9dc91f197adcf2aaa50d78813676983910b5fb3d80463ff2976c7418e78d92a553d5641b98156791c00eb91d87ad0ac6f4a76b4c575bb0048ad073eb2e95cc43602e6d0e550f2e33f93bde586e294aa175e2032554b86997366c817b0e2d676a0d1dffe45df49e434a70c41cff0b0ef18fcc1ceedf12593827a01bd35abb14a50267251c9675d23289897740df76660a2a9f90806d4dae2ed3ea0dd97d2fb9b30e8f4a428721662d553d049728bfda66c82ab0b1714c91c059d1a79508eabeb4478476ff431641f2468b7114f2a23f3d8e680d2531ae0eac7e58412c550529659dfd72574a7da6b062f24a717e28656ab1766e2937067ef65404a6b1f78986847b8dd1deb236733a47dafae19ac7300a2328d06d81f5aa87e48b75f177e2037d684fe99cf3f1dd4fef5148cb22319f78241c50596d4a80169730d61469ad78d7f81a4415b5a9547874343452fa1cfa2ccd6f33b862403d9c484b14f5da1b6aa82947d0ada5ef7e4b0ea13c25a1e918f5842117c17d84f8a9f1d2b5bdb51922ecea9e16628deb1c0197537f01479907bc496104566a49e16452c7e0a15ddca9ba9b59c71d82cdc322b22ed1e76e6aaf5fbb1499fa748b8a916463e88f5a4bc0903bee760c7dbf99c1089b12f99fa5c30678c32ceb0657d71dcb2eda00f30054eef381a2cbdac34c828d8f6c9ca2bdf90d2c96eed8880f75616d660886b0306fb246a83acf019d93932ac2d5f844cd915c32c461afab4bec57c6db3255dda991aa986443a668a887940f0ca62bf5cd4c4f3c287e403fd1747faaaaee01d482c6803650b4c2fd376a673c05f8ead226eec8ac99b8290a7a783a3ae436f7b4adf0ca0836ddf617282daafbab48b4a085c79a6ceac1aca2d2878efe1e12e140c3b332e6d636fdf656d4bfc6940e4ceafcdc98b166114e4918067ea0960680462a16afe18875e8d6f488666afcf93ab948a750212d00ccdcbd999331b2f5ddb6950b10d5aa536464b8597e56100013a82756e39b3fd27f5cefc3aca88780a397bba1d0df6c2b13362002b5f802fdd0df212ef36b996404746072d44c04c1ae7919c55f1df0253d234d794b6b85979cd71b7e2899da55ecc6388e346b1305c833d0438b0cbbfbe2943a381edc06c90dddf0e9399867127757f5ccbeeb46044e8060f37be6a9e93d96fe2d947ab3dadabedc89eeceae5ec8711b24e215bfc4d3b201e2029b80456920cc93517c2b9a1a7e13abee66fe4de76f2a39e548450a1856afa31b8a41821595e0a21fbf5b4e2412a4369a65e245a553b3cb1948f9d93058bbd0c206a55fa4e760053f932b17d1543cc1a77085e9ebfe036b4dc1172568b886d5512ad8f99a10b51f0df867f9e08f4947b3dfb32383a05163a2538210205529136ced041712c5da43cd99fc873d3676071473a5a470254356a90997c079f434737fdfc94171b1795de10802bfcc259bcf622084e51efa42b8ed0a213827ab0675d4777db33b623cbaea53e4daa02f983f540087e7c346f3f4c557e05c343079b5b3cbb275cdf3ca2ae3c8f92a95ffc63efd4d1f22b013dfa57d055eb5e4202ef3ae8037206360438c4520234d99d26da440b44cd379fd54fea823109d2508549f0f0303b8d219920aed9edf19a71e14bcb24828eb5983951bb4b891067eacb5679da02260182788518b46e94b8042e35cf7be0d61b02be86e9ba849b19185e7a3cad71610ad5d827c41f6b98726bd34d23c74537158300a68789a9d6e8dce6c20ba0cee21639f7c0bec978750ed68a065a5afa5b6b05055afd0c649b3fdfdc99d1237b0e676929b991ae8e2ca85f58628c3de33efe8485fb92dd784031cfa22f35b7b8df705c57350e52b8c744ce02f13649ff72748e2bc002da81164a2c9209ed99f37612f33f53cad22ca62b421628300e485c69410bfa0388b8056a3e934ebbdbe0ac06f68f67a22525a3358eb759f157796e4549286952e7e5f8e1cdb8a1f49a0ce73360349a747533fcc55a3716e06754ff2c22846b4e5a63df458f3d7d6ea7d0820bc9b1341f45d7d97e5a56e1678ebe3ceb8ed94007a3bde15d7a2ed6af874a7021c882a906fd6fb3e56e50130367a91f4a7f2361ea16236d1005ada159cd4b5cc950d7e9ec4d3845e1acc8abe9b4091cc2f83c4e5752d5e6b2fae1f911867a5439b0f8b6e7c6d46b6b61f63c6cda58bc2733ace1613fcd275362be16f8a358373e64ee9b3a721f6c842cebc455bdbc636a742e521e12eab40053bf3729db333eb37fa76643afc6f6aefc3a056ecd261ebe73042954eacd6c2b44cec7c3229ff53aa8dd864f27323d63470b3631e606ff6e306c1beead94400bc42ed217829b56e6dc6215718dcb7009e4df5c1873551e66ef3979c3fc56b4aaa32409e2ced8927ddad17614cf66ee4f16ecb14d0acb1f49e932ee4c5e9ab8e86d9ae76b81aa8a19038f73faf88c4aef2f7a7ea264a8e10064c580a2cb4849d28d85b59f8c239584fd4b1f54923d48f514966f49345ed2dfb8e43ee17faee362c1f75d8ea6c94ae9c8d351154f8bf1046200117729cd472502d22476c494af29a050321fddce30c3a5e373fa5cc4c24160be2371ce92be2b35a2051f826516e2c95efb06d2b98662d3e8ae6f66d15024612d2f65baf0006ee01b7852f685d3787c8144a1a887a7200088809f6d31f661fafb098715f274b1d262946a0e547b79022d5bb5e1104cb072d2c18af3569fad77461aef880c5ddd9e9b04345d55b220436e29b288844d72fc6e48aa254e034a9414c40669c79613460bc23277bc105d334ab9529c3c0773115cfc869c45b50150ca6a6c84de24f7765bf5f58b4596d6c9b0bcdbc426eab49de55c5baedb5942fb9f4fd32a3fba594a3b97b174b45bd1afbf480081abe2aee0b87a8265cf879a6228f2b27beddd581ef4aeafb02b3972152b420402f4eb1fac39b6821a5d7d459b81784f998fa8febc0202c9ad82e4fa67d4d46a8e128684551841a5df5ce8f685cb06e1ac488b4a878a7245ba3e9a639fb5c7c8beb394d9972de00922ff240adc9db28f2fb3e86b25fec31387d5e4b3838f0b187cb26d48ed52ce46126b3e30f6b3bd1afebe4efc1ff5af0e478555c353deeafba1366ead71cede6dab42f48f8abe193b026613deb1b4ea381054ac37af6613e02069021cef4eae6e4b1381dff659f1e8e308bb2dbe2349e4ef47f53feea16b467aa64a0ff928c7e3d4e54985f1adbfd80ed76a962094cbff755ac5b78bad6951ecc0b1605c730d598471a80d6198a4263b6e48e14f4e154a1de66a2470db5e585241953059218d09829051b89e9b26e69d3359f91dd03fa16653c3dc3a8be2429180063084cfe1bbc379b02d906d99f64350ed4f8ab9d473ea61db496bc8a61f36aaeb34cd044809b5e928fabfaf5f6c76c4755906aa2a69cf18edcbfbb14ec2de6d9d49e2c932bd9fd853a281958fd19a287ed5f710abfa0fe590f2e9585740141aa24bd4e855104c5e2a07834cf9be1896b942963d8e32ec15f0def7d420b95a7814cca47b88e28ea1db194716940377cf8016e6e9d6f17dc07225fc98212fd884fa8525b131ea2ba4a8cb27c0d63d780cdff5fe83b1f24ae0a32ff6ac31e5fa9abf95e152b4ec65f5ea3e7941116450e7729b9d56a7f70a25f5b0de343f0175f166682d25535e08b7465d112300091489a2b4ae3f0f548ca94cc60ba131a1ae451164ae95deb0a3a384095805bda0f6b0e0768e60b7968ff2b9ba7a8a01b40083359ae7a35c33abfb3e695074f73070d1e65f16e9f2a262e8af392033edcca3d403f06a144ba960a578f757fadcb765e245616815a2f19dd9139fc1dd94348251ee344ef3ad33f2d8dc5c3a4a83c1fd9af2f9bee5bf66277e2a577696eaab17a006a73729be2d13d18bac58e27b2615a252b4ed385db5796dc4315eb5653999e72f8b020ba4a963c720e4b6cc88064f04ff773a9d08110ad7319633e113ce662c947aa9b4ba3b7e5e46afd1ba622a4d30e45f72012761d585791580e1ad0fa596a4c86cd99d0675f0aa2ee3a265067e4fe2d0022f177cd0ea620d0c745ced0d2e34aeda649495cb43eaf02df11926293515bcfaee82066e8b472b75f6266d82a18352851d884cb20bc1a5544b7ea280dbc42470ff4f25177005a04ffa544cc23ba11eced9d8e441b54effb1261d6855ac7f1f38123c4f07c964145b17e64a2949a8420a223708fdbb06c0ecf964aa33b9b70cfbd11dbecbff454bb2bb0db34e5f8f9d978e2969298ab6a74efc0007f9c315e3e5d51248634e63c3e9bfcdc06dc7b14174569788986ab081dd7bcd06c3f5fb901d4a7751f1250ae97262bd65c6017e6f876af0b35e8ecb20a01be809fc1b3863e1b85df960be2dde7b8c8a53fba67042d77c37a693a4272849bdd0049b4b6c238716075f5b9dd72d70aeb7e69015d19258de3c3901bce6ff753e01dbbdbcc3ff1e4551fdf2d7e8f088e0ae58f5c14a075013dd6d7762c62d1e9d15118fc569c5fb8abe9ddaa30da249bf48c6cebb43fa831fd8d1e3be048e0ec86b8bca7ecf27e7f5937c675fc01539ffb899f4a1737e799b35da1d598b6efa2842aff670bac72ac35d2579633bde289f120eccee5e9e5c53f4098ea601db251b2a75fec1c37924c740855acabea60269d340661434cb57c4fcf518dc6f19c74fd1cfb1899308047a67588f87d1f882b3d649062da6b1e34456b28a2f9c783af01a29824f320b0d496b5a65afb1f442d485573e85c3e806b9f09c3305995f77ebdceb9531c122f6f83bec252fa3dac1c9ba534872c889ba1c0a38356dc9a4726c12632e968dc46b999cd9b0f4fd79951c7a9b303d381b5579c72d9641366a1aca0d34f810d38446e187473df4cc32543945aff5dafec995103c1e0e46499c665489d5fd6e71a290c9ee7c873bb47713e673cced0c0e69b6d0765e7aad0b72b790ce4721378582e592a60ebf9e9e409c8f84fd44ba55bf827f79c4f84a65e8d842359ed75f15577150f0729134971b7d607238f20b66e165d81f7d7607431fdf2e09ac09c1f57dca12515202e9c26eb09c93d8f1653dc0b663bf8349797d7b07edb5e18b486ccd4b62c8a96d4726c7a5b8958861215d7d83e725d49b6d6aedc715a55ee66739aae740f21b105c9ecf438e4b634f1a025f6306b5769419f1712c84e3d342800d8c3cbb6e830d526e7e1c3a35b7c81a10e99a8e04fe9e27d89ab0dda410405d64aebf0340d8affd922e3d88c5b609afdf69b33f18b318609fc3151f7bb73c232cc8d94cd93784ca0dddbb8f186bb3066d46c99be7921d791efa48d584ad986c8fd2cdf8b3cb5cdadfc2339d6437f54ab5717cd260e25c61b3a7ee6603803d3e4cd6bac82802a4b52a4a90e61b642c34bc1b5eadf88a0a000e67e49ba0f98081ed2ec9e0c0b48702e6af678a19ab818ff8d02a3e1aed57fbdf8a153f66f78e11280d10c7def9cefb89977dcebd18416f1411caee5d4bcd0eb2764412f357e5cb0e56b6e371df9de90be078102b7397639d4b32ddbdcc053bc3fe1dd8443c4ad0daa7d9466197cf77360bbd083096f1bc513fcdd65dee99ff17555901b586a9729855e742ce9029b5552b800dd5988e71b14d9b9989133c52a6ab37299e848fca466827ccfaf61039411a0ed9b6135c53fcacc56e3c2fe2d36f6f390f7faad990019c190f449afb4a4595487ff5188ca6d62d2802ec0bb47cf4230fb88561ecd6d553b9f084cddd524b4370378bd16b7b2cddce7e1f33bdde56d0f5f645a7250c85a2be3bad33f17beacef1f12470ffc28a8e8ad73150bedb506fbdee5ce973b530016aff2462ddd361fd0da292eb78dd12566c12a995ffdd7d151801c35eb8266c3d6e00ba4ab8b52f1bff8fb2cde952b64f5f884ee78152f63fbb4c7cbe6589d0e9b0458423ed369eda5cc86ef934222dfa59ab96bb418f4ca7548b418968069b50915c001cf9fc20deea60d7dbd304bda509be4ee951ebaa45adac2c82b22156fabb92ef92bde97ed87ad8b24884143164c5349399874a736c26536309a2e270004e6af3d6318e67b0b02e8975ba8f2cc5aa51c4000291a6f8b020e7e1e715e000fabfef206eac87b094af3fbdb15e9fa4847e1a870c3639b4534ed7e0590e624dce4186f20f2c6ade4d94ea96acfc7a69d6792321e03f6b968658eb0861d2defc1e0c9e8b072fe491e2e77673316b05d773d4b6cced1ef4178f4a8a2b23846f27ee532ab191b04537a7d460cf41dcc0664ceb858b1f2ccc2ed0804768f4cd3cecdd6e5f91f479956f61ec849a01295d40adf75fc56f27b2c2afd4dce3accd1520a0f4ee7d32f45df33c96ced18c4ac47d101823cc4eba3add4ff2495bc04c023a467f56bd8e5fb82de63723a64e09b57eb40b1e64de7c7adbbc550d08dd938feaad06f6a9573c9ee04beba7fb52f675534940704d1ce524b45f82d028095de6ff3670c2baa9cd59e8021dde6df6abab04b44758dab8768ab55583dd70b27bdda8afe0694cfac514c9ae60b1e2ef485d301a5096792e42da168b272365928cc111dad662bc997828547c0667c0dfd092a68251d10a44379cb4df1302d051fad2f29e181c94c767fc68dba1ef268453e07b848ddb3ef461b5180578fc9363ded1003d39ab32398ca5c0e1b92ca7419f1048a99d701721ef492b896f4041457a3602efc5c1c0b4c820e11e558c06e9ea323acce86fa9fb1e77cb0fce064e4e8e6ba29375d4fc4ad31c7bf9414a73415466a466de784f99dcad99bdced577e92656f87ec62d3dea06c84facaf38d9c66a3b04b39fd1a717496f2c32e4a9c3daeded57401b6eaffc0283687f9c2223c8c3136d32d2c64c915ab59d3f3111ba7243e7599a6d3bce5e9a2f106a58ba044e2cfbb19e3f6604e6fe72781f496dbc13e145b727c089e8bd46634f9dbae3767acebc0014d8774d372b287ed4ab361db51d1b5195d4c99b42dcdeb910f7a7f7fe314f3304442c7846b3f8c51a9af60daf29396b998c02ef283b245cb7aa7a46c2e0956cfe6b62197db9afc354cfde53e476b44ede2e6a391c59e0b61c4a61fd472137174ca7d31a01c083e6af13c4068320a5118ee4f4efb6cebb39b384f4679dd99f3fb26de9f859304491a1730f3ba446262dff93e2dd12f8594edbea805620905922e7349f19c98fbabafa5117cde3a516380301de068771195eadfae2bf5219c94ba8e56421af9d5249ba117b624c402a2284b3ba30646b52e47a71b79f5f81dadaf78260e9674198d1e4a75f51f2db2061e1d15785051344ed72a9aee210f2bbd7443c92a080a716a78a7aef3c9847c86521109ddb2824a0048c8a6198a07c064094d5b8ac4431b24265d881c9bbc22366ae159ac82464fbfa8fc28fdea6fb483d057d30ddb3c755dfd40665232d9cb75d5f7c419a3abff23832b5e3f61086ac7e692c3058fe6706311000f2a6cebe256a29b1c94d7019043f1ab410a485c5afb78be8b06fdbda35aa0b5a932604ee172dd5307ff50f31dc8d15499a8bc001f506cc50dd64fe2c66916b2425d523a904d66c8741f380c4e8782b734abd0da0d739fc72d5f6ebe7eba439aa76cd9e47d9da14114c627de8009b33e4b38e4ee7f993e16919af968e5531b5ed56fdd77b33b1eafbad3389c65285632dc38bb4ea07bb5bedb7552db1cfce26fa785bc9baa4a44f836893ab203bb252db75cf7d45ecc1ba0845d19b1b16e99f641c9379ba187f3d754c6b561b86f792eb498f92c19457b0deebe99bc9ed33e7aa9a1ab6a8ea229b4d995704ed864aeda44990e7e68bd33271483ac9d2065a329e3a47f0250bc0d09ed848e85b8c0d652236143a236d3f2fd9eb4ec44c9a2825ba15bdf461bee2d0be8ce0dc8e25b40c6e400f49f8b4857ed81fedf4f64518a43a1d23bea0ababbb09058eb73d78b23de21e523abc1c6c388cf8141a4fe07ecb97ac4753eb52804515995fd6732018168769004c3b35e21b1419fe1879cf4b0de6238c6d66904f11f8a386a8809e2a9f90b863a5a6a1148b2c093c730dcfb1b26a211e5c293a13bf1e4e60a2698f06a0550f4ca9bfa850b81056e12adad77404d6226fdd619459b6c8abb697532f48a2d6cfe8cdd298f1c3a63931451feff1c4a575b5250da3da88b6ff021fc611288d1b0546fe20b32c7000e33b4cad327d30a696b2d51f1d5cc8ab05414a7315997d0a012fa839949a7b5a02b00c24b246a599849609d1fd34d7aba44cd2414866c6386a7e60caed2e6ff0c6622472adaa4f83b300d1bdbfd6a9d92b363309680d2c550dd59499dc5abc1e7b1a2e183deeaa4b1a7fb6b3c653472d3bbc4108b394f7422d7e22f77e6da6633a5dad83bf25ade818476e834eae0bc5d3c8061ff7e3a6cc9afe1b2a0e03a2276573dee3d473cefa18f95685a873ca1911bc9712a00837d316e1d0cc10dd49b1be82f0f9aad844619963827b9016aa94bf04a00783700f6e4c08f7b3d14e84081a7cb214fb3d12394cbd05967217a199ef27fafeeb9cd13eaa7c2a3bb81f785afb1920ae77eb34458ae90a3f335a0fb3396fd0e50cd08c0b3241286106577e69b2c978a2c460b60f62bc08b06a991cc8db42bb32a758355f3406e2908459f777cbb3e2b174e9830547aed3cb909faff9926e4f984b67f3a767951b4aa81a01cbe733b1c20f734d491ec9f02cfa06ae6cee79bebb1114388b891d757f00db0f0556608dbc01d0b6092b9da6fa5b922ad1e5903e7aef5998985bcee49f00dfd7b54c6ae40e1248af71dc0c62c96f9b6cbdbe61fa71f35da3ce3cda514b496771c5cfb77a9503bd6aeaccc1297d03047c59b8c0f4b0bfd0d55463216f703c0c78cea40c7f470ff60ec3afc89e7b43fa79191ef68434f6fbd0f5874c6971ac1cdce2a2e7067c5005e8ce3fb7de0411c4321af221f79816f2a95234a66beab8219502214aefd499d6b2567fb549181e5453534f3aa42eb3f0c2409497e8cd7d3ad2ee0cb08c7c16bcde1ddda138008c19f0446fc381ddd1619c0590c113251ec79e28fd6fb522610b785f5eedf992aca9935151d64dd875bc6159a71c9ce813703cfe594c57ec587c81a95863686586f43ae3ce31dc6f10adf80873d22e37842e021474ab99f6401ff5653b3f4e41baa77793bfd17ca7b3fa78efa6eeccd7f658468fb3d1f212f9829715cde9b15b11e3458d67ff1c5c3e83f0843e89dd16fa2e89efd7931953787c02892e279f0d01da023d40eff307372c9815b6a2ca581420738c6b543a92c6f4556752380038e75ee3452471822834fa0cce06bb3d7c635b2bab38d384e3f14b1b5a3f5a1a095d964a5ccbad40f965e246f008228e27261e6c56f9e1177e2314a7f531d7966a10b270f18aac12bdb3e232ef813f3e522abaff98f5d89e14e41bb52609731c375adb3a575c5bf2f834baf32c48ec519924e454fbf4a9c93723f4e7e254f9cc0eec130034fa6da3632127abe150aad1cf671a726b551162d476d838d1885826e5fe3daad11d9423063991e94fa629871cae8912667e5a2164867046f2813212c7ee37546ac9303153c984b2e3fce9e10b6306323831bda25caa35261c8b61790304484acb1f1d2dd123cd6b14f41635270d6eaa31776beb60d0be206ffd7297f6fbce055a5620d87f6bae8f162c384204c93ad0281201a71bf4d43575beeca68103b7d6667b64acebd9b1eba923ecd7c4605a3ef3da601230d37fc6051de717951d1cc863e10abc27cca7d967824ab6ed3b32e0bfcf6255e6c0aaa99616652243cc5868c4a87a1bff783f38363b1a0b4270d25b173d2d8f7ed7a04b572315bdc0314f4ad4ae414f4c62d43892c6f291dacd07673aa9740e7d1bb80e06a31ec719439e8a07a36d9f30d7d3b3dd5dcf50c17f66f7d0a4b93fc771925cb7125680085f762e4101b17f22002ad14edbfdd061a5a667a4e5ca12b1e7c1a7d5fe233d8703d21a0f711d2e78da463bca3939eb428b9959c78c52bb109e56a4d7af84a4e99d3372dd160b96c8d2a906717bd8e68be47560554bd5351d32a088fc15e42da78e4b4af3ceabb09074f85a7675536984a67cc3cdadabf6df1ee88dd9d361fa6e8226b12f9bd3bbc5362f21dc84fd9becadc03789ffab5f1fd2d41ee1f84e80f31de3c3b09ee0c6aab8ce7cce7b4cbdae17c071c26ded18192549dc69f52c90edb82c8a899a0d43682fe82bc48b6422783a6509adbc21c176989430fe805ac64a6d9b7662d5b3c0ab02c2a2ac29f8cee225c49e09a244ee4bb170a32bf3051bbbbf292a77fd5c59b8b587466f812eec4b4b87884b981808005d294b2582564dc7e297d8e016d1bdd0433e51443106d97b0d2978cb86b1bde871c12cbf24bfed94c6063a24d8c48cfcb59c7ab39a932d90692e7243ad9116a4a6f1d599c02d1f882f0191f4b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">加密文章</summary>
    
    
    
    <category term="web安全" scheme="http://example.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="XSS" scheme="http://example.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞</title>
    <link href="http://example.com/2022/07/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2022/07/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-07-14T06:18:19.000Z</published>
    <updated>2022-07-26T09:32:50.986Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="279243fcf3c285ee19f476240b45d63317777885d21eb8fc66c6c83f1c9add6f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">加密文章</summary>
    
    
    
    <category term="web安全" scheme="http://example.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="文件上传" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://example.com/2022/07/14/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2022/07/14/SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2022-07-14T05:57:50.000Z</published>
    <updated>2022-07-26T09:32:50.971Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="32d067b52af4b9cd889d16aa2186ac7a8d4c9f9f7b60d2fe4273632c62f57273">905c4d0cf8e39f3f4fbbf98d9acd6e655bed925345883a3fc5617c3319f3afd3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">加密文章</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(十)SQL编程基础</title>
    <link href="http://example.com/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%8D%81-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%8D%81-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</id>
    <published>2022-06-30T16:12:09.000Z</published>
    <updated>2022-07-26T09:32:50.969Z</updated>
    
    <content type="html"><![CDATA[<p>说明：其实不用缩进的,我这是为了好看。</p><h3 id="一、变量"><a href="#一、变量" class="headerlink" title="一、变量"></a>一、变量</h3><p>1、系统变量 @@变量名</p><p>查看当前系统版本和时间</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select @@variables as "当前版本为",current_date();<br></code></pre></td></tr></tbody></table></figure><p>2、用户变量 @变量名</p><span id="more"></span><p>定义一个用户变量 num 赋值为 100</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">set @num = 100;  -- 方法一<br>set @num := 100; --  方法二<br>select @num := 100; -- 方法三<br>select 100 into @num;  -- 方法四<br>select a into @num from table_name where id = 1; -- 方法五 字段 id = 1的 a 字段的值为 100<br>select @num; -- 查看变量值<br></code></pre></td></tr></tbody></table></figure><p>3、常量 即：不会变量</p><p>4、局部变量  在 begin .. end 之间定义的变量</p><h3 id="二、存储过程-procedure"><a href="#二、存储过程-procedure" class="headerlink" title="二、存储过程  procedure"></a>二、存储过程  procedure</h3><p>declare ：用于声明变量</p><p>default ：用于设置默认值</p><p>call ：用于使用存储过程</p><h4 id="1、创建存储过程"><a href="#1、创建存储过程" class="headerlink" title="1、创建存储过程"></a>1、创建存储过程</h4><p>不传参数</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_1()  -- 创建一个名为proc_1存储过程<br>begin -- 开始 类似java 的{<br>  declare a int default 1; -- 声明一个局部变量 a 默认值为 1 <br>  select * from test where id = a;  -- 查询表test 字段id = 1 的信息<br>end; -- 结束 类似java 的 }<br><br>call proc_1; -- 使用存储过程<br></code></pre></td></tr></tbody></table></figure><p>带传入参数 in </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_2(in a int)  -- in a int 声明一个输入整型参数 a <br>begin <br>  select * from test where id = a;<br>end;<br><br>call proc_2(1); -- 使用存储过程输入参数 1<br></code></pre></td></tr></tbody></table></figure><p>带传入 in 参数和 带出 参数 out  </p><p>输出的参数用来带出处理后得到的数据，并且输出参数要为用户变量即：@变量名</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_3(in a int,out b varchar(10))  -- out 接收输出参数的变量 b<br>begin<br>  select sname into b from test where id = a;  -- 将 name 值 赋给 b<br>end;<br><br>call proc_3(1,@name);  -- 声明用户变量 @name 用来接收输出值<br>select @name; -- 查看变量值<br></code></pre></td></tr></tbody></table></figure><p> 传入参数  inout</p><p>用于从外部传入变量到存储过程后，经过修改后返回修改后的值赋给传入的变量</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc(inout a int)<br>begin<br>  set a = 100;  -- 给a 赋值为 100<br>end;<br>call proc_4(@b);<br>select @b;<br></code></pre></td></tr></tbody></table></figure><h4 id="2、查看存储过程"><a href="#2、查看存储过程" class="headerlink" title="2、查看存储过程"></a>2、查看存储过程</h4><p>查看 proc_1 的定义</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show create procedure proc_1;<br></code></pre></td></tr></tbody></table></figure><p>显示所有存储过程</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show procedure status;<br></code></pre></td></tr></tbody></table></figure><h4 id="3、删除存储过程"><a href="#3、删除存储过程" class="headerlink" title="3、删除存储过程"></a>3、删除存储过程</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop procedure proc_3;<br><br></code></pre></td></tr></tbody></table></figure><h3 id="三、函数-function"><a href="#三、函数-function" class="headerlink" title="三、函数  function"></a>三、函数  function</h3><h4 id="1、创建函数"><a href="#1、创建函数" class="headerlink" title="1、创建函数"></a>1、创建函数</h4><p>function ：函数关键字</p><p>returns : 用于声名函数返回值的类型，这行不用分号结束</p><p>不带出传入参数</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询 id = 1 的学生姓名<br>create function func_1()<br>returns varchar(10) -- 声明返回值的类型为 变长字符串型并且长度为 10<br>begin<br>  declare a varchar(10) default ""; -- 声明一个变长字符串型的 a 局部变量<br>  select sname into a from test where id = 1; <br>  return a; -- 返回 a 的值<br>end;<br><br>select func_1(); -- 使用自定义函数<br><br></code></pre></td></tr></tbody></table></figure><p>带传入参数 ：传参</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 两数相加<br>create function func_2(a int,b int) -- 传入两个整型参数 a,b<br>returns int <br>begin<br>  declare c int;<br>  set c = a + b;  -- 两数相加并赋值给 c<br>  return c;<br>end;<br><br>select func_2(1,2) -- 填入参数 1,2 <br><br></code></pre></td></tr></tbody></table></figure><h4 id="2、查看所有函数"><a href="#2、查看所有函数" class="headerlink" title="2、查看所有函数"></a>2、查看所有函数</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show function status;<br><br></code></pre></td></tr></tbody></table></figure><h4 id="3、删除函数"><a href="#3、删除函数" class="headerlink" title="3、删除函数"></a>3、删除函数</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop function func_3; -- func_3 为函数名<br><br></code></pre></td></tr></tbody></table></figure><h3 id="四、触发器-trigger"><a href="#四、触发器-trigger" class="headerlink" title="四、触发器  trigger"></a>四、触发器  trigger</h3><p>触发器（trigger）是SQL server 提供给程序员和数据分析员来保证数据完整性的一种方法，它是与表事件相关的特殊的存储过程，它的执行不是由程序调用，也不是手工启动，而是由事件来触发，比如当对一个表进行操作（ insert，delete， update）时就会激活它执行。触发器经常用于加强数据的完整性约束和业务规则等。 触发器可以从 DBA_TRIGGERS ，USER_TRIGGERS 数据字典中查到。SQL3的触发器是一个能由系统自动执行对数据库修改的语句。</p><p>触发器可以查询其他表，而且可以包含复杂的SQL语句。它们主要用于强制服从复杂的业务规则或要求。例如：您可以根据客户当前的帐户状态，控制是否允许插入新订单。</p><p>触发器也可用于强制引用完整性，以便在多个表中添加、更新或删除行时，保留在这些表之间所定义的关系。然而，强制引用完整性的最好方法是在相关表中定义主键和外键约束。如果使用数据库关系图，则可以在表之间创建关系以自动创建外键约束。</p><p>触发器与存储过程的唯一区别是触发器不能执行EXECUTE语句调用，而是在用户执行Transact-SQL语句时自动触发执行。</p><p>此外触发器是逻辑电路的基本单元电路，具有记忆功能，可用于二进制数据储存，记忆信息等。</p><p><strong>语法</strong> </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger 触发器名称 [触发时机(before|after)] [触发动作(update|insert|delete)] on [数据表名] for each row<br>begin<br>  [触发后执行的事件]<br>end;<br><br></code></pre></td></tr></tbody></table></figure><h4 id="1、设置插入时触发器"><a href="#1、设置插入时触发器" class="headerlink" title="1、设置插入时触发器"></a>1、设置插入时触发器</h4><p>为 test 表 设置插入时的触发器，当test 表每次新插入一条记录时统计一下记录的总数并赋值给 @count_1</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_1 after insert on test for each row<br>begin<br>  select count(*) into @count_1 from test;<br>end;<br>insert into test values("小刚","男",2); -- 插入一条记录，用于触发触发器<br>select @count_1; -- 查看用户变量 @count_1 的值<br><br></code></pre></td></tr></tbody></table></figure><h4 id="2、设置删除时触发器"><a href="#2、设置删除时触发器" class="headerlink" title="2、设置删除时触发器"></a>2、设置删除时触发器</h4><p>为 test 表 设置删除时的触发器，当test 表每次删除一条记录时统计一下记录的总数并赋值给 @count_2</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_2 after delete on test for each row<br>begin<br>  select count(*) into @count_2 from test;<br>end;<br>delete from test where id = 2; -- 删除一条记录，用于触发触发器<br>select @count_2;  -- 查看用户变量 @count_2 的值<br><br></code></pre></td></tr></tbody></table></figure><p>3、设置修改时触发器</p><p>为 test 表 设置删除时的触发器，当test 表每次修改一条记录时统计一下记录的总数并赋值给 @count_3</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_3 after update on test for each row<br>begin<br>  select count(*) into @count_3 from test;<br>end;<br>update test set sname = "小刚" where id = 1;  -- 更新一条记录，用于触发触发器<br>select @count_3;  -- 查看用户变量 @count_3 的值<br><br></code></pre></td></tr></tbody></table></figure><p>4、查看指定触发器</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show create trigger trig_1;  -- trig_1 为触发器名称<br><br></code></pre></td></tr></tbody></table></figure><p>5、查看所有的触发器</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show triggers;<br><br></code></pre></td></tr></tbody></table></figure><p>6、删除触发器</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop trigger trig_3;<br><br></code></pre></td></tr></tbody></table></figure><h3 id="五、流程控制"><a href="#五、流程控制" class="headerlink" title="五、流程控制"></a>五、流程控制</h3><p>流程控制可以用于，函数、存储过程、触发器等，这里我都用函数来举例。</p><h4 id="1、if-判断语句"><a href="#1、if-判断语句" class="headerlink" title="1、if  判断语句"></a>1、if  判断语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">if 表达式 then<br>  执行体;<br>elseif 表达式 then<br>  执行体;<br>else <br>  执行体;<br>end if;<br><br></code></pre></td></tr></tbody></table></figure><p>创建一个函数max_min ，可以接收两个参数并返回两数之间的大小关系</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function max_min(a int,b int)<br>returns varchar(30)<br>begin<br>  if a &gt; b then  -- 需要 then 然后开始要执行的语句<br>    return concat(a,"大于",b);<br>  elseif a = b then<br>    return concat(a,"等于",b);<br>  else  -- 这个不需要then <br>    return concat(a,"小于",b);<br>  end if;  -- 结束if 语句<br>end;<br>select max_min(1,2),max_min(2,2),max_min(3,2);  -- 验证一下<br><br></code></pre></td></tr></tbody></table></figure><h4 id="2、case-语句"><a href="#2、case-语句" class="headerlink" title="2、case 语句"></a>2、case 语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">case 表达式    /*方法一*/     case         /* 方法二*/<br>when 值 then                 when 表达式 then <br>  执行体;                      执行体;<br>when 值 then                 when 表达式 then <br>  执行体;                      执行体;<br>else                         else<br>  执行体;                      执行体;<br>end case;                    end case;<br><br></code></pre></td></tr></tbody></table></figure><p>创建一个函数max_min_case ，可以接收两个参数并返回两数之间的大小关系</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 这里用了方法二<br>create function max_min_case(a int,b int)<br>returns varchar(30)<br>begin<br>  case<br>  when a &gt; b then<br>    return concat(a,"大于",b);<br>  when a = b then<br>    return concat(a,"等于",b);<br>  else<br>    return concat(a,"小于",b);<br>  end case;<br>end;<br>select max_min_case(1,2),max_min_case(2,2),max_min_case(3,2);  -- 验证一下<br><br></code></pre></td></tr></tbody></table></figure><h4 id="3、while-循化语句"><a href="#3、while-循化语句" class="headerlink" title="3、while 循化语句"></a>3、while 循化语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">while 表达式 do<br>  执行体;<br>end while;<br><br></code></pre></td></tr></tbody></table></figure><p>创建一个函数 func_while ，实现 1+3+5+…+99 </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_while()<br>returns int<br>begin<br>  declare num int default 1;<br>  declare n int default 3;<br>  while n &lt; 100 do   <br>    set num = num + n;  -- 要用 set 来创建每一次的赋值<br>    set n = n + 2;<br>  end while;<br>return num;  -- 返回num 值<br>end;<br>select func_while();  -- 使用一下<br><br></code></pre></td></tr></tbody></table></figure><h4 id="4、repeat-循环语句"><a href="#4、repeat-循环语句" class="headerlink" title="4、repeat 循环语句"></a>4、repeat 循环语句</h4><p>repeat 循化 类似于 java 里的 do{ }while() ,就是先执行一个，再去判断 until 条件，当 until 条件为真时结束循化，条件为假时，继续循环。</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">repeat<br>  执行体;<br>  until 条件; <br>end repeat;<br><br></code></pre></td></tr></tbody></table></figure><p>创建一个函数 func_repeat ，实现 2+4+6+…100</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_repeat()<br>returns int<br>begin<br>  declare num int default 2;<br>  declare n int default 4;<br>  repeat<br>    set num = num + n;<br>    set n = n + 2;<br>    until n &gt; 100  -- 这里不用 ;<br>  end repeat;<br>return num;<br>end;<br>select func_repeat() -- 使用验证一下<br><br></code></pre></td></tr></tbody></table></figure><h4 id="5、loop-循环语句"><a href="#5、loop-循环语句" class="headerlink" title="5、loop 循环语句"></a>5、loop 循环语句</h4><p>扩展知识</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">leave ：类似与 python 的 <span class="hljs-keyword">break</span>,即：结束循环<br>iterate : 类似 python 的 <span class="hljs-keyword">continue</span> 即：结束<span class="hljs-keyword">continue</span> 后的循环体后继续重新循环<br><br></code></pre></td></tr></tbody></table></figure><p>loop 没有内置循环条件，即：没有结束循环的条件，但可以用 leave 来结束循环。</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">startloop:loop  -- startloop 是自定义的一个词，用来做标志的<br>  循环体;<br>  if 表达式 then<br>    levae startloop;  -- 自定义的结束循环<br>  end if;<br>end loop;<br><br></code></pre></td></tr></tbody></table></figure><p> 创建一个函数 func_loop ，实现 1+3+5+…+99 </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_loop()<br>returns int<br>begin<br>  declare num int default 1;<br>  declare n int default 3;<br>  startloop:loop<br>    set num = num + n;<br>    set n = n + 2;<br>    if n &gt; 100 then<br>      leave startloop;<br>  end if;<br>  end loop;<br>return num;<br>end;<br>select func_loop(); -- 使用验证一下<br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;说明：其实不用缩进的,我这是为了好看。&lt;/p&gt;
&lt;h3 id=&quot;一、变量&quot;&gt;&lt;a href=&quot;#一、变量&quot; class=&quot;headerlink&quot; title=&quot;一、变量&quot;&gt;&lt;/a&gt;一、变量&lt;/h3&gt;&lt;p&gt;1、系统变量 @@变量名&lt;/p&gt;
&lt;p&gt;查看当前系统版本和时间&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs mysql&quot;&gt;select @@variables as &quot;当前版本为&quot;,current_date();&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2、用户变量 @变量名&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(九)数据库索引</title>
    <link href="http://example.com/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B9%9D-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B9%9D-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/</id>
    <published>2022-06-30T16:11:25.000Z</published>
    <updated>2022-07-26T09:32:50.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、创建索引"><a href="#一、创建索引" class="headerlink" title="一、创建索引"></a>一、创建索引</h3><p><strong>方法一：</strong></p><p>在创建表时创建索引</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create table abc( id int, sex char(10), name varchar(100), unique index index_id(id)  #创建唯一值索引:id  索引名:为index_id );  <br></code></pre></td></tr></tbody></table></figure><p><strong>方法二：</strong></p><p>用create 创建索引</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create unique index index_sex on abc(sex); #创建唯一值索引:sex  索引名:为index_sex<br></code></pre></td></tr></tbody></table></figure><p><strong>方法三：</strong></p><p>在表创建完之后添加索引</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table abc add unique index index_name(name); # add 添加唯一值索引:name  索引名:为index_name <br></code></pre></td></tr></tbody></table></figure><h3 id="二、删除索引"><a href="#二、删除索引" class="headerlink" title="二、删除索引"></a>二、删除索引</h3><p>删除 名为 ：index_name 的索引</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">drop index index_name on abc;<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、创建索引&quot;&gt;&lt;a href=&quot;#一、创建索引&quot; class=&quot;headerlink&quot; title=&quot;一、创建索引&quot;&gt;&lt;/a&gt;一、创建索引&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;方法一：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在创建表时创建索引&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs plaintext&quot;&gt;create table abc( id int, sex char(10), name varchar(100), unique index index_id(id)  #创建唯一值索引:id  索引名:为index_id );  &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;方法二：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用create 创建索引&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="索引" scheme="http://example.com/tags/%E7%B4%A2%E5%BC%95/"/>
    
  </entry>
  
  <entry>
    <title>python基础之字符串操作</title>
    <link href="http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-28T12:44:34.000Z</published>
    <updated>2022-07-26T09:32:50.980Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、统一英文大小写"><a href="#一、统一英文大小写" class="headerlink" title="一、统一英文大小写"></a>一、统一英文大小写</h3><p>1、统一英文大写  <strong>upper()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"ABcDefg"</span><br><span class="hljs-built_in">print</span>(a.upper())<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  ABCDEFG</p><span id="more"></span><p>2、统一英文小写  <strong>lower()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"ABcDefg"</span><br><span class="hljs-built_in">print</span>(a.lower())<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  abcdefg</p><h3 id="二、去除字符串首尾空格"><a href="#二、去除字符串首尾空格" class="headerlink" title="二、去除字符串首尾空格"></a>二、去除字符串首尾空格</h3><p>1、去除字符串开头空格  <strong>lstrip()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"   hello world!   "</span><br><span class="hljs-built_in">print</span>(a.lstrip())<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!   </p><p>2、去除字符串末尾空格  <strong>rstrip()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"   hello world!   "</span><br><span class="hljs-built_in">print</span>(a.rstrip())<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>     hello world!</p><p>3、去除字符串首位空格  <strong>strip()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"   hello world!   "</span><br><span class="hljs-built_in">print</span>(a.strip())<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!</p><h3 id="三、拆分字符串-split"><a href="#三、拆分字符串-split" class="headerlink" title="三、拆分字符串  split()"></a>三、拆分字符串  split()</h3><p>把字符串 a 以   ,   分割返回列表</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"hello,world,!"</span><br><span class="hljs-built_in">print</span>(a.split(<span class="hljs-string">","</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘hello’, ‘world’, ‘!’]</p><h3 id="四、查找子串的位置-find"><a href="#四、查找子串的位置-find" class="headerlink" title="四、查找子串的位置  find()"></a>四、查找子串的位置  find()</h3><p>说明：find() 函数如果字符串中有所查的子串 返回子串位置 ，否则返回 -1</p><p>1、查找 “world”  在字符串 a 中的位置</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"hello world!"</span><br><span class="hljs-built_in">print</span>(a.find(<span class="hljs-string">"world"</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  6</p><p>2、查找 “xiaoming”  在字符串 a 中的位置</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"hello world!"</span><br><span class="hljs-built_in">print</span>(a.find(<span class="hljs-string">"xiaoming"</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  -1</p><h3 id="五、截取字符串"><a href="#五、截取字符串" class="headerlink" title="五、截取字符串 [:::]"></a>五、截取字符串 [:::]</h3><p>说明： string[起始索引:结尾索引:步涨]</p><p>1、截取字符串  的 前3 位字符 </p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"0123456789"</span><br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>:<span class="hljs-number">3</span>])<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> 012</p><p>2、截取字符串 的 后3 位字符</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"0123456789"</span><br><span class="hljs-built_in">print</span>(a[-<span class="hljs-number">3</span>::])  <span class="hljs-comment"># : 截取全部字符</span><br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  789</p><p>3、截取字符串中位置 为 奇数 的字符</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"0123456789"</span><br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">1</span>::<span class="hljs-number">2</span>])  <span class="hljs-comment"># : 截取全部字符</span><br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  13579</p><p>4、截取字符串中位置 为 偶数 的字符</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"0123456789"</span><br><span class="hljs-built_in">print</span>(a[::<span class="hljs-number">2</span>])  <span class="hljs-comment">#不设置初始值 默认为0</span><br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  02468</p><p>5、将字符串倒序截取输出</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"0123456789"</span><br><span class="hljs-built_in">print</span>(a[::-<span class="hljs-number">1</span>]) <span class="hljs-comment">#截取全部字符串 步涨值为-1</span><br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  9876543210</p><h3 id="六、字符串替换-replace"><a href="#六、字符串替换-replace" class="headerlink" title="六、字符串替换 replace()"></a>六、字符串替换 replace()</h3><p>说明：replace(要替换的字符串,替换后的字符串)</p><p>把 a 字符串 中的 “HELLO” 替换为 “hello”</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"HELLO world!"</span><br><span class="hljs-built_in">print</span>(a.replace(<span class="hljs-string">"HELLO"</span>,<span class="hljs-string">"hello"</span>))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!</p><h3 id="七、获取字符串的长度-len"><a href="#七、获取字符串的长度-len" class="headerlink" title="七、获取字符串的长度 len()"></a>七、获取字符串的长度 len()</h3><p>返回 a 字符串的长度</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"hello world!"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(a))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  12</p><h3 id="八、使字符串居中显示-center"><a href="#八、使字符串居中显示-center" class="headerlink" title="八、使字符串居中显示   center()"></a>八、使字符串居中显示   center()</h3><p>说明：center(width,filechar)  </p><p>width 字符串排版总宽   </p><p>filechar 为填充字符</p><p>1、将 “12321” 在 7个字符宽度里居中显示</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"12321"</span><br><span class="hljs-built_in">print</span>(a.center(<span class="hljs-number">7</span>))<br><br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>   12321 </p><p>2、将 “12321” 在 7个字符宽度里居中显示,并用  *  填充</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"12321"</span><br><span class="hljs-built_in">print</span>(a.center(<span class="hljs-number">7</span>,<span class="hljs-string">"*"</span>))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  *12321*</p><h3 id="九、统计子字符串出现次数-count"><a href="#九、统计子字符串出现次数-count" class="headerlink" title="九、统计子字符串出现次数  count()"></a>九、统计子字符串出现次数  count()</h3><p>说明：count(sub,start=0,end(string))</p><p>sub：搜索的子字符串 </p><p>start：字符串搜索开始位置，默认为第一个位置</p><p>end：字符串搜索结束位置，默认为最后一个位置</p><p>1、统计字符串中 “ab” 出现的次数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"abababcdababab"</span><br><span class="hljs-built_in">print</span>(a.count(<span class="hljs-string">"ab"</span>))<br><br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>  6</p><p>2、统计字符串从位置为 3~9 之间中 “ab” 出现的次数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"abababcdababab"</span><br><span class="hljs-built_in">print</span>(a.count(<span class="hljs-string">"ab"</span>,<span class="hljs-number">3</span>,<span class="hljs-number">9</span>))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  1</p><h3 id="十、新字符串生成-join"><a href="#十、新字符串生成-join" class="headerlink" title="十、新字符串生成  join()"></a>十、新字符串生成  join()</h3><p>1、将一个字符串 在每个字符中间加入 -   返回一个新字符串</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"abcdefg"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"-"</span>.join(a))<br><br></code></pre></td></tr></tbody></table></figure><p>  <strong>&gt;&gt;&gt;</strong>  a-b-c-d-e-f-g</p><p>2、将一个列表中的每个字符连接在一起输出</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"a"</span>,<span class="hljs-string">"b"</span>,<span class="hljs-string">"c"</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">""</span>.join(a))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  abc</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、统一英文大小写&quot;&gt;&lt;a href=&quot;#一、统一英文大小写&quot; class=&quot;headerlink&quot; title=&quot;一、统一英文大小写&quot;&gt;&lt;/a&gt;一、统一英文大小写&lt;/h3&gt;&lt;p&gt;1、统一英文大写  &lt;strong&gt;upper()&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;a = &lt;span class=&quot;hljs-string&quot;&gt;&quot;ABcDefg&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.upper())&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;  ABCDEFG&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="字符串操作" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>python基础之编码与进制</title>
    <link href="http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BC%96%E7%A0%81%E4%B8%8E%E8%BF%9B%E5%88%B6/"/>
    <id>http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BC%96%E7%A0%81%E4%B8%8E%E8%BF%9B%E5%88%B6/</id>
    <published>2022-06-28T12:42:03.000Z</published>
    <updated>2022-07-26T09:32:50.983Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Ascii-码转换-ord"><a href="#一、Ascii-码转换-ord" class="headerlink" title="一、Ascii 码转换   ord()"></a>一、Ascii 码转换   ord()</h3><p>将字符 a 转换为 Ascii码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">"a"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(a))<br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>  97</p><span id="more"></span><h3 id="二、Ascii-码转换为普通字符-chr"><a href="#二、Ascii-码转换为普通字符-chr" class="headerlink" title="二、Ascii 码转换为普通字符 chr()"></a>二、Ascii 码转换为普通字符 chr()</h3><p>将 ascii 码 97 转换为普通字符</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">97</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(a))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  a</p><h3 id="三、进制转换"><a href="#三、进制转换" class="headerlink" title="三、进制转换"></a>三、进制转换</h3><h4 id="1、二-进制转换为其他进制"><a href="#1、二-进制转换为其他进制" class="headerlink" title="1、二 进制转换为其他进制"></a>1、二 进制转换为其他进制</h4><p>2  进制转  8  进制  oct(int(n,2))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>)))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o12</p><p>2  进制转 10 进制  int(n,2)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  10</p><p>2  进制转 16 进制  hex(int(n,2))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>)))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0xa</p><h4 id="2、八进制转换为其他进制"><a href="#2、八进制转换为其他进制" class="headerlink" title="2、八进制转换为其他进制"></a>2、八进制转换为其他进制</h4><p>8 进制转 2 进制  bin(int(n,8))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>)))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1000001000</p><p>8 进制转 10 进制  int(n,8)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  520</p><p>8 进制转 16 进制  hex(int(n,8))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>)))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0x208</p><h4 id="3、十进制转换为其他进制"><a href="#3、十进制转换为其他进制" class="headerlink" title="3、十进制转换为其他进制"></a>3、十进制转换为其他进制</h4><p>10 进制转 2 进制  bin(int(n,10))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1111110010</p><p>10 进制转 8进制  oct(int(n,10))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o1762</p><p>10 进制转  16 进制 hex(int(n,10))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0x3f2</p><h4 id="4、十六进制转换为其他进制"><a href="#4、十六进制转换为其他进制" class="headerlink" title="4、十六进制转换为其他进制"></a>4、十六进制转换为其他进制</h4><p>16 进制转 2 进制  bin(int(n,16))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">16</span>)))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1000000010000</p><p>16 进制转  8 进制  oct(int(n,16))</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">"1010"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">16</span>)))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o10020</p><p>16 进制转  10  进制 int(n,16)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">n = "1010"<br>print(int(n,16))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  4112</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、Ascii-码转换-ord&quot;&gt;&lt;a href=&quot;#一、Ascii-码转换-ord&quot; class=&quot;headerlink&quot; title=&quot;一、Ascii 码转换   ord()&quot;&gt;&lt;/a&gt;一、Ascii 码转换   ord()&lt;/h3&gt;&lt;p&gt;将字符 a 转换为 Ascii码&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;a = &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;ord&lt;/span&gt;(a))&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; &lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;  97&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="进制转换" scheme="http://example.com/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>python基础之常用数据结构</title>
    <link href="http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-06-28T12:40:03.000Z</published>
    <updated>2022-07-26T09:32:50.981Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、列表list（有序）增、删、改、查"><a href="#一、列表list（有序）增、删、改、查" class="headerlink" title="一、列表list（有序）增、删、改、查"></a>一、列表list（有序）增、删、改、查</h3><h4 id="1、在列表增加元素-append"><a href="#1、在列表增加元素-append" class="headerlink" title="1、在列表增加元素  append()"></a>1、在列表增加元素  <strong>append()</strong></h4><p>​      创建一个空列表，增加元素 name 、age</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = []<br>a.append(<span class="hljs-string">"name"</span>)<br>a.append(<span class="hljs-string">"age"</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘age’]</p><span id="more"></span><p>​        在 a 列表中指定位置 1 插入  sex <strong>insert()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">'name'</span>, <span class="hljs-string">'age'</span>]<br>a.insert(<span class="hljs-number">1</span>,<span class="hljs-string">"sex"</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sex’, ‘age’]</p><h4 id="2、删除-元素pop"><a href="#2、删除-元素pop" class="headerlink" title="2、删除 元素pop()"></a>2、删除 元素<strong>pop()</strong></h4><p>1、列表 a 第一个元素和最后一个元素 </p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>]<br>a.pop(<span class="hljs-number">0</span>)<br>a.pop()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘age’]</p><p>2、删除列表中索引为 1 的元素 <strong>del list[index]</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>]<br><span class="hljs-keyword">del</span> a[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sex’]</p><h4 id="3、修改元素"><a href="#3、修改元素" class="headerlink" title="3、修改元素"></a>3、修改元素</h4><p>1、把列表 a 中 第一个位置元素改为 “sno” </p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>]<br>a[<span class="hljs-number">1</span>] = <span class="hljs-string">"sno"</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sno’, ‘sex’]</p><h4 id="4、查询-a-列表的元素-list-index"><a href="#4、查询-a-列表的元素-list-index" class="headerlink" title="4、查询 a 列表的元素 list[index]"></a>4、查询 a 列表的元素 <strong>list[index]</strong></h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>]<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>])<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name</p><p>​      遍历列表 a 所有元素 <strong>for in</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">" "</span>)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex </p><h3 id="二、元组-tuple-有序-查、解包"><a href="#二、元组-tuple-有序-查、解包" class="headerlink" title="二、元组  tuple  (有序 )  查、解包"></a>二、元组  tuple  (有序 )  查、解包</h3><p><strong>元组元素不可改变</strong></p><h4 id="1、创建元组"><a href="#1、创建元组" class="headerlink" title="1、创建元组"></a>1、创建元组</h4><p>创建一个元组，并写入 name、age、sex</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,sex)<br></code></pre></td></tr></tbody></table></figure><h4 id="2、查询元组"><a href="#2、查询元组" class="headerlink" title="2、查询元组"></a>2、查询元组</h4><p>1、查询元组 a 和只查询 第一个元素</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>)<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>])<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  (‘name’, ‘age’, ‘sex’)<br><strong>&gt;&gt;&gt;</strong>  name</p><p>2、遍历所有元素</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">" "</span>)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex </p><h4 id="3、元组解包"><a href="#3、元组解包" class="headerlink" title="3、元组解包"></a>3、元组解包</h4><p>把元组 a 解包</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>)<br>b,c,d = a<br><span class="hljs-built_in">print</span>(b,c,d)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">"name"</span>,<span class="hljs-string">"age"</span>,<span class="hljs-string">"sex"</span>)<br>b,*c = a<br><span class="hljs-built_in">print</span>(b,c)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name [‘age’, ‘sex’]</p><h3 id="三、字典-dict-无序-增、删、改、查"><a href="#三、字典-dict-无序-增、删、改、查" class="headerlink" title="三、字典  dict  (无序) 增、删、改、查"></a>三、字典  dict  (无序) 增、删、改、查</h3><p><strong>键不重复，唯一</strong></p><p><strong>创建一个空字典  a = {}</strong></p><h4 id="1、创建字典"><a href="#1、创建字典" class="headerlink" title="1、创建字典"></a>1、创建字典</h4><p>1、创建在字典 a 中增加 元素 “name”:”xiaoming”  “age”:18</p><p>(1)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {}<br>a[<span class="hljs-string">"name"</span>] = <span class="hljs-string">"xiaoming"</span><br>a[<span class="hljs-string">"age"</span>]  = <span class="hljs-number">18</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p>(2)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">dict</span>(name=<span class="hljs-string">"xiaoming"</span>,age=<span class="hljs-number">18</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘xiaoming’, ‘age’: 18}</p><h4 id="2、删除字典-pop-key-d"><a href="#2、删除字典-pop-key-d" class="headerlink" title="2、删除字典  pop(key,d)"></a>2、删除字典  <strong>pop(key,d)</strong></h4><p>删除字典 a 中的元素 “age”:18</p><p>说明：pop(key,d) key：删除的 键  d：没有对应的键返回 d</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>a.pop(<span class="hljs-string">"age"</span>,<span class="hljs-string">"d"</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘xiaoming’}</p><p>删除字典 a 所有元素  <strong>clear()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>a.clear()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {}</p><h4 id="3、修改字典元素"><a href="#3、修改字典元素" class="headerlink" title="3、修改字典元素"></a>3、修改字典元素</h4><p>把字典 a 的 “name” 键 的值 修改为 “小明”</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>a[<span class="hljs-string">"name"</span>] = <span class="hljs-string">"小明"</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘小明’, ‘age’: 18}</p><h4 id="4、查询字典"><a href="#4、查询字典" class="headerlink" title="4、查询字典"></a>4、查询字典</h4><p>说明：get(key,”d”) 若字典d 中没有key键 则返回 “d” </p><p>1、获取字段 a 的 “name” 键的值  <strong>get()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>b = a.get(<span class="hljs-string">"name"</span>,<span class="hljs-string">"d"</span>)<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>b = a[<span class="hljs-string">"name"</span>]<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  xiaoming</p><p>2、遍历字典 a 所有的<strong>键</strong> <strong>keys()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a.keys():<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">" "</span>)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age </p><p>3、遍历字典 a 所有的<strong>值</strong> <strong>values()</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a.values():<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">" "</span>)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  xiaoming 18</p><p>4、返回字典 a 中 的所有<strong>键对值</strong> <strong>items()</strong>  可迭代</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br>b = a.items()<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  dict_items([(‘name’, ‘xiaoming’), (‘age’, 18)])</p><p>5、遍历所有键对值</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = {<br>    <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>    <span class="hljs-string">"age"</span> :<span class="hljs-number">18</span><br>}<br><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> a.items():<br><span class="hljs-built_in">print</span>(i,<span class="hljs-string">":"</span>,j,end=<span class="hljs-string">" "</span>)<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  name : xiaoming age : 18 </p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、列表list（有序）增、删、改、查&quot;&gt;&lt;a href=&quot;#一、列表list（有序）增、删、改、查&quot; class=&quot;headerlink&quot; title=&quot;一、列表list（有序）增、删、改、查&quot;&gt;&lt;/a&gt;一、列表list（有序）增、删、改、查&lt;/h3&gt;&lt;h4 id=&quot;1、在列表增加元素-append&quot;&gt;&lt;a href=&quot;#1、在列表增加元素-append&quot; class=&quot;headerlink&quot; title=&quot;1、在列表增加元素  append()&quot;&gt;&lt;/a&gt;1、在列表增加元素  &lt;strong&gt;append()&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;​      创建一个空列表，增加元素 name 、age&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;a = []&lt;br&gt;a.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;)&lt;br&gt;a.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;)&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;  [‘name’, ‘age’]&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(八) 数据库视图</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AB-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AB-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/</id>
    <published>2022-05-26T06:55:36.000Z</published>
    <updated>2022-07-27T02:05:39.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、视图介绍"><a href="#一、视图介绍" class="headerlink" title="一、视图介绍"></a>一、视图介绍</h3><p>理解：视图就像一个窗口，每个人在自己家里的窗口往外看，看到的风景是不一样的</p><p>视图就是给表开一个窗口，让每个人(角色)看到的风景不一样(数据) </p><p>窗口 (视图) 原本是没有风景(数据)的，它只是建立在风景(数据表)之上</p><span id="more"></span><h3 id="二、创建视图-view"><a href="#二、创建视图-view" class="headerlink" title="二、创建视图(view)"></a>二、创建视图(view)</h3><h4 id="1、单表创建视图"><a href="#1、单表创建视图" class="headerlink" title="1、单表创建视图"></a>1、单表创建视图</h4><p>要求：给student表,建立视图(stud)，并且视图只有student表的sno、sname、ssex列，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create view stud as select sno,sname,ssex from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="2、多表创建视图"><a href="#2、多表创建视图" class="headerlink" title="2、多表创建视图"></a>2、多表创建视图</h4><p>要求：给student 、sc 两表创建视图(stu_sc) ,并且视图只能有student表的 sno、sname列，sc 表的 cno,degree 列  ,</p><p>并为每个列取名  sno (学号) sname(姓名)  cno(课程号)  degree(成绩)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create view stu_sc(学号,姓名,课程号,成绩) as select sc.sno,sname,cno,degree from student,sc;<br></code></pre></td></tr></tbody></table></figure><h4 id="3、as-后的查询语句可以像查询表一样操作"><a href="#3、as-后的查询语句可以像查询表一样操作" class="headerlink" title="3、as 后的查询语句可以像查询表一样操作"></a>3、as 后的查询语句可以像查询表一样操作</h4><h3 id="三、更改视图-alter"><a href="#三、更改视图-alter" class="headerlink" title="三、更改视图(alter)"></a>三、更改视图(alter)</h3><p>要求：把视图 (stud) 减少sno 列</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter view stud as select sname,ssex from student;<br></code></pre></td></tr></tbody></table></figure><h3 id="四、查看视图详细信息"><a href="#四、查看视图详细信息" class="headerlink" title="四、查看视图详细信息"></a>四、查看视图详细信息</h3><p>full</p><p>查看所有表的类型，视图和表</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">show full tables;<br></code></pre></td></tr></tbody></table></figure><p>desc</p><p>查看视图结构 </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">desc stud;<br></code></pre></td></tr></tbody></table></figure><h3 id="五、更新视图内容"><a href="#五、更新视图内容" class="headerlink" title="五、更新视图内容"></a>五、更新视图内容</h3><h4 id="1、插入数据-insert-into"><a href="#1、插入数据-insert-into" class="headerlink" title="1、插入数据(insert into)"></a>1、插入数据(insert into)</h4><p>要求：向stud 视图插入 一条数据 (“小明”,”男”)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">insert into stud values ("小明","男");<br></code></pre></td></tr></tbody></table></figure><h4 id="2、更改数据-update"><a href="#2、更改数据-update" class="headerlink" title="2、更改数据(update)"></a>2、更改数据(update)</h4><p>要求：把stud 表 sname 列 的小明 改为 小刚</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">update stud set sname = "小刚" where sname = "小明";<br></code></pre></td></tr></tbody></table></figure><h4 id="3、删除数据-delete-from"><a href="#3、删除数据-delete-from" class="headerlink" title="3、删除数据(delete from)"></a>3、删除数据(delete from)</h4><p>要求：向stud 视图删除 一条数据 条件为 sname = “小刚”</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">delete from stud where sname = "小刚";<br></code></pre></td></tr></tbody></table></figure><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>1、视图是逻辑上存在的，而数据表是真实存在的，视图是一个编译好了的SQL语句。</p><p>2、在更新视图内容时，实际上是对原表的操作，即：</p><p>修改原表，视图也会相应的发生该表，反之也是。</p><p>3、视图只能查看原表的部分内容</p><p>4、当视图是原表使用聚合函数时，不能修改</p><p>5、待补</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、视图介绍&quot;&gt;&lt;a href=&quot;#一、视图介绍&quot; class=&quot;headerlink&quot; title=&quot;一、视图介绍&quot;&gt;&lt;/a&gt;一、视图介绍&lt;/h3&gt;&lt;p&gt;理解：视图就像一个窗口，每个人在自己家里的窗口往外看，看到的风景是不一样的&lt;/p&gt;
&lt;p&gt;视图就是给表开一个窗口，让每个人(角色)看到的风景不一样(数据) &lt;/p&gt;
&lt;p&gt;窗口 (视图) 原本是没有风景(数据)的，它只是建立在风景(数据表)之上&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="视图" scheme="http://example.com/tags/%E8%A7%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(七) 聚集函数查询</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%83-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%9B%9B-%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%83-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%9B%9B-%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-05-26T06:53:35.000Z</published>
    <updated>2022-07-26T09:32:50.954Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、按某列-升-降-排序-order-by"><a href="#一、按某列-升-降-排序-order-by" class="headerlink" title="一、按某列   升   降   排序(order by)"></a>一、按某列   升   降   排序(order by)</h3><h4 id="1、按升序排序-asc"><a href="#1、按升序排序-asc" class="headerlink" title="1、按升序排序(asc)"></a>1、按升序排序(asc)</h4><p>说明：系统默认按升序排序</p><p>表：sc</p><p>字段： * (所有)  degree(成绩)</p><p>要求：查询sc 并 让 degree 按升序输出</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc order by degree asc;<br></code></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc order by degree;<br></code></pre></td></tr></tbody></table></figure><p>两个或多个字段 用逗号隔开</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc order by degree asc,sno asc;<br></code></pre></td></tr></tbody></table></figure><h3 id="2、按降序排序-desc"><a href="#2、按降序排序-desc" class="headerlink" title="2、按降序排序(desc)"></a>2、按降序排序(desc)</h3><p>表：sc</p><p>字段： * (所有)  degree(成绩)</p><p>要求：查询sc 并 让 degree 按降序输出</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc order by degree desc;<br></code></pre></td></tr></tbody></table></figure><h3 id="二、按组合输出-group-by-having"><a href="#二、按组合输出-group-by-having" class="headerlink" title="二、按组合输出(group by [having])"></a>二、按组合输出(group by [having])</h3><h4 id="1、简单分组"><a href="#1、简单分组" class="headerlink" title="1、简单分组"></a>1、简单分组</h4><p>表：student</p><p>字段：classno  </p><p>函数：count()  统计列</p><p>要求：统计输出各班学生的人数</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select classno,count(*) from student group by classno;<br></code></pre></td></tr></tbody></table></figure><h4 id="2、分组加条件-having"><a href="#2、分组加条件-having" class="headerlink" title="2、分组加条件(having)"></a>2、分组加条件(having)</h4><p>表：sc</p><p>字段：sno </p><p>函数：count()  统计列</p><p>要求：查询选修了2门以上课程的学生学号和选修门数。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno,count(*) from sc group by sno having count(*) &gt;2;<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、按某列-升-降-排序-order-by&quot;&gt;&lt;a href=&quot;#一、按某列-升-降-排序-order-by&quot; class=&quot;headerlink&quot; title=&quot;一、按某列   升   降   排序(order by)&quot;&gt;&lt;/a&gt;一、按某列   升   降   排序(order by)&lt;/h3&gt;&lt;h4 id=&quot;1、按升序排序-asc&quot;&gt;&lt;a href=&quot;#1、按升序排序-asc&quot; class=&quot;headerlink&quot; title=&quot;1、按升序排序(asc)&quot;&gt;&lt;/a&gt;1、按升序排序(asc)&lt;/h4&gt;&lt;p&gt;说明：系统默认按升序排序&lt;/p&gt;
&lt;p&gt;表：sc&lt;/p&gt;
&lt;p&gt;字段： * (所有)  degree(成绩)&lt;/p&gt;
&lt;p&gt;要求：查询sc 并 让 degree 按升序输出&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="聚集函数查询" scheme="http://example.com/tags/%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(六) 嵌套查询</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AD-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%89-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AD-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%89-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-05-26T06:51:45.000Z</published>
    <updated>2022-07-26T09:32:50.967Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、嵌套查询-in"><a href="#一、嵌套查询-in" class="headerlink" title="一、嵌套查询(in)"></a>一、嵌套查询(in)</h3><p>表：student 、sc</p><p>字段：cno 、degree sname</p><p>作用：从student表查询到的结果当sc 表的查询条件的一部分</p><p>要求：查询 “小明” 同学所选的 cno 和degree 。  </p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select cno,degree from sc where sno in (select sno from student where sname = "小明");<br></code></pre></td></tr></tbody></table></figure><h3 id="二、嵌套查询-exists"><a href="#二、嵌套查询-exists" class="headerlink" title="二、嵌套查询(exists)"></a>二、嵌套查询(exists)</h3><p>exists 只会返回true 和 false</p><p>表：student</p><p>字段：sno,sname,sbirthday</p><p>作用：把外层查询到的结果，放入内层去对比 结果成立 返回 true 反之 返回false</p><p>要求：(1)   查询姓李的同学和年龄超过30岁的学号、姓名、年龄。  </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno,sname,year(current_date)-year(sbirthday) from student a where sname like "李%" and exists(select * from student where year(current_date)-year(a.sbirthday)&gt;30);<br></code></pre></td></tr></tbody></table></figure><h3 id="三、相关子查询-in"><a href="#三、相关子查询-in" class="headerlink" title="三、相关子查询(in)"></a>三、相关子查询(in)</h3><p>依赖于外层查询结果</p><p>表：sc</p><p>字段：* (所有)</p><p>作用：把外层查询到的结果，放入内层去查询再返回结果</p><p>要求：查询 每课成绩大于平均成绩的信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc a where degree &gt; (select avg(degree) from sc where a.sno=sc.sno);<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、嵌套查询-in&quot;&gt;&lt;a href=&quot;#一、嵌套查询-in&quot; class=&quot;headerlink&quot; title=&quot;一、嵌套查询(in)&quot;&gt;&lt;/a&gt;一、嵌套查询(in)&lt;/h3&gt;&lt;p&gt;表：student 、sc&lt;/p&gt;
&lt;p&gt;字段：cno 、degree sname&lt;/p&gt;
&lt;p&gt;作用：从student表查询到的结果当sc 表的查询条件的一部分&lt;/p&gt;
&lt;p&gt;要求：查询 “小明” 同学所选的 cno 和degree 。  &lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="嵌套查询" scheme="http://example.com/tags/%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(五) 多表链接查询</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%94-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BA%8C-%E5%A4%9A%E8%A1%A8%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%94-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BA%8C-%E5%A4%9A%E8%A1%A8%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-05-26T06:50:35.000Z</published>
    <updated>2022-07-26T09:32:50.964Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、笛卡尔积-连接查询"><a href="#一、笛卡尔积-连接查询" class="headerlink" title="一、笛卡尔积   连接查询"></a>一、笛卡尔积   连接查询</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用笛卡尔积进行连接查询</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select student.*,sc.* from student,sc;<br></code></pre></td></tr></tbody></table></figure><h3 id="二、内连接查询-inner-join-on"><a href="#二、内连接查询-inner-join-on" class="headerlink" title="二、内连接查询(inner join   on)"></a>二、内连接查询(inner join   on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用内连接进行查询</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select student.*,sc.* from student inner join sc on student.sno=sc.sno;<br></code></pre></td></tr></tbody></table></figure><h3 id="三、左连接查询-left-join-on"><a href="#三、左连接查询-left-join-on" class="headerlink" title="三、左连接查询(left  join on)"></a>三、左连接查询(left  join on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用左连接进行查询</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select student.*,sc.* from student left join sc on student.sno=sc.sno;<br></code></pre></td></tr></tbody></table></figure><h3 id="四、右连接查询-rigth-join-on"><a href="#四、右连接查询-rigth-join-on" class="headerlink" title="四、右连接查询(rigth join on)"></a>四、右连接查询(rigth join on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用右连接进行查询</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select student.*,sc.* from student right join sc on student.sno=sc.sno;<br></code></pre></td></tr></tbody></table></figure><h3 id="五、内连接查询-inner-join-on"><a href="#五、内连接查询-inner-join-on" class="headerlink" title="五、内连接查询(inner join on)"></a>五、内连接查询(inner join on)</h3><p>表：student a  (student 取名为a)</p><p>字段：student.* (student 表的所有字段)  a.sno (a表的sno字段)</p><p>要求：student表用内连接进行查询</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student a inner join student b on a.sno=b.sno;<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、笛卡尔积-连接查询&quot;&gt;&lt;a href=&quot;#一、笛卡尔积-连接查询&quot; class=&quot;headerlink&quot; title=&quot;一、笛卡尔积   连接查询&quot;&gt;&lt;/a&gt;一、笛卡尔积   连接查询&lt;/h3&gt;&lt;p&gt;表：student 、 sc&lt;/p&gt;
&lt;p&gt;字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)&lt;/p&gt;
&lt;p&gt;要求：student 和 sc 表用笛卡尔积进行连接查询&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="多表链接" scheme="http://example.com/tags/%E5%A4%9A%E8%A1%A8%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(四) 简单查询</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%80-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%80-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-05-26T06:48:46.000Z</published>
    <updated>2022-07-26T09:32:50.974Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、简单查询"><a href="#一、简单查询" class="headerlink" title="一、简单查询"></a>一、简单查询</h3><h4 id="1、查询student-数据表所有数据"><a href="#1、查询student-数据表所有数据" class="headerlink" title="1、查询student 数据表所有数据"></a>1、查询student 数据表所有数据</h4><p>表：student</p><p>字段：* (所有)</p><p>条件：无</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="2、查询student-表的-指定字段数据"><a href="#2、查询student-表的-指定字段数据" class="headerlink" title="2、查询student 表的 指定字段数据"></a>2、查询student 表的 指定字段数据</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：无</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno,sname,ssex from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="3、查询student-表的-指定字段数据-并改列名显示-as"><a href="#3、查询student-表的-指定字段数据-并改列名显示-as" class="headerlink" title="3、查询student 表的 指定字段数据   并改列名显示 (as)"></a>3、查询student 表的 指定字段数据   并改列名显示 (as)</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：[sno  改为  学号 ]、[sname  改为 姓名 ]、[ssex 改为 性别 ]</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno as 学号,sname as 姓名,ssex as 性别 from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="4、查询sc-表-打折-数学运算"><a href="#4、查询sc-表-打折-数学运算" class="headerlink" title="4、查询sc 表  打折(数学运算)"></a>4、查询sc 表  打折(数学运算)</h4><p>表：sc</p><p>字段：sno(学号)、degree(成绩)</p><p>条件：成绩打八折</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno,degree*0.8 from sc;<br></code></pre></td></tr></tbody></table></figure><h4 id="5、查询student-表-指定条件-where"><a href="#5、查询student-表-指定条件-where" class="headerlink" title="5、查询student 表 指定条件(where)"></a>5、查询student 表 指定条件(where)</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：ssex 字段数据为 “男”</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno,sname,ssex from student where ssex = "男";<br></code></pre></td></tr></tbody></table></figure><h4 id="6、查询sc-表-取区间-between-and-、-not-between-and"><a href="#6、查询sc-表-取区间-between-and-、-not-between-and" class="headerlink" title="6、查询sc 表  取区间[(between  and)、(not between and)]"></a>6、查询sc 表  取区间[(between  and)、(not between and)]</h4><p>表：sc</p><p>字段：* (所有)、degree(成绩)</p><p>条件：只要查询 degree(成绩) 在80~90 的 所有数据(between  and)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc where degree between 80 and 90;<br></code></pre></td></tr></tbody></table></figure><p>条件：只要查询 degree(成绩) 不在80~90 的 所有数据(not between and)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc where degree not between 80 and 90;<br></code></pre></td></tr></tbody></table></figure><h4 id="7、查询sc-表-取集合-in-、-not-in-、-or"><a href="#7、查询sc-表-取集合-in-、-not-in-、-or" class="headerlink" title="7、查询sc 表  取集合[(in)、(not in)、(or)]"></a>7、查询sc 表  取集合[(in)、(not in)、(or)]</h4><p>表：sc</p><p>字段：* (所有)、degree(成绩)</p><p>条件：只要查询 degree(成绩) 为 {92、85、90} 的数据(in)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc where degree in (92,85,90);<br></code></pre></td></tr></tbody></table></figure><p>条件：只要查询 degree(成绩) 不为 {92、85、90}的 数据(not in)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc where degree not in (92,85,90);<br></code></pre></td></tr></tbody></table></figure><p>条件：只要查询 degree(成绩) 为 90 或 85 的 数据(in or)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from sc where degree in (90) or degree in (85);<br></code></pre></td></tr></tbody></table></figure><h4 id="8、查询student-表-空值-null"><a href="#8、查询student-表-空值-null" class="headerlink" title="8、查询student 表  空值(null)"></a>8、查询student 表  空值(null)</h4><p>表：student</p><p>字段：classno (班级号)</p><p>条件：查看 classno 字段   为空值的行(is)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where classno is null;<br></code></pre></td></tr></tbody></table></figure><p>条件：查看 classno 字段   不为空值的行(not is)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where classno is not null;<br></code></pre></td></tr></tbody></table></figure><h4 id="9、查询student-表-只取-前两条-limit"><a href="#9、查询student-表-只取-前两条-limit" class="headerlink" title="9、查询student 表  只取 前两条(limit)"></a>9、查询student 表  只取 前两条(limit)</h4><p>表：student</p><p>字段：* (所有)</p><p>条件：只要查询到的 前两条</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student limit 2;<br>select * from student limit 0,2;<br></code></pre></td></tr></tbody></table></figure><h3 id="二、简单查询-模糊查询"><a href="#二、简单查询-模糊查询" class="headerlink" title="二、简单查询(模糊查询)"></a>二、简单查询(模糊查询)</h3><h4 id="1、查询student-表-查询姓刘的学生-like"><a href="#1、查询student-表-查询姓刘的学生-like" class="headerlink" title="1、查询student 表  查询姓刘的学生(like)"></a>1、查询student 表  查询姓刘的学生(like)</h4><ol><li>模糊查询：escape “#”  把 “#”  用于转义字符的字符 </li><li><pre><code>                     --&gt; % 匹配任意多个字符 </code></pre></li><li><pre><code>                     --&gt; _  匹配单个任意字符</code></pre></li></ol><p>表：student</p><p>字段：* (所有)、sname(姓名)、sdept(学院)</p><p>条件：只要查询sname(姓名)   姓刘 的信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where sname like "刘%";<br></code></pre></td></tr></tbody></table></figure><p>条件：只要查询sname(姓名)   姓刘   单名   的信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where sname like "刘_";<br></code></pre></td></tr></tbody></table></figure><p>条件：只要查询sdept(学院) 为 “计算机_”  开始   的信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where sdept like "计算机#_%" escape "#";<br></code></pre></td></tr></tbody></table></figure><h4 id="2、查询student-表-查询姓刘的学生-regexp"><a href="#2、查询student-表-查询姓刘的学生-regexp" class="headerlink" title="2、查询student 表  查询姓刘的学生(regexp)"></a>2、查询student 表  查询姓刘的学生(regexp)</h4><p>正则表达式：regexp   </p><p>表：student</p><p>字段：* (所有)、sname(姓名)、sdept(学院)</p><p>条件：只要查询sdept(学院) 为 “计算机_”  开始   的信息</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select * from student where sdept regexp "^计算机_.";<br></code></pre></td></tr></tbody></table></figure><h3 id="三、简单查询-引入函数"><a href="#三、简单查询-引入函数" class="headerlink" title="三、简单查询 (引入函数)"></a>三、简单查询 (引入函数)</h3><h4 id="1、查询student-表-学生年龄-year-、current-date"><a href="#1、查询student-表-学生年龄-year-、current-date" class="headerlink" title="1、查询student 表  学生年龄 [ year()、current_date()]"></a>1、查询student 表  学生年龄 [ year()、current_date()]</h4><ol><li>函数：1、year()  取出年份</li><li><pre><code>       2、current_date()  现在的日期</code></pre></li></ol><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)、sbirthday(出生日期)</p><p>条件：用函数处理 sbirthday 字段 ，拿到年龄</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select sno as 学号,sname as 姓名,ssex as 性别,year(current_date())-year(sbirthday) as 年龄 from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="2、查询student-表-去重复-distinct"><a href="#2、查询student-表-去重复-distinct" class="headerlink" title="2、查询student 表  去重复 (distinct)"></a>2、查询student 表  去重复 (distinct)</h4><p>函数：1、distinct 去除重复值</p><p>表：student</p><p>字段：ssex(性别)、</p><p>条件：用函数处理 ssex字段 ，拿到所拥有的性别</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select distinct(ssex) from student;<br></code></pre></td></tr></tbody></table></figure><h4 id="3、查询sc-表-数学函数、"><a href="#3、查询sc-表-数学函数、" class="headerlink" title="3、查询sc 表  数学函数、"></a>3、查询sc 表  数学函数、</h4><ol><li>函数： 1、max() 提取最大值</li><li><pre><code>        2、min() 最小值</code></pre></li><li><pre><code>        3、avg() 平均值</code></pre></li><li><pre><code>        4、count() 统计行数</code></pre></li></ol><p>表：sc</p><p>字段：degree(成绩) </p><p>条件：查询degree 最大值</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select max(degree) from sc;<br></code></pre></td></tr></tbody></table></figure><p>条件：查询degree 最小值</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select min(degree) from sc;<br></code></pre></td></tr></tbody></table></figure><p>条件：查询degree 平均值</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select avg(degree) from sc;<br></code></pre></td></tr></tbody></table></figure><p>条件：查询degree 总行数</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">select count(degree) from sc;<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、简单查询&quot;&gt;&lt;a href=&quot;#一、简单查询&quot; class=&quot;headerlink&quot; title=&quot;一、简单查询&quot;&gt;&lt;/a&gt;一、简单查询&lt;/h3&gt;&lt;h4 id=&quot;1、查询student-数据表所有数据&quot;&gt;&lt;a href=&quot;#1、查询student-数据表所有数据&quot; class=&quot;headerlink&quot; title=&quot;1、查询student 数据表所有数据&quot;&gt;&lt;/a&gt;1、查询student 数据表所有数据&lt;/h4&gt;&lt;p&gt;表：student&lt;/p&gt;
&lt;p&gt;字段：* (所有)&lt;/p&gt;
&lt;p&gt;条件：无&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="简单查询" scheme="http://example.com/tags/%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(三) 数据数据增、删、改</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%A2%9E%E3%80%81%E5%88%A0%E3%80%81%E6%94%B9/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%A2%9E%E3%80%81%E5%88%A0%E3%80%81%E6%94%B9/</id>
    <published>2022-05-26T06:46:23.000Z</published>
    <updated>2022-07-26T09:32:50.961Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、-向数据表插入数据-insert-into"><a href="#一、-向数据表插入数据-insert-into" class="headerlink" title="一、 向数据表插入数据(insert into)"></a>一、 向数据表插入数据(insert into)</h3><p><strong>表</strong>：teaching<br><strong>数据</strong>：C01    101 | C02    102<br><strong>字段</strong>：cno    tno</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">insert into teaching(cno,tno) values("C01","101"),("C01","102");<br></code></pre></td></tr></tbody></table></figure><p>在添加的数据填满表字段时，可省掉字段,</p><ul><li>即：<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">insert into teaching values("C01","101"),("C01","102");<br></code></pre></td></tr></tbody></table></figure></li></ul><h3 id="二、-删除数据表的数据-delete"><a href="#二、-删除数据表的数据-delete" class="headerlink" title="二、 删除数据表的数据(delete)"></a>二、 删除数据表的数据(delete)</h3><h5 id="1、删除指定字段整列数据"><a href="#1、删除指定字段整列数据" class="headerlink" title="1、删除指定字段整列数据"></a>1、删除指定字段整列数据</h5><p>表：student</p><p>数据：sno 字段为 2005020103 的那列数据</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">delete from student where sno = 2005020103;<br></code></pre></td></tr></tbody></table></figure><h5 id="2、删除数据表所有数据"><a href="#2、删除数据表所有数据" class="headerlink" title="2、删除数据表所有数据"></a>2、删除数据表所有数据</h5><p>表：student</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">delete from student;<br></code></pre></td></tr></tbody></table></figure><h3 id="三、修改数据库的数据-update"><a href="#三、修改数据库的数据-update" class="headerlink" title="三、修改数据库的数据(update)"></a>三、修改数据库的数据(update)</h3><h5 id="1、修改指定数据"><a href="#1、修改指定数据" class="headerlink" title="1、修改指定数据"></a>1、修改指定数据</h5><p>表：student </p><p>修该：把 sno = 2005010101 的 sname 字段的内容为 刘一二 </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update student set sname = "刘一二" where sno = 2005010101;<br></code></pre></td></tr></tbody></table></figure><h5 id="2、修改整个数据表中的指定列"><a href="#2、修改整个数据表中的指定列" class="headerlink" title="2、修改整个数据表中的指定列"></a>2、修改整个数据表中的指定列</h5><p>表：student</p><p>修改：把 整个表的所有asddress 字段都修改为 “广东茂名”</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">update student set saddress = "广东茂名";<br></code></pre></td></tr></tbody></table></figure><p>​<br>​<br>​    </p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、-向数据表插入数据-insert-into&quot;&gt;&lt;a href=&quot;#一、-向数据表插入数据-insert-into&quot; class=&quot;headerlink&quot; title=&quot;一、 向数据表插入数据(insert into)&quot;&gt;&lt;/a&gt;一、 向数据表插入数据(insert into)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;表&lt;/strong&gt;：teaching&lt;br&gt;&lt;strong&gt;数据&lt;/strong&gt;：C01    101 | C02    102&lt;br&gt;&lt;strong&gt;字段&lt;/strong&gt;：cno    tno&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据表" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(二) 数据表结构操作</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84%E6%93%8D%E4%BD%9C/</id>
    <published>2022-05-26T06:43:23.000Z</published>
    <updated>2022-07-26T09:32:50.963Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、创建数据表"><a href="#一、创建数据表" class="headerlink" title="一、创建数据表"></a>一、创建数据表</h3><h5 id="1-创建数据表并设置主键"><a href="#1-创建数据表并设置主键" class="headerlink" title="1.创建数据表并设置主键"></a>1.创建数据表并设置主键</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl<br><em><strong>字段</strong></em>：name age<br><em><strong>数据类型和范围</strong></em>：varchar(20)   int<br><em><strong>设置不允许为空值</strong></em>：not null<br><em><strong>设置主键</strong></em>：primary key</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create table xiaoyudi_tbl(name varchar(20) not null primary key,age int);<br></code></pre></td></tr></tbody></table></figure><h5 id="2-创建数据表并设置字符集"><a href="#2-创建数据表并设置字符集" class="headerlink" title="2.创建数据表并设置字符集"></a>2.创建数据表并设置字符集</h5><p><em><strong>设置字符集为utf8</strong></em>：charset=utf8</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create table xiaoyudi1_tbl(name varchar(20),age int)charset=utf8;<br></code></pre></td></tr></tbody></table></figure><h3 id="二、数据表操作"><a href="#二、数据表操作" class="headerlink" title="二、数据表操作"></a>二、数据表操作</h3><h5 id="1、显示数据表的字段类型等"><a href="#1、显示数据表的字段类型等" class="headerlink" title="1、显示数据表的字段类型等"></a>1、显示数据表的字段类型等</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">desc xiaoyudi_tbl;<br></code></pre></td></tr></tbody></table></figure><h5 id="2、修改数据表名"><a href="#2、修改数据表名" class="headerlink" title="2、修改数据表名"></a>2、修改数据表名</h5><p><em><strong>旧表名</strong></em>：xiaoyudi_tbl<br><em><strong>新表名</strong></em>：student_1_tbl</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rename table xiaoyudi_tbl to student_1_tbl;<br>alter table xiaoyudi_tbl rename as student_1_tbl;<br></code></pre></td></tr></tbody></table></figure><h5 id="3、查看数据表创建信息"><a href="#3、查看数据表创建信息" class="headerlink" title="3、查看数据表创建信息"></a>3、查看数据表创建信息</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">show create table xiaoyudi_tbl;<br></code></pre></td></tr></tbody></table></figure><h5 id="4、复制数据表"><a href="#4、复制数据表" class="headerlink" title="4、复制数据表"></a>4、复制数据表</h5><p><em><strong>复制表</strong></em>：student_1_tbl<br><em><strong>新建表</strong></em>：xiaoyudi_cp</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create table xiaoyudi_cp select * from student_1_tbl;<br></code></pre></td></tr></tbody></table></figure><h5 id="5、添加字段并设置默认值并加到指定字段之后-after"><a href="#5、添加字段并设置默认值并加到指定字段之后-after" class="headerlink" title="5、添加字段并设置默认值并加到指定字段之后(after)"></a>5、添加字段并设置默认值并加到指定字段之后(after)</h5><p><em><strong>添加字段</strong></em>：备注 varchar(50)<br><em><strong>默认值</strong></em>：无<br><em><strong>指定字段</strong></em>：classname</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp add 备注 varchar(50) default "无" after classname；<br></code></pre></td></tr></tbody></table></figure><h5 id="6、修改字段长度-modify"><a href="#6、修改字段长度-modify" class="headerlink" title="6、修改字段长度(modify)"></a>6、修改字段长度(modify)</h5><p><em><strong>修改字段长度</strong></em>：header char(15)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp modify header char(15);<br></code></pre></td></tr></tbody></table></figure><h3 id="7、修改字段-change"><a href="#7、修改字段-change" class="headerlink" title="7、修改字段(change)"></a>7、修改字段(change)</h3><p><em><strong>修改目标字段</strong></em>：inyear<br><em><strong>修改后字段</strong></em>：入学时间</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp change inyear 入学时间;<br></code></pre></td></tr></tbody></table></figure><h5 id="8、修改字段默认值"><a href="#8、修改字段默认值" class="headerlink" title="8、修改字段默认值"></a>8、修改字段默认值</h5><p><em><strong>字段</strong></em>：备注<br><em><strong>默认值</strong></em>：班级注释</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp alter column 备注 set default "班级注释";<br></code></pre></td></tr></tbody></table></figure><h5 id="9、删除字段"><a href="#9、删除字段" class="headerlink" title="9、删除字段"></a>9、删除字段</h5><p><em><strong>字段</strong></em>：inyear</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp drop inyear;<br></code></pre></td></tr></tbody></table></figure><h5 id="10、修改表的存储引擎-engine"><a href="#10、修改表的存储引擎-engine" class="headerlink" title="10、修改表的存储引擎(engine)"></a>10、修改表的存储引擎(engine)</h5><p><em><strong>引擎</strong>MyISAM</em>：MyISAM<br><em><strong>表</strong></em>：cp</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table cp engine=MyISAM;<br></code></pre></td></tr></tbody></table></figure><h5 id="11、删除表"><a href="#11、删除表" class="headerlink" title="11、删除表"></a>11、删除表</h5><p><em><strong>表</strong></em>：cp</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">drop table cp;<br></code></pre></td></tr></tbody></table></figure><h3 id="三、主键约束-primary-key"><a href="#三、主键约束-primary-key" class="headerlink" title="三、主键约束(primary key)"></a>三、主键约束(primary key)</h3><h5 id="1、为表添加主键-primary-key"><a href="#1、为表添加主键-primary-key" class="headerlink" title="1、为表添加主键(primary key)"></a>1、为表添加主键(primary key)</h5><p><em><strong>表</strong></em>：student<br><em><strong>设置为主键的字段</strong></em>：sno</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table student add primary key(sno);<br></code></pre></td></tr></tbody></table></figure><h5 id="2、为表添加主键并设置字段约束名-constraint"><a href="#2、为表添加主键并设置字段约束名-constraint" class="headerlink" title="2、为表添加主键并设置字段约束名(constraint)"></a>2、为表添加主键并设置字段约束名(constraint)</h5><p><em><strong>表</strong></em>：student<br><em><strong>设置为主键的字段</strong></em>：sno<br><em><strong>字段约束名</strong></em>：PK_student_sno</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table student add constraint PK_student_sno primary key(sno);<br></code></pre></td></tr></tbody></table></figure><h5 id="3、删除表主键"><a href="#3、删除表主键" class="headerlink" title="3、删除表主键"></a>3、删除表主键</h5><p><em><strong>表</strong></em>：sc<br><em><strong>主键</strong></em>：primary key</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table sc drop primary key;<br></code></pre></td></tr></tbody></table></figure><h5 id="4、为表设置组合主键"><a href="#4、为表设置组合主键" class="headerlink" title="4、为表设置组合主键"></a>4、为表设置组合主键</h5><p><em><strong>表</strong></em>：sc<br><em><strong>组合主键</strong></em>：cno sno</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table sc add constraint PK_sc_cnosno primary key(cno,sno);<br></code></pre></td></tr></tbody></table></figure><h3 id="四、外键约束-foreign-key-参考-references"><a href="#四、外键约束-foreign-key-参考-references" class="headerlink" title="四、外键约束(foreign key)  参考(references)"></a>四、外键约束(foreign key)  参考(references)</h3><h5 id="1、为表添加外键"><a href="#1、为表添加外键" class="headerlink" title="1、为表添加外键"></a>1、为表添加外键</h5><p><em><strong>外键</strong></em>：foreign key<br><em><strong>参考表与字段</strong></em>：class(classno)<br><em><strong>字段约束名</strong></em>：FK_stu_class_classno</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table student add constraint FK_stu_class_classno foreign key(classno) references class(classno);<br></code></pre></td></tr></tbody></table></figure><h5 id="2、根据外键约束名删除表的外键"><a href="#2、根据外键约束名删除表的外键" class="headerlink" title="2、根据外键约束名删除表的外键"></a>2、根据外键约束名删除表的外键</h5><p><em><strong>表</strong></em>：class<br><em><strong>外键约束名</strong></em>：FK_class_department</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table class drop key FK_class_department;<br>alter table class drop foreign key FK_class_department;<br></code></pre></td></tr></tbody></table></figure><h5 id="3、为表设置唯一值约束-unique-替代键-和约束名"><a href="#3、为表设置唯一值约束-unique-替代键-和约束名" class="headerlink" title="3、为表设置唯一值约束(unique)(替代键)和约束名"></a>3、为表设置唯一值约束(unique)(替代键)和约束名</h5><p><em><strong>表</strong></em>：student<br><em><strong>唯一值约束名</strong></em>：IX_student_sid<br><em><strong>设置的字段</strong></em>：sid</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table student add constraint IX_student_sid unique(sid);<br></code></pre></td></tr></tbody></table></figure><h5 id="4、删除唯一值约束-index"><a href="#4、删除唯一值约束-index" class="headerlink" title="4、删除唯一值约束(index)"></a>4、删除唯一值约束(index)</h5><p><em><strong>表</strong></em>：student<br><em><strong>唯一值约束名</strong></em>：IX_student_sid</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table student drop index IX_student_sid;<br></code></pre></td></tr></tbody></table></figure><h5 id="6、为字段添加检查约束-check"><a href="#6、为字段添加检查约束-check" class="headerlink" title="6、为字段添加检查约束(check)"></a>6、为字段添加检查约束(check)</h5><p><em><strong>表</strong></em> ：xiao_tbl<br><em><strong>约束条件</strong></em> ：只允许填入<em>男</em>或<em>女</em>(sex = “男” or “女”)<br><strong>创建表时添加</strong>：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">create table xiao_tbl(sex char(2),check(sex = "男" or "女"));<br></code></pre></td></tr></tbody></table></figure><p><strong>创建表后修改表</strong>:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">alter table xiao_tbl add check(sex = "男" or "女");<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、创建数据表&quot;&gt;&lt;a href=&quot;#一、创建数据表&quot; class=&quot;headerlink&quot; title=&quot;一、创建数据表&quot;&gt;&lt;/a&gt;一、创建数据表&lt;/h3&gt;&lt;h5 id=&quot;1-创建数据表并设置主键&quot;&gt;&lt;a href=&quot;#1-创建数据表并设置主键&quot; class=&quot;headerlink&quot; title=&quot;1.创建数据表并设置主键&quot;&gt;&lt;/a&gt;1.创建数据表并设置主键&lt;/h5&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;数据表&lt;/strong&gt;&lt;/em&gt;：xiaoyudi_tbl&lt;br&gt;&lt;em&gt;&lt;strong&gt;字段&lt;/strong&gt;&lt;/em&gt;：name age&lt;br&gt;&lt;em&gt;&lt;strong&gt;数据类型和范围&lt;/strong&gt;&lt;/em&gt;：varchar(20)   int&lt;br&gt;&lt;em&gt;&lt;strong&gt;设置不允许为空值&lt;/strong&gt;&lt;/em&gt;：not null&lt;br&gt;&lt;em&gt;&lt;strong&gt;设置主键&lt;/strong&gt;&lt;/em&gt;：primary key&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据表" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL数据库基础(一) 创建数据库</title>
    <link href="http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2022-05-26T06:39:53.000Z</published>
    <updated>2022-07-26T09:32:50.957Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、创建数据库"><a href="#一、创建数据库" class="headerlink" title="一、创建数据库"></a>一、创建数据库</h3><h5 id="1、只创建数据库"><a href="#1、只创建数据库" class="headerlink" title="1、只创建数据库"></a>1、只创建数据库</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database 库名;<br></code></pre></td></tr></tbody></table></figure><h5 id="2、创建数据库并设置编码规则"><a href="#2、创建数据库并设置编码规则" class="headerlink" title="2、创建数据库并设置编码规则"></a>2、创建数据库并设置编码规则</h5><p><strong>数据库</strong>：xiaoyudi<br><strong>character set</strong> ：设置数据库采用的字符集<br><strong>collate</strong>：指定数据库字符集的排序规则*</p><span id="more"></span><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database xiaoyudi character set utf8 collate utf8_general_ci;<br>create database xiaoyudi character set gbk collate gbk_chinese_ci;<br></code></pre></td></tr></tbody></table></figure><h5 id="3、查看当前使用的数据库"><a href="#3、查看当前使用的数据库" class="headerlink" title="3、查看当前使用的数据库"></a>3、查看当前使用的数据库</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select database();<br></code></pre></td></tr></tbody></table></figure><h3 id="二、查看数据库信息"><a href="#二、查看数据库信息" class="headerlink" title="二、查看数据库信息"></a>二、查看数据库信息</h3><h5 id="1、查看数据库所支持存储引擎"><a href="#1、查看数据库所支持存储引擎" class="headerlink" title="1、查看数据库所支持存储引擎"></a>1、查看数据库所支持存储引擎</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show engines;<br></code></pre></td></tr></tbody></table></figure><h5 id="2-查看数据库所支持的字符集"><a href="#2-查看数据库所支持的字符集" class="headerlink" title="2.查看数据库所支持的字符集"></a>2.查看数据库所支持的字符集</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show variables like "%character%";<br></code></pre></td></tr></tbody></table></figure><h5 id="3、查看数据库所支持的编码规则"><a href="#3、查看数据库所支持的编码规则" class="headerlink" title="3、查看数据库所支持的编码规则"></a>3、查看数据库所支持的编码规则</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show variables like "%collation%";<br></code></pre></td></tr></tbody></table></figure><h3 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h3><h5 id="1、使用数据库"><a href="#1、使用数据库" class="headerlink" title="1、使用数据库"></a>1、使用数据库</h5><p>数据库：xiaoyudi</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">use xiaoyudi;<br></code></pre></td></tr></tbody></table></figure><h5 id="2、删除数据表"><a href="#2、删除数据表" class="headerlink" title="2、删除数据表"></a>2、删除数据表</h5><p><em><strong>数据表</strong></em>：xiaoyudi1_tbl</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">drop table xiaoyudi1_tbl;<br></code></pre></td></tr></tbody></table></figure><h5 id="3、编码规则和字符集在创建数据库时设置可以继承给数据表"><a href="#3、编码规则和字符集在创建数据库时设置可以继承给数据表" class="headerlink" title="3、编码规则和字符集在创建数据库时设置可以继承给数据表"></a>3、编码规则和字符集在创建数据库时设置可以继承给数据表</h5>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、创建数据库&quot;&gt;&lt;a href=&quot;#一、创建数据库&quot; class=&quot;headerlink&quot; title=&quot;一、创建数据库&quot;&gt;&lt;/a&gt;一、创建数据库&lt;/h3&gt;&lt;h5 id=&quot;1、只创建数据库&quot;&gt;&lt;a href=&quot;#1、只创建数据库&quot; class=&quot;headerlink&quot; title=&quot;1、只创建数据库&quot;&gt;&lt;/a&gt;1、只创建数据库&lt;/h5&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs mysql&quot;&gt;create database 库名;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2、创建数据库并设置编码规则&quot;&gt;&lt;a href=&quot;#2、创建数据库并设置编码规则&quot; class=&quot;headerlink&quot; title=&quot;2、创建数据库并设置编码规则&quot;&gt;&lt;/a&gt;2、创建数据库并设置编码规则&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;数据库&lt;/strong&gt;：xiaoyudi&lt;br&gt;&lt;strong&gt;character set&lt;/strong&gt; ：设置数据库采用的字符集&lt;br&gt;&lt;strong&gt;collate&lt;/strong&gt;：指定数据库字符集的排序规则*&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="创建数据库" scheme="http://example.com/tags/%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>python基础之format</title>
    <link href="http://example.com/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8Bformat/"/>
    <id>http://example.com/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8Bformat/</id>
    <published>2022-05-22T07:36:19.000Z</published>
    <updated>2022-07-26T09:32:50.976Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、无参数"><a href="#一、无参数" class="headerlink" title="一、无参数"></a>一、无参数</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">"{} {} {}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"hello"</span>,<span class="hljs-string">"world"</span>,<span class="hljs-string">"!"</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><span id="more"></span><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">"{0} {1} {2}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"hello"</span>,<span class="hljs-string">"world"</span>,<span class="hljs-string">"!"</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">"{id} {name} {age}岁"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">id</span>=<span class="hljs-string">"20200"</span>,<span class="hljs-string">"Tom"</span>,<span class="hljs-string">"16"</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> 20200 Tom 16岁</p><h3 id="二、列表、字典、类"><a href="#二、列表、字典、类" class="headerlink" title="二、列表、字典、类"></a>二、列表、字典、类</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span> = [<span class="hljs-string">"hello"</span>,<span class="hljs-string">"world"</span>,<span class="hljs-string">"!"</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{list[0]} {list[1]} {list[2]}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">list</span>=<span class="hljs-built_in">list</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">dict</span> = {<span class="hljs-string">"id"</span>  :<span class="hljs-string">"20200"</span>,<br>        <span class="hljs-string">"name"</span>:<span class="hljs-string">"xiaoming"</span>,<br>        <span class="hljs-string">"age"</span> :<span class="hljs-string">"16"</span>}<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{id} {name} {age}岁"</span>.<span class="hljs-built_in">format</span>(**<span class="hljs-built_in">dict</span>))<br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> 20200 xiaoming 16岁</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">user</span>():<br>    <span class="hljs-built_in">id</span> = <span class="hljs-string">"20200"</span><br>    name = <span class="hljs-string">"xiaoming"</span><br>    age = <span class="hljs-string">"16"</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{user.id} {user.name} {age}岁"</span>.<span class="hljs-built_in">format</span>(user=user))<br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>  20200 xiaoming 16岁</p><h3 id="三、魔法参数"><a href="#三、魔法参数" class="headerlink" title="三、魔法参数"></a>三、魔法参数</h3><p>*args       表示任何多个无名参数，它是一个tuple or list；</p><p>**kwargs  表示关键字参数，它是一个 dict。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span> = [<span class="hljs-string">"--&gt;"</span>,<span class="hljs-string">"&lt;--"</span>]<br><span class="hljs-built_in">dict</span> = {<span class="hljs-string">"a"</span>:<span class="hljs-string">"hello"</span>,<br>        <span class="hljs-string">"b"</span>:<span class="hljs-string">"world"</span>,<br>        <span class="hljs-string">"c"</span>:<span class="hljs-string">"!"</span><br>       }<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{a} {} {b} {} {c}"</span>.<span class="hljs-built_in">format</span>(*<span class="hljs-built_in">list</span>,**<span class="hljs-built_in">dict</span>))<br>    <br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>  hello –&gt; world &lt;– !</p><h3 id="四、数字格式化"><a href="#四、数字格式化" class="headerlink" title="四、数字格式化"></a>四、数字格式化</h3><h4 id="1、小数保留"><a href="#1、小数保留" class="headerlink" title="1、小数保留"></a>1、小数保留</h4><table><thead><tr><th>数字</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>1.23456</td><td>“{:2f}”</td><td>1.23</td><td>保留小数点后两位</td></tr><tr><td>1.23456</td><td>“{:+.2f}”</td><td>+1.23</td><td>带符号保留小数点后两位</td></tr><tr><td>-1.2345</td><td>“{:+.2f}”</td><td>-1.23</td><td>带符号保留小数点后两位</td></tr><tr><td>1.23456</td><td>“{:.0f}”</td><td>1</td><td>不带小数</td></tr></tbody></table><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1.23456</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:.2f}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:+.2f}"</span>.<span class="hljs-built_in">format</span>(a))<br>b = -<span class="hljs-number">1.2345</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:+.2f}"</span>.<span class="hljs-built_in">format</span>(b))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:.0f}"</span>.<span class="hljs-built_in">format</span>(a))<br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>   1.23<br> <strong>&gt;&gt;&gt;</strong>   +1.23<br> <strong>&gt;&gt;&gt;</strong>   -1.23<br> <strong>&gt;&gt;&gt;</strong>   1</p><h4 id="2、填充"><a href="#2、填充" class="headerlink" title="2、填充"></a>2、填充</h4><p><u>0 的位置也可为其他字符 (不填默认空格填充)</u></p><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>123</td><td>“{:0&gt;6d}”</td><td>000123</td><td>用 0 填充左边，宽度为6</td></tr><tr><td>123</td><td>“{:0&lt;6d}”</td><td>123000</td><td>用 0 填充右边，宽度为6</td></tr><tr><td>123</td><td>“{:0^6d}”</td><td>012300</td><td>用 0 填充居中，宽度为6</td></tr><tr><td>“你好”</td><td>“{:-&gt;6}”</td><td>—-你好</td><td>当处理字符串时时，去掉 d  。</td></tr></tbody></table><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">123</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:0&gt;6d}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:0&lt;6d}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:0^6d}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:-&gt;6}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"你好"</span>))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong> 000123<br><strong>&gt;&gt;&gt;</strong> 123000<br><strong>&gt;&gt;&gt;</strong> 012300<br><strong>&gt;&gt;&gt;</strong> —-你好</p><h4 id="3、逗号、百分比、指数"><a href="#3、逗号、百分比、指数" class="headerlink" title="3、逗号、百分比、指数"></a>3、逗号、百分比、指数</h4><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>100000</td><td>“{:,}”</td><td>100,000</td><td>以逗号分隔的数字格式</td></tr><tr><td>100000</td><td>“{:.2e}”</td><td>1.00e+05</td><td>指数记法</td></tr><tr><td>0.13</td><td>“{:.2%}”</td><td>13%</td><td>百分比格式</td></tr></tbody></table><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">100000</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:,}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:.2e}"</span>.<span class="hljs-built_in">format</span>(a))<br>b = <span class="hljs-number">0.13</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:.2%}"</span>.<span class="hljs-built_in">format</span>(b))<br><br></code></pre></td></tr></tbody></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   100,000<br>  <strong>&gt;&gt;&gt;</strong>   1.00e+05<br>  <strong>&gt;&gt;&gt;</strong>   13.00%</p><h4 id="4、进制"><a href="#4、进制" class="headerlink" title="4、进制"></a>4、进制</h4><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>123</td><td>“{:b}”</td><td>1111011</td><td>二进制</td></tr><tr><td>123</td><td>“{:d}”</td><td>123</td><td>十进制</td></tr><tr><td>123</td><td>“{:o}”</td><td>173</td><td>八进制</td></tr><tr><td>123</td><td>“{:x}”</td><td>7b</td><td>十六进制</td></tr><tr><td>123</td><td>“{:#x}”</td><td>0x7b</td><td>0x式十六进制 字母小写</td></tr><tr><td>123</td><td>“{:#X}”</td><td>0X7B</td><td>0x式十六进制 字母大写</td></tr></tbody></table><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">123</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:b}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:d}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:o}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:x}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:#x}"</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{:#X}"</span>.<span class="hljs-built_in">format</span>(a))<br><br></code></pre></td></tr></tbody></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   1111011<br>  <strong>&gt;&gt;&gt;</strong>   123<br>  <strong>&gt;&gt;&gt;</strong>   173<br>  <strong>&gt;&gt;&gt;</strong>   7b<br>  <strong>&gt;&gt;&gt;</strong>   0x7b<br>  <strong>&gt;&gt;&gt;</strong>   0X7B</p><h3 id="五、叹号用法"><a href="#五、叹号用法" class="headerlink" title="五、叹号用法"></a>五、叹号用法</h3><p>！后面可以加s r a 分别对应str() repr() ascii() 作用是在填充前先用对应的函数来处理参数<br>差别就是<br>str()是面向用户的，目的是可读性，<br>repr()带有引号，<br>ascii()是面向Python解析器的，返回值表示在python内部的含义,ascii (),返回ascii编码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">"{!s}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"你"</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{!r}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"你"</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"{!a}"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">"你"</span>))<br><br></code></pre></td></tr></tbody></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   你<br>  <strong>&gt;&gt;&gt;</strong>   ‘你’<br>  <strong>&gt;&gt;&gt;</strong>   ‘\u4f60’</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、无参数&quot;&gt;&lt;a href=&quot;#一、无参数&quot; class=&quot;headerlink&quot; title=&quot;一、无参数&quot;&gt;&lt;/a&gt;一、无参数&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{} {} {}&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;world&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;!&quot;&lt;/span&gt;))&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt; hello world !&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="format" scheme="http://example.com/tags/format/"/>
    
  </entry>
  
  <entry>
    <title>python基础之文件操作</title>
    <link href="http://example.com/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2022-05-22T04:29:34.000Z</published>
    <updated>2022-07-26T09:32:50.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、访问模式说明"><a href="#一、访问模式说明" class="headerlink" title="一、访问模式说明"></a>一、访问模式说明</h3><span id="more"></span><table><thead><tr><th>模式</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>w</td><td>用与打开文件和写入，文件存在则覆盖，不存在则创建</td></tr><tr><td>a</td><td>用于追加，文件存在则把文字追加到后面，没有则创建，再写入</td></tr><tr><td>rb</td><td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>wb</td><td>以二进制格式打开一个文件只用于写入。文件已存在则覆盖。文件不存在，创建新文件。</td></tr><tr><td>ab</td><td>以二进制格式打开一个文件用于追加。文件已存在，新的内容将会被写入到已有内容之后。文件不存在，则创建再写入</td></tr><tr><td>r+</td><td>打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td>w+</td><td>打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>a+</td><td>打开一个文件用于读写，如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果改文件不存在，创建新文件用于读写。</td></tr><tr><td>rb+</td><td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头</td></tr><tr><td>wb+</td><td>以二进制格式打开一个文件用于读写。文件存在则覆盖。改文件不存在，则新建文件。</td></tr><tr><td>ab+</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果改文件不存在，创建新文件用于读写。</td></tr></tbody></table><h3 id="二、打开的读写操作"><a href="#二、打开的读写操作" class="headerlink" title="二、打开的读写操作"></a>二、打开的读写操作</h3><p>open(path,mode,encoding,newline)</p><table><thead><tr><th>主要参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>是</td><td>文件路径</td></tr><tr><td>mode</td><td>是</td><td>打开模式</td></tr><tr><td>encoding</td><td>否，默认None</td><td>编码格式</td></tr><tr><td>newline</td><td>否</td><td>newline=”” 默认为换行</td></tr></tbody></table><p>1、打开1.txt 文件 和 关闭文件(close())</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">open</span>(<span class="hljs-string">"1.txt"</span>,<span class="hljs-string">"w"</span>,encoding=<span class="hljs-string">"utf8"</span>)<br>a.close()<br></code></pre></td></tr></tbody></table></figure><p>2、用with 打开文件，with 会自动关闭文件。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"1.txt"</span>,<span class="hljs-string">"w"</span>,encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">""</span>)<br></code></pre></td></tr></tbody></table></figure><p>3、创建一个 demo.txt 文件并写入 “好好学习，”</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.txt"</span>,<span class="hljs-string">"w"</span>,encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">"好好学习，"</span>)<br></code></pre></td></tr></tbody></table></figure><p>4、打开demo.txt 文件 并把 “ 天天向上 “ 追加到文件末尾</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.txt"</span>,<span class="hljs-string">"a"</span>,encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">"天天向上"</span>)<br></code></pre></td></tr></tbody></table></figure><p>5、读取 demo.txt 文件的所有内容</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.txt"</span>,<span class="hljs-string">"r"</span>,encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-built_in">print</span>(F.read())<br></code></pre></td></tr></tbody></table></figure><p> <strong>&gt;&gt;&gt;</strong>  好好学习，天天向上</p><p>6、按行读取  三字经.txt 文件内容( readline )</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"三字经.txt"</span>, <span class="hljs-string">"r"</span>, encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> i&lt;<span class="hljs-number">118</span>:<br>        <span class="hljs-built_in">print</span>(F.readline())<br>        i+=<span class="hljs-number">1</span><br></code></pre></td></tr></tbody></table></figure><p>7、读取三字经所有内容并返回 列表 (readlines 返回一个列表) 并遍历打印</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"三字经.txt"</span>, <span class="hljs-string">"r"</span>, encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> F.readlines():<br>        <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></tbody></table></figure><h3 id="三、指定位置插入文本"><a href="#三、指定位置插入文本" class="headerlink" title="三、指定位置插入文本"></a>三、指定位置插入文本</h3><p>seek(offset,whence) 方法</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>offset</td><td>将光标向前移动n个位置</td></tr><tr><td>whence</td><td>参考位置，一般参数为 0,1,2</td></tr></tbody></table><p><strong>–&gt;</strong>  0 ：将开头作为参考位置</p><p><strong>–&gt;</strong>  1：将当前作为参考位置</p><p><strong>–&gt;</strong>  2：将末尾作为参考位置</p><p>1、在 demo.txt 文件开头写入 “我们要做”</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.txt"</span>,<span class="hljs-string">"r+"</span>) <span class="hljs-keyword">as</span> F:<br>    con = F.read()  <span class="hljs-comment">#记录之前的内容</span><br>    F.seek(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>    F.write(<span class="hljs-string">"我们要做到"</span>+con)<br></code></pre></td></tr></tbody></table></figure><h3 id="四、CSV-文件操作"><a href="#四、CSV-文件操作" class="headerlink" title="四、CSV 文件操作"></a>四、CSV 文件操作</h3><p>方法：</p><p>writer() 返回一个writer 对像 并提供一个writerow 方法 将内容按行写入到文件中</p><p>reader() 返回一个生成器 通过遍历生成器 进而取出所有内容</p><p>1、将三字经.txt 写入到 deom.csv 文件中</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"三字经.txt"</span>, <span class="hljs-string">"r"</span>, encoding=<span class="hljs-string">"utf8"</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.csv"</span>,<span class="hljs-string">"w"</span>,encoding=<span class="hljs-string">"utf8"</span>,newline=<span class="hljs-string">""</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#创建一个文件对象</span><br>        f_csv = csv.writer(f)  <span class="hljs-comment">#创建一个csv写入对象</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> F.readlines():<br>            f_csv.writerow(i)  <br><br></code></pre></td></tr></tbody></table></figure><p>2、读取 demo.csv 文件的所有内容</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo.csv"</span>,<span class="hljs-string">"r"</span>,encoding=<span class="hljs-string">"utf8"</span>,newline=<span class="hljs-string">""</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#创建一个文件对象</span><br>    f_csv = csv.reader(f)  <span class="hljs-comment">#返回一个可遍历对象</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f_csv:<br>        <span class="hljs-built_in">print</span>(i)<br><br></code></pre></td></tr></tbody></table></figure><h3 id="五、JSON文件操作"><a href="#五、JSON文件操作" class="headerlink" title="五、JSON文件操作"></a>五、JSON文件操作</h3><p>json 常用方法</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>json.dump</td><td>将Python对象编码存入.json文件中</td></tr><tr><td>json.load</td><td>将.josn文件解析成Python对象</td></tr><tr><td>json.dumps</td><td>将Python 对象编码为json字符串</td></tr><tr><td>json.loads</td><td>将json已编码字符串解析为Python 对象</td></tr></tbody></table><p>1、将一个字典编码成json 字符串</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = {<br>    <span class="hljs-string">"a"</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">"b"</span>:<span class="hljs-number">567</span><br>}<br>json_dump = json.dumps(<span class="hljs-built_in">dict</span>) <span class="hljs-comment">#对一个字典对象进行json编码成json字符串</span><br><span class="hljs-built_in">print</span>(json_dump)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_dump))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {“a”: 123, “b”: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘str’&gt;</p><p>2、将一个已编码的json 字符串解码为Python 对象</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = {<br>    <span class="hljs-string">"a"</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">"b"</span>:<span class="hljs-number">567</span><br>}<br>json_dump = json.dumps(<span class="hljs-built_in">dict</span>)   <br>json_load = json.loads(json_dump) <span class="hljs-comment">#对一个已编码的json 字符串解码成Python对象</span><br><span class="hljs-built_in">print</span>(json_load)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_load))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘a’: 123, ‘b’: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘dict’&gt;</p><p>3、将Python对象编码存入demo1.json文件中</p><p>方法：</p><p>dump(obj,file)  obj : 字典对象   file 文件对象</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = {<br>    <span class="hljs-string">"a"</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">"b"</span>:<span class="hljs-number">567</span><br>}<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo1.json"</span>,<span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> F: <span class="hljs-comment">#创建一个文件对象</span><br>    json_dump = json.dump(<span class="hljs-built_in">dict</span>,F)<br><br></code></pre></td></tr></tbody></table></figure><p>4、将 demo1.josn文件解析成Python对象并输出</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"demo1.json"</span>,<span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> F:<br>    json_load = json.load(F)<br>    <span class="hljs-built_in">print</span>(json_load)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_load))<br><br></code></pre></td></tr></tbody></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘a’: 123, ‘b’: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘dict’&gt;</p><p>5、</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、访问模式说明&quot;&gt;&lt;a href=&quot;#一、访问模式说明&quot; class=&quot;headerlink&quot; title=&quot;一、访问模式说明&quot;&gt;&lt;/a&gt;一、访问模式说明&lt;/h3&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
</feed>
