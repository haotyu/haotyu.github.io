<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>XSS跨站脚本攻击</title>
    <link href="/2022/07/14/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
    <url>/2022/07/14/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eb5ce8a8278d30d52af2ecc10b11b5bd42d9f38e1b977ecb9d4b452ff8ae6cac"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传漏洞</title>
    <link href="/2022/07/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/07/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1032c5e21821ee92acbd3993d489639ff66a2429398db6589bc655c8ca1e58f4">905c4d0cf8e39f3f4fbbf98d9acd6e65f6485a59a752de72b62105fc716f7636565d0164b6401583cac481c952c29a8c78c0db58164e005b2ecec0380cd3c048a3b09dee20e3ea22daaba0a6b05bfc5b1c5460019d932b1e36e1b7049563993b1acf1ae4ca7bf471519d4ec9fdfcd225d1c6a0cb03a7cabf45df73d094ecbd2f139a9c648e50287b9ece5deb294976cc6c02df6d257e8a2719189eccfaaf0f1fae570f9b751f479051198829f03e55db5b19028f2b2f52540a4cdf601cf988c61a26c74fa8acb4d18e8835ce44f96b5813e8ec8008a1a4eedbb5a7d5f3faa0b627f6339c318d37ffe3eb88663483d516b0847b43def721eb25218285daf35c7eda2b280d620802aa92e30cfa9378e809812aa3391661d649ac514dd9b5d996644500271d52b5032b184cde3666da056890f10dd6b70f69e01b86397fbe275e8ca5d26c3cf25d6a1372b4211cdc42b8c0e87f5f7495ef37998f6eafa18e60360172a5da4c6d5836a33b27aa137226b91569cb8db16694d4dc8edfd117840950e973b74c8e69f7a1f5e1b3a4e80e56e0e55aff1977c16f00a66c14d9a5f6b2b071c53a41e2f0cefdbf3cd9be082b991aa5ba34eb0ff22adc101da85ff14f596ceb69d5ca80eb3db38eee690b241390fae7cf87e653e9244a6d735da30593c57d20e70ece4148509980cce40dd0ae926f086883745f10320903ee34ce6f34330a370dcd14f98e85f9733c7b8949bc1e356e4b408774cfccf0cf9bd1997c447c5897180c397c28bde4ee64eb0f9fb7faa81b9d088133becf40411ccb28f455327256fa81f6ae4ba9e007d32e229d1c49153bf2b05f8c7a02878857747762efefd739023eca0d18de567b97f401ea23ca6046d099779d62900e718a50627640b5e5916734e37da4814429e18c31544f7d319e9508d7b801591a681571476f126e0ffcb1c0cd55698c2a61137650036045ae63682ebc30085a96b53b4d56b50e4987c77c247b188fc13f285bad6d15558cc54b970d50cfa57a971e4cbb61728d0ca96c9a65ca15820daa26018062708566f8a5fc2937415c17faffdba39ea6e1a1cf38edb5844111b6b5856922432c9f2800c77114ff67bc6e00c6b6643f8ab0e6d08b9739e5aca98de358114d0685dcdf6b15346ee726560c1d16d65ce50dd76bc9f452a03fffafa3b17d3b0d77bf49956ac71a8feb94a75d0eeebd801e691ef2e0c5ebadf22ac785b2bd27a74f4b91d3fa7f9a9dfae04854e2a4d95186ee600e844aa05f05967d7e3a7488f2df5d8e5cbf38baa10415277abc462b91e800ddbf808cfeaa127c26f88b791a0f774bc1277f580c8e14535f2d663216f8df44e953510f65d40ffbef30b3188d76468e700c25a7e3caa5c13a5dc0fac0b9bbf300d8e99950ee8ae8a3011a7a71fa96db09de089aa7a6da4d3c7dc3f55831ceede3fd941d3749bddd2a4fe8bcfe4725287547703b95357789f2d80a22e4f61bb8993fe963a81196129ac03120d0506e6bda78e5aaa836e2b2b686cac7c20b26949aec7d7e762c6610c7f192e33c17d1727eaf4b70815597f811826d0966df9ad80de78e9fedb2333e202255fd8053504dfd927d37d4b810e1d417d7ceac14176ea74a99ff67dbf501b0d2f3be71ea0748a08e55300962230727f3b8fcea0b91f2de40ffe1e75a39c419e8d5fdab69a1cc8bb5a1468405c138d6dbce0264815b1c788b3976aff8648bdb6d501b6faf3eb40ca63c38f531a992b49dfa0e8a99fe20f2a50bc935c21e4bce8a3ab5ad8d62eba4aa094bad761cb18ddc5a45866ecb7d5852247a5de4c3511feaf7136a7616bbf5b3968047d8fc5fb4f6af13c62c2a039d3e2812661dfc0f0b97f16c85538f8a7f5adfb67f4f701592b662bb82627b61b21d3c0f53f27cda1b863f9ee0e2daf5d6fe338e4790947627a3edf2e64fdad57d67aefeb0b47a430cf4712cae2371dd4b896239204c3492ab3e84f4273848205e4513aaef3af7361f49590e1af59c76df56d5ef93a5c7b5314db7ce912b6b7dd2014c7aeb87832d56dba6ea2b7fda16c4cc2f034ec077a9ca855c625aed749e0ac2954b66a425533f1dfd4b1a33b4577f4bb20cf8a3fcea1db349c40470cb3ae016a7e4131c8fcb125dc9a4b9f6f0e2c82bcfc1e48c13fd454d4682f94a26a8e2f3fcc4d01e23a7a698a15276f3565f8762433de0c8d2fad6240dd2664fb474bba9d63bebe5a8147f004dabc288f24d0225c6e528e67eb39799a88124d397f70c2a94e64ece5dc4ce11edbaac31efe65e4c31e2cc556be66ff4b91b505f3db6f020247ee2bfae6a4711d96fbda587abe98b7c8a2e38d447cc6cd4ba7019d28278082d6bd87d6398ef4fadffbf6a99631c41b5455bb55ace8810675379e9c9538ce68ec57cd8dc4c66657df7a288ddf19eb89004128c7b34cede3be050ce7fa41a2dfc69e38499b3d27f58d7e7f4e79ca4cb5f5f6712f31af9eab50c1d9e37e44e9c60b3ccd6a16274f417bb89a58f641996f5068cea3d9e037bb331618f823a48e5c78c5f819a092953033f665291518e4cfb289a84e831effc068d1947dbe8b944c25c459c4bc91602e3edd953d14408a446c86e3d47f0b80b0de9242bb1b4b861a9d14796461c9ded9b96f0bbeadc787b99bb79b2c9ffc680dae4905f0230c41f0f0fcbbcfaec5f22b2edc8b2c07ca2fd5dd41d86911c1d7c64c085d1c6ea4a1a9a2a9732dca3acd4b75ffaf597a2bf820ebaf49af41072487f0af8ff68e36289ea231797c2111859b83df794d0b9a572a2fa7519f7c79256fefbff99cc0b65f0616793d5146353f4f7a8294a6725375a4876ddf230280da1c1f80115b03dc94ac9996975ced59b07a0ad201e6716af9b9df4deb755e20ce70ae634483ff90a754cf4cccf94411d5dda426d641e798897b7a1e70458c5cf566452ad2792a75cee2ef054b54acddd89b8645ad1869125e4661509bcd68c942c2841eb03c9b98796432b1dd5afb1d95e195c36fb0ffe835e7e3d6869dc2f1a146eec1e245f61b922f50f68699bf2c6e36a88f87c3dca21d6790c6baf44b82d6a245cfa64f17ee210985435e4039ab7f2dc068b626586273738ebfb2c5a379661c67e07fd82a4dfebd5e8b18542bc0700d957633a663f06abe60fb8038300296bd5b28f7f015e6765cfe4e0a4f396880dfc11ed3dfae8e82af2a149f61cc595704c5058ecc885ba1faabe94403fcb6ea9d3849ea0b53c708af3bbd2d5a6de9ce4f39afdc7585449f644caa417ff281cc8abf22853023fa09b40d8b585e36da850550a36bf7c5cee9be02b2cf15c4bbdbdbc6de56c5e96dd48facd55c9e31848532d261036ff1bc4ee52a39824979c4d2220c4847e62fcd81e93e579d498c2f4c417c50c0a378836048e3ec5a3f4099f59fb71fc07d2ef544e79e1f051b88bd7c8051b130e15f295fbad00c6fce0adc91c7507c8cb5c162f0a77167e3150813cc1951d4928e0f2fa31f95d1002660aad1b705a1cc7adf56ef9047d720faeeb971903e2dedbbded97d756ec106e11770b8c44d23cf4755e03458a66198685f0a1db4bf7bf34dd2e1c20e73ff215c7904479e6fbbc7a8166c904fd75a0fd1b1ded24ffdd21d7038767724e18096ba83ce9f877bdb9b1c41a3fd24660cfe2d65c7dd7acb0ba38317626aa00d3ac4d01f03a1d81e733dc976f0106e2ef230fef1a11d8add3e67c72b590b361e62523e0744d62ddb9457fd8d6e4001d439b86620fc8bcfd9aba5f9d0fb2eeed96746ac876ab7173104e51e4f04b2831be8d3aa3319aa075a710b1d28c337e81fbd130e59db37ca6179fb74ca416b338d36d3b45a33bd6ea6da241d39b3e3e02ecc160c7de73bf82ea146cabcb947257158dc9124d1a1c234e5cb4a658e113a765c45bdd872a1c8d0e6ed6a233c15f3bd554fa98a0af58508381099c3d85b9fa40d739c22bc1910da6c00b84af6e25cc05ce7ef0a1f721b9420839e88f9f3a315b23d20d8cb4a78f7606d4df37b5309a33f65e9f7f4093cd2d3df53cd3beb3b346bd156cbbfff99d4ea27861be9246d10728b39aa2a7c680562d33c8b67b0c471e8b4ffef896ce780902246710582103147dd7894c69d4181af917ca4f19076240a767c72558d080c366e65a05e15d32d87aa0e0a035a491ebd9ad9213a56e506f3ffa238f41ddf12cf99b9fb4fe3abbddb2decd1003451350f22d58268dc73419382cd4d510d47b5cf2155f329f65167f93dc65a777301fb437d77a2576f6e3b9e1ca39023f608c459560400705f50c9756a34bd23aa5a47d0946dee67fb52e62cd57e7dbbbea91f31a7360aebbd91ac4b0c1c44be6c18d1ffaa4d11ff2a057e84c19e02d3540374789772c3e4e96e163f9dcb7eb01691c38501d939eddfbdebc20bb99761bbce3180560de5738d68e374511d46a5b7ad4930f2743c87a3ca84e0fd0887aa02d4e1eafffb71f021eedd6452d4bc38134f59aa4d31a30ecb6e63fb02ce2a2205871376d62e2eb87e2cb73d7e73db2daba8c5fc55b93c99f9d5f74e5c275b6d940a87ecc0c1aa2806bef89988ce298866cbf19c1eef9fb1f8c806f75d16060d481c8078f240f62c896b8f239164a47e872d78831eb0e0c02b1345c0f92cb58120d90fd629bb411768412609f518764e96811ca15f6e0076bdad1d14ebfb1da904a8138c578911fcd487e6bbbf2c0a574e0afce5307a747489aa1f95b005091b98d6e17c6a8013bfe71068c478e3a1f36d2c0e129ebbd63b4f297e98c9aa36ba0f5564b657257652e2c096aa5db1ec02aa53cca5c62b2af27ca19b6b4a95d42efed1901e0d9313bc74cc1d10896dd360965619d6a953b9b1f0f57a8c0bdf89881ac3093a5418d02c09a017bb9f391d8b432775415db68e419f1d85ae0a5ef0006504f0a8ae6ccd3d02a0b5718208ed47516a2883cec71f42dcae1a0d28ea07bd1349622496550e1008df7f63985ba1ab80ff0ea2652ef70462691e489ede2fe2a35cddf8e5da46a579e6f489cf2868e4328ae2a692bef6a1bea15afb14158d3ade51b612098c756462a1a94de033193ef212226c078d8a36fe6766511acff760c2d2727837b477a21121229c80b3f90579e9227b596cfda60317d83f8863d98881a6a46fcdf8bac381d44bd49a9d91c4b0c45d656a25840302f6a0bc2e8b228ca4f0161bb8e9eef6920a335ce118c22b6a40f09892937798bd7572cce456c682f11586c30a52d3459ecd9ea62820117a06971672da9387dda2ff2a03c72bf2b69e054591c8ca073514c18c72ed7a5793bbc3e5ac167f44b81e895bc6e43859af08ab2f88955207da4170e17f00c450f9e5f275e259d82bae2665b427404e6fcc85c94d2c0c45e7f89699eba085f95c130348327b1541dd5dc09a408ade1b0a84494496aafd0f9e868b6ba8082be59446b72825024f28630f17d9533830b89687d790ed3dd77829160e2c9bedc88343d32f8f77d7d4d86c7304a0965389d12368f34f9a7a10b818bfaba968df7b2efc76d740d092e78f29779773fb8bc3c02d6362b4e8a4a8de0ccc80e719a950c44d05a0a38e20c1921fb154b0c7c57b39d4cfda7b15e75a8467dcc433d7ed6d1ad97af0350b2e94482e1a59670419bc3f12def6efaae668637511b92679cf270b38f269554f645ac407b6641bc951c3d872626899abea2492de28f1d7e6af8d8acff88d44dbc17431e98dc58b15c7831d726051c8f40efa1bd6fcbcf495a389689074f4025adc26123c8759ad4f7ed8ef60d41da143c326d6f25bb31f651eea66d268d17c955ff280a1a6fc08bcb90ff1436889c836506ec3e218b4e1b650fd51e6de95d86eabf106a6d9dccd816ff9b9a4d030e8e42540182f51bab4c4a25a94a57b63c6acd159893b7512c2dce3310ef36f79ac9e21c794ef42a4e37e3c1da6594586a621391bd54a3c12ae4f21b1dc22182acb823b6e831dac27f4258b0027fa0e0b29e86bbe269a4b0e6207e759c5d453944c95e707f6836c837bdc99ee71acf8fd109bacbd95453b290065b4e80e2f303689b82acf5cde8cd81bd530c455328c3339168ed5a2c7e9ae3cca589aed26ad1c49fe4618976bd550720a750fc5144a75b2a02fcbec1fa414c07703b37c12cf38de5cfd3a2cb787273cb7d681f7f01572009552eb71f02f45fbf3409f8f2743cc145ac8fbbb6bdf5492d34f86ac01808fec1f23314ed20cac51e1fe7e3959881a24136946319098eb9b98e111f671e54d9ae2347f1b61a2bb1b99348606c5b5afcf775b96ab9aefe0b007d32026db13b91b882380b41e815dd2fe685d7cc2bc848807d2742b3d5dcd854596c5191117737237b136434f14e8b20942402731192df2e388dd579c3f4b9bba1eead3cbfc59bdbc9f29f483c5b56bbc1c98ed8332dc7b2fdd49088bc9dcf9e8bef1d510b270ca509f27ceb38ff567cb46f35bd92bd77308c4c9170a9f14142ddf974b5c0658a68e1748c5ae3c3f7aebd003e3b9d0efe8040e932dfacfba7aba20d6c77d4fcdffa1712a475fdedf06c0fa3e271cccbc11dc2b1353d9857eec42b045cc731fae6088bc64ba6d6e560181ae95ece3f47f3c64552bc7541204062a5539a6aea3e496c82019b9f747ec6afd1a969912a8a8addc1f48621e92720c0c079384a32461b81cc083d043604a652b79d545fd2d433c5deb16e1627ad7e2378831dfdc1afe3c7b9d0149c20e90d705381b663c93c47e0fc011a6b8b3396061bde442dcfb55dd7f7065cc2d401a36ecae076ef1bf1040eff0f774b5f23ba6c6cfe2f41e1279fc22dd40444f75aea8d1bb00f35380894297c9590a9d54af60e8d69482df86444d72205aad40b46691c6eff184560d2d55488ccd82bb9216fac64e2362adac02a7d45a70ac59530cc6fe90edd91a989aeb06d711ab7a2c1827aa1912285de6cd171db7b7568ad14a700d645d1a81d012f5cacdfb977e4474ae57d5c488b5329bcf6a13ee3b027e913d5237049c8179001bd1bbcb24f4cd508aef7c627a1ed464a63fd280ca49cb81c8b4c31cc5ca799f1508f2c22519fb4d5697ac68714ec182b033f4efc0119f27f56a8fc11daf48e0102619621a8443621d439d0011e4e5169a07e4004003da67e24e7573f08894c812c18dacb16a2673cde74a157f6a0ced96557e0543fc8c4213bcfe6f49caa04fef33fec6ba29767dd2423628627bf9c5f77450eda8467349ccb05ca3d3f4ee35d6ee3f1d71b4e40d95bd2c95cdacd6fc453812fb120dcef5fc5a545d3d13c14be1503b19c0eeb0972d667ae85ef83586e67ea99b67e40e86b6728f9b0be7201665e88122664ea07effc58563eac893435bb0cfe5a3a6d02d667680d0d238633839310434ccf4931394d976584e91a06644f7b22a3a6a957ffa4167c4b956a9d590ee39c2ab3ff74b0af0786aa7def323fe5d393d7056a17a4ee3d8d13aae2915e2dee7576348e94a37c42a882ab124c88a98131bdd9419ec0f5c6b71abe6d90b123fda4c232da588b2d827f056e44b18f7e14a6b95173bb7b32f51984e4bbc10c2fdcd6dd9be5f98469033fa7996423eba5e140467c423d9841c33528c58b1cf6f47d05c699161f466730317bf8b9bf92da0f01a7fb5b29498ceacb5e67a372c000b27d7e1b87c019d146ef3668ea7153a09c3781c8519e4c78c018c26ccba8de8f50606aaa803bf325865b6461129948c1e8d9dd999c118e15399172a121b32ec463e51a665e5e6b450b6e3049551fda98aa47cd8eefa1ae7c015d474fa5bf9f5a40e951ba18a2a9c55409523623f6a42db756f656558ffff30cd3da7961858f73f33f0ac168d0ec0d4b4f0452389c893c90db493b7bda2bb069cdc834f74e1ed635e0426152d0cfd494726d36a5be0daf793391ce96bcef021dac0ff9bd75760d462491eb33366d45b6d81ffaf55d29f785fc0f681f849d67ab7dd3dae791b85539eeb6dd4af291281e50e68a775051eb877a485322312dbdb469038c6b829f58d9ff4e4f2fa56e7aa7dac406d845eebb77ee6054cec1b5c122122743b5e8dbc668e65a535e2dab9ad175076aebf5d790888faffc2a0811e1b2fe78ee461f09fc3744fad8bb93221ee05d7c9b3b7c50118c2123f2daadf062bb8cee4388362f743a51e3036ccb0f782863e798ea25b12d674d813cef76f0bb8a3dc1081e344f7fb078f13c1968573b38e0a7269c84096dceed668b61e2164f3ca43c7a5e0ec7f09b305222ccf877206b9982373c9571a5ae68053365b69694cdcad05d5d54e5e589cf98d6992f45b759abb40b1f3667fbac0f9c91b0815b34e72160d4b63b2bb14a0bc4f8e346fcc5a983702679ee180fcbbc644a1477d304fba5d2bdb44c4fab9e04bef25a07ebbf8293606dd97271f5ed230cfd23b9cad9d42d3bd738118e1e5e1e087535e519b096d47ddd00e3935c2076809643aa33eb53078a652ee223fd2a0da470cd9365ef79b21c5f5b80b19694ce34b7e5eebf6c1424665a7773ed634670ccfbb8d4b60dd5d724aac54d8a6baa583028d07c69d2ce055d684d8bb13ed4a7cbf068146e72c3e23a0345fe12484de272c1fe85c2e282997487509e94cf04a0b16355b1e93e6184440ab511eedf412abcff5adff9fd40e439438621e1dab46cce52672c1c98ed5113b2438da1a01a96e1a4e9d2feabe5bb9154d201158a4e68e5649e1852c12cd44d14381ea6bb51908153b3e57287f549b3b3220844f3bcbade2457983ebc41969e7e7b5495811e5aed5e98c2a69f4141251b18fc627903db679632da3e7878da81228d289a6985bb41fd0b5be9071402aad2804b878212d82652dbcf6a8578daaa21c7f8f5cbff2b32b8060ef4300948da6e201dea59e8062465a687ee9522716f2596e271d9f790af8cb21be37018c59eee29de7448cdfa87ddcf7b2bad022480e11a04535ec154c82d11770cfd27888abc8a7f8fb1cd437497bb4bf76bb2a17ef90909fe6f2aa890b1a9a61a04d8cfe2cfae3c10991d5bc37d05112321867869243a96a84b8030e6a7e05e403e438c361a76291e3fd038268e17001f538074616de27bb9392c84a0dbfad8466783552f5fc355e8a483bb0ca1a2e4448173ca70c01227b7743bacc2ad0c166b3da7d3852400fc74c39a99cfba3640bc1b6f35a71dc7b1f5ea614b92cd105d35e3c8c6b36880280092c9ec27070f61090da2662765d07baf49ca71ebec2836cdbd8c6af2da87c4dd36b33eb7c79a82107b633307ff4452be2f4633f417e7adb2c535bd8ab06133c8e5d61e5b90dbe983b4c1d927b82c63fbc4ccea010ec1460c5d0834421c57f991f778ea7d63bfc3ddcbb374995bb40c2f833cc310910a5b063c3396ce28354cf09136747e11fc908b50b643eb05b1fe0c86f70915ff2ec216c94e88794193b4dacafb71df31822ef1a3af77e27a412baadddedb2fafeff5b8c8ddee479907b8a2999394548384c9a93ca19396c3072b9ac10e574f87e90fce17ad886083ccb1423b136ec9557981c087f053ebdd900c9e1d2e8d4ef28f2e8ca01c09a69bfc6dd7ea2a3266ffd17f149e6fafcd1fa608d9908935f36509d3c51fb1d26108fcf58383c067caa5a1da8eff8693d3a25af89b9064381787fd7960a15e4e169ec0e5c3ad2a94249acaa895a1b01e74d5a8bc1610a71bcb8c0092af6d2267058b40552350a5dc59c0314cbc4b992f795c7c2e2710d25f613bc8ee14bcd8599423451b0a419f155273b19ca85d533bafda6c7e6f03c7ee5786c81927442984e738815fcdbeeb2bb721db9369818705dabba756f17ece7915acd08d5b3dab58e11f49725b05c70f4849f5a63401fb63c6dedefde14c8b332bb0cdd9910062195b4cfcb1b672cf79e2ec12441195ffb10f9635279ca9f46a67f6a409f21f5b1f2f9fa361f0c66b38743282f5d0197505f65af7068d63646d211f78e1306a41ef2e43762437ce713cb6d8b4f6f9e9bc3a329cf9c8936cd67b403af01db80aeb0427e312f7b5171cf0e8d262ae24117bf853e6b326f0a97e510a521023a70233cff50a3c47296a8c791f44a25e06844ca1f75f2a9ad1886f667672d5881e3ec4123d082af850b985e4a723f822da191263d64e8bb8561ca92c62c00f5cf4cd0261d994742adb5f305839d61a04f345a167a48d44e64732355f17c42e670f6db8a9494148aab9620b41812c51485c9d994fbccce4099fcf1b0af556ea3fab6df846f9b855e2ee455f91d029b746477a3c04592d3990bd14212ca9f083e571d3ace84ca3d3d3901c0be228cf3ec03ac2482da580b70282cb1b11769d79effb5b633708f96992607ec47aa144a844f501eec2c32828c4531861daf4b625141b0bf776cc4c21577d10f85b1f046d5ff271d835bdbe6bb37b0cc17c450cbea45add47549efaf1bfbed232f9b0f3f7253e831ea155299fd5bdfebd165c8037c8b10e550e631bac0d1e76830f24e6427e6016244a28cdd124c30df45df08779d9790382b87872b6afa1af3de51cc265837ab2ab1bffbb68d15fb9b9e8d2c1311096b386d1ac86a006c1eae3c0ed54077b949985fc8de763d9d2980b5b0f6a7f2a46a24d21b6e017455c240ef9475862ba5cd053f7d91096adde841ccd9098b13b20ddb44717fcbb59b6a70ace2983aa9649ff7df12985704d3d6be782915ce0432d023536b513edb1e024fff5f766d57d7069261a6d8d1b737523e0988e1a443f4b43f9ea4d6e7f183489aa29bfee9749dcc762b20b47a35e3b1c1d61bd51e79bf798d6fd7b13b5f3f2b33f0a844ccc9aa1422a53cabab8b704e16407fffd99c9e4818d361c0c3f15ce072552dab340afd94e25781418dc69724834ed1344b4f5a54bba9684d9617ba8a1f93baa20112f327743b178e1ae42988e4092d5905c2a93c1df879c5e310c038c8ace867b2ec03a7c8b7d2138dcf5cb48404db09367666e27fad260827ec17a644d06b4506af206ed616fb76e03ba36bdb3a158f1707818ce4ba5879ab4fa14f9c32c9df6c574ea7332d73ede840397b730c1dea42754b74dcb86484d557a30843aa8d8414cb7bd11bc5209b0d4bf780b077749269d81dde50efd9ac45d39aee6e10935837d5af22c98fea036b0087bed7c04e92848400a2866e61f3f13e29497a1a9a5dcccc562165df0f2b40dbe990913232fa088f99a9bab026485069de1434fb1eef3376bc21b73754acfffb5d8c7549097869a55bb1aa57956a8e10d6fbfd30ca85968730a8eaad5bb4d336e87611eba334c51bcec52bca78937133ea482ff9fa07954808c055609e5b6b4bbbf49b7b1d3127622791ba40e5f7ed7e475f025ff92b2631301c047432b3591e16ea1e862e4a8e40e7ab087a23c38da01d6558140c9fbbedf144bd05e4d8ceeb9f04bfd0a7e6a24e8abb61ddcb5bc7103a4333c2367130de2671db472c1e7ac1d242d0a4425747b94d26f767d22cad050ddda78bcec147f035da9af1bcca682a58bf4ccefea368160c12a99ff10c71044e511d1c6d35938f95eb7412a4f3b762de2968236557d9fd58e1108dd1c82daead104e402e2b20d5a5a501c0694ed55caaa764726afb07875dd478c6f182416b2929c53739319cbb6dad54964661402234744f8a435cd8d28a6195b3cf9c11845e5ef3ab75d50c6b0820cccf3e276974ce42d213f547847bc3d3bf7d549c38506e4bdf511c86bed386095b0b3b2d43196a5407f041728d7bc7fb5ad78371106c1420da1128a48898cc703a52798765b5c09a4b8d3caa6322e7a6f03dfeb48abc6a7aa6997a1ff1d9d6b89997f8a502ce98fea21a402e7d2451a5b3bc9825187feab4ba4a0e9bbde9dd652e039c8b9b307a35413e528b06352f72252421a14636e695758deebe828dae7596b12b3a19ef124eda1ac0ba6e2da75dc0923396d8914c99ee40d7bd7836e1248df1bca0e2e02137b29cccd452a4c1d644a7c3da13c4c2ed87e61f75190865029db76f4e1389d7c5d581c8cd504102f53c0d428cc7009bc106d6c13be52d172cb86dda252659b33f071d83b52f8058da62642da0e98d3b0fd022f5f4e42157f40fc7443343949b670de14fd13ada63daee4b3605c3cbc3122d316febb46fa41004d3ae6808f669d023607ec8797d460b2701c38fc2728b551a1a47d01ee2577ebcf94c7c1097ad94b34d26fc6c9381d25abbd48c72c66a41e47acb59acbd6750ce119c22106321a853d333e4b3ac77fa73911e101be1b4cca2f558d070e993fb78a7067d7464c2f74b779da2ab1851206ede60677b97fa975bcf820a85e384d1e1ebb738ee06483532f554ce5843f8fda0a899444157e752d3b7dbadd0a2c3c507eadf399bd92b668ea599304e868891fc6eee11e4a01c5b6264dbf81dd48e04675697512cc0b78a44796d84ef585629c7df2efe8dc787ea14642e6cf21e52ce7e4b3c399a2b888973d61cd30736ba43d4163e685a712c11105d823ccde918cf1a390eb30f99420721b1cb174252a3e45a7149b4682addd57b715641aa7e4c7b8838551ae0dd97ac815534ac5f8310787e3a9ffb2deec270c2409508ddb16c20486013c0de399ecce3f18f449cb2ba6e1e1aeb26c0cae1a658172827f09704c47245d4e978cf3f5e0dc52f36e19d35583ebda1e761bf3a27cd16d302239e62fa233861dc837ba5a11e7855b550929730d036e778c1425ced9dac8524060e1a69ffb2cf677db22992a299da891b5a43b370718076082d57e4065b60d44ddc54853e21544e83206808fccbdf7ca54b5c5cabfa36feb208ca62ddc1cb186c565939262f2798c25a147db7cd4fe0274350c0799e4681b8b088b3c89492ba653072b71d7f9c74d439be1170278000696c8f443dc0340d6309a8453fa286f1bfc066846b3f87f1aaf224a3f28c64768b96c01188c76a13f7badf481a13dfdce0c476f837617152373236b57f3c4b9e922653caa142aabc73a0a44dd2922ccff022e6880a58865b5751bc9caa01be8118433b69c18ba93493be13060d4596a700445241079c359d786726e14aa6f81194dd85e95f909c29024fc0e07a30e9e971ce12faa5dc4d3e2d2ae7c50b77a7cf6787385d353af20b237aeb48ddb09cb97c83158000cc0c58eeee512df9514338d7c02eb263784dc3f2f0ae1e46cc42c509d9159988e08475f09b914bb0b7995ec1b3386dac78fc8743323377f4a4c3f1b5e3fb64048a23487f19befc6637859234601dcb42bfa74a8efd58531a279281c97e59c19c423e86acf5572860136592d70fb9e883b6bfbe52f290cc47a0f9898a6fb2efd7161570ca9f01a694b49a4f1738b7d9b147deffec65272f782a10b5a8ea4b5a3afa68fee21f86dd1921792251ee4226a9e7696465cdc36c27f54804162072edce2803eb489187f6afc23fdf94af6526049c9ca2298a1d5a721ca0bfd70b567b7de81d5d8b94868653b38de5ba8d296d270449ddcb48c1cc3d4952bad337f3e34340975853a69ed05a2c06d6779da52a624c0b8b09427f01b21e903722cc3f5d80cca6b0a4726a70d8e0ff402e30c801fe8d6c07319aab28bc16468c10268aafedb1c86e508621369fb896b5bdcc2aef6098cffaa1cedf35f9983bf03fbf29c24dde1e1bbed59fd4ac5c838fa8c379a3d66e915e6768e0ddc95cb479ddcd5889a1648c6ebcae07e515415a771da72912a0d3f9eb0a1c5ace51fe56156c6590d6ec2302a4b3175222e457fb6d3c30cb42258692f00bc29def203e5fbff3079321e508465caa46383463613f1e031c8fbe50b1708820d768f522bc67681fd2d908a293a99349539bc4437d2093fdfea91dd42a9e00cac6140da95316fea563ba4392aea704f5beabf0a65eb1047a6f6e392de62992c60c0a42619570f9e814079cc371d23bb343ab6ae71704aff7adb037080d76dfab2f4c4e26953128dbf02b403cdbcadf39aa7d533ec5a71574c71e4d896e397126f1e6ab82501cd751d7f21f3a87992658adfbd901c43676a6d50b2b79f1da1fc780ef6c9e49ad9929a41af84ad557018c3f62e0db2a44a89c3c06ab7d46c3705dec75323d1d2be2c4b7854bba72146e82da20f81c085e6bdef20b01170659b991fff87ab7c69e2af6685d35623f45b6188c74473167a5c5ccb3e9e186ae244ee720d9bf03f9779701ab1ff6e322f87efe40e767153e9aab6fc72f99db840c0a18708ee947f3a62ac898c4474a2057ed691c437140160613406963d4b40825d4e09614f0fe0ddbe13f9d4d8af7a0fd940c3460d7306b97e5d8f5fefe2dec00b8f280dd4ed5960c3831aa581a56a2846682d1b8304744e83ffefe1c2203d01095d9b59a68bf5e1fff55ae129dadac1346fdd88046004450f59ce5d3c532f456f162773ae145454c588f50ac362837ea2384f5cae657186a24c4b3c0e0c005e87f73015b0947784eb310827017b44fc729a64892f27acd55f17c12ed3eec56037334f87f64e9121d23306bc21166e5fa96c44bbc8c32d6fcd122c2082aa72197f1a9eb8a197cc6b84ccba687d2353c4d6a08c674683ba24f22871bbdfc63ad99e7837d350ac590b9444d6eea6fa4c9576e35c93cfc75d9c639dd7cc13d99ed572c4d7fb75ce203fbfc1ff977f60daaa4d6f32f8b91373bfbd8ec211be5a70f8b832cf949525eadbf70ef5b18f3828bfe44530361efff1f793f1475957a086b2ff887883a8cb27c516fc22f2d50ef49b0010501dd7947ff7d01ffd751b718f7bd2e196f5263f51622b604858ca0a71a903b725ad91acc2a14631fe5955bd753029c9ccbdbdca7e19956330ce0f3e00220d7b610406ec4e94d242d42dbfa87740c47fb630ea484f60da9a35565328f4bcbf8198befd7ce10d0c3acf647798298f76eecccd46f89d79d0acb5fe5770d1cd12bce9f3aebaa71b98bf60e22f914558db35033312d573a90b4938a1566e88501b9e41ee394e99f8a029a301ea6b8545ef12f8e25be212f57871faec198015041ac81424dfc3292a5c1f08621b23ec72357e1e87a438407f2b1e622b8950b8ecd05705bafa97a0b4cadcb31ae95581c180c742b8327e83412e1d5ed8c96f4e7f1cedbf8a08c66049e643ffad45de89eec4e283ff1db9d1cb3a043b3aae6f4020945a0e68c16870f36f7f1ad7218500e6320145cfbca0d690e06a7899e63b9153efca835e1388eb95285ccdfa1c18b0c8225615446cb62342c2b9fba1e0dfad4ea3262a565ba6473bef6f4691834b3e2e58177ab9d62351a95da895529835f08979a7ddf3172ed7635dcc0105c399cb6bf5512e8c6b2c9dc6c9fa9d839d1a5f4a93aef15fc6eebb915bc7bc09965de31cc11b41eef1829f4160988965bdde84eb0b417b55d4f7ffbbfd1b9c2c80a4d3de4f5a0529410030fba152cabedf338aa728e72e92822489f1ef7cc6e81b488c43ce217806f2ae38aa4bf87664251b4ae060dd7fe9b2ddaf1f979b1702724255012c0ad18fa185199c347ce3f8e363d3669deeecd8e3de2b5adc45ac15c275fba3f6bfd09a738d965ddd69ffb101c4474e2526a42445dafe312fba693639f1180904ac630976084ba9183614f71d1ab33b52795018e783ebeb7284c2b7f3c42052cb7c7d2894fe607380026114c8142974166bf31d6e864f00f3e47ce92e4298f4044ce5b83cc0a2c8cea9d1741630b1704ff3363e3e82a6e182975e3655210189b6e8634ebf5ae1d617d0d2424d65f0c9df3823e85fced5138993fc74d22cd8b97891b4ff23236c394b8fd9a9ee94e37e22b87cc00115dd266f040e095caa205159657e410163222ada76f48d841c8b86160938d83d3717bd0d61b9a49ca1235d67cd9117131b0717d262991c32654b4302c911465a7bc92b446e03d7cb8f7e9650709ffe3d2fe0406038a1c96ad6d6df25bbcb01d8cff4868c52dc0e94294ae051e4675e270207a7e87de8e362848480985728b0266575a302fdc77a5a28fd4bbe733bd714e33b11d254b3c5a524e174137c6d17a47b76005df3594ac5a4c5914dc8322606546d5b1ad609332dc04266d98af8168427ae05d2deb070224372fdfb08f1787e35dc288bf3090f5939b2395eb9aac636a0e2f2a47cb47d8cf4fc5520f17bf10e466f976b4e1c8a6d5e0097bc0ab687406902da7c948dd46d89f0b3e4323613cce6d0cc3cf1f4c48e8b71ae92097e681bce4ebf22602ee8be8c773ce386548ffbb3d0db2ba8b8374539bb010fd7b7ed203fef3a2c02039b01f00feb8b7b1d7547ee1267178939fef027995a2e556e720038492cdb5f790f212c5675a65617996b760e39e795dccfdd2cb73732334d85896ed43252e7de8f8816a2119d504ce8a93fb4eb80f7dd272923d952ac2e76e7350e5eb22bd62f2968347387fa8195da0a8da3777f2d4aeb634a92b25f6748c554b5421138abf39882d1958d3f99ba3ba4dc7ffc81162dc03e2baf4ab4569130cbe9d163f05716e5b5deb1d206d2165712b520dfce0ce359b8aae107db1f57b23a1e28ebaeffa97b61f01d27fd8b6cad89d505cae9c3e5ee6409923b4a73694b746ed4b9f956962bc9b75dd29cd95186624fe41c869baa4af15f49e9366870fb2aa4cea5883c984f12ed837eccec3804e2a8630b59667ed6b872f6675c22613fd488d13f1c3c6fc41804e3ff0f2eeec8ff0cb7ecb10ee00302d8ebcc7892dea68c1e5fc734922a79d034e7124339e1581d751058be65ffca6e1418ad364f94ea12687b4d142d7418ede53c6954ab44c8fa2c7663f83df5a98adb5a6b06b7cf34d83febbf91af812ec94bdc9a5779d85ed4e00433e0bbf20d10eb0ada65a659236913337931c1fdd94e246a8ebb894a81719fc3eb57ce46983fa030b48b7e639f3b8deb9852a7568c046d152a6f15863178b7d0f7192a179698bd9be3352c7bc93d15a9d8c4a189767b091891d45afa92738d094b518379693ca2eef90a5bf28d67e31d0661a76c86a40439f1e4da28c74f8466bbd2dccd9268048737730277835efc470ad524d3a6b3c1f0564e5dd6d129c65b621b4693b775d11fbca07fb3059a77147bbceb10b621914611f2477ad98e3617ee7c8c230399d962d36b6c620257622e5f6cca25f9b1090e57cf6b4d1d35a8ed952d38383d16ba8e72b33446793f2d513e7c4d21fba4c1495a5e13fa362cc17a01eeb84bd08bb147cd3696527f7a067dc1855dbbaaabbbfbf1490cbc8296ab15e742f7d6ae8fc1c85f739b349c7255fcf5ffb7b661d1a0a88dd53ddaeb387f6aaba1e39f91973949c059127e838b1099dafc4a6b3add084c433de66ef00f949b0380707b4e6ab197895d7f09f19858c1a29bc37347e39ee651fa9ee865091ddf151612434982081e68a316ed5db503fa9d58d935d0255d89256ddf1b6a7ee68661808573dd427a435dca463da848e5a93efad32bd3964c5f4a67898a5ba52dcfa7e299573c15927a233fcabaee272ec15e4c448dc4e10268556924a1ceee93d0c0e30a493fef6d82202bdf8ed3a8b631d02ef18371bedd7619950cacfd3c52305d0e2769d7ab8ed58f82d994cb71715e76894770faa8dc5e8e9105005d320a54573de11d51af6d0afea98a39a51e1e0edba897b23dfb23f197b149ca5570f8c84b70cbfa8e6087cd6e060eb9c90482ff354fcd286b5cd9922c3cde0e38cefd9781797916447420b753eef6692eb9ca78874d640494ab91c3a2ec090c52342b06c43ff58131c0d2bef63fac2681a8f354edc138bc94ccb0e472e5807fdb5ecaa14e4fafa0a114a1295a8893734e6dc66b5c5d32710df886ebdf4e4c3937eaf79052e47749c5bb98167d21e1e4cc27a9cf1969e2e4970640142f7f77f20dfcc8ff0cfc44caeeeb434488499266ad4df01b72613319cd91a68faaf9564e06a59d521a4c7bd3d50f95da03bf431742b964814868d55cea6f76140a18407aa83d14dbdc2210254be6dfb41d3479ead8f58a4724c413afb21ef7eaf51ef526d682d8090309cf0f47f714db2b33ceba4387304f7f7b4b364e9b28652ad47982e31014eed54408f9273008c0b4f4578089790a48dc2741e0418163c6d8049df1872c0c44ecd373aa0c12b147a18509b02b94edbee2a6a7a9dab361d6225645f3e81c092a97f5d2b44d5cb3357182e58165126282954962a47f7dfd9e585f13132a2964ba639c8f33e4fdf7cad4498ef15a372f41870327fcf14b400c040c380596ef3b5a65314196000438bfafb6ed07435b1d7be942713801c16ce84374a390cb2f76690703767edb12c54a48c802db2a1fc92fd8c4ef36f8fd7bccf21acf04311f68ec3ad148c1c3fe2d0c3d29126ffb3333139b4e66fc86846d2e3251d9d1b5c04004c5d51d8659ac6239631634717808351f0e187fd8e375abdcda09e8a222ee6e14fa7f020bda19de2d441b200bfb77011fa8cacea4654986e390b020509681df19ab3e5dfcbd121aef16c94e5fd6092b8094c881fd5071e842858581f7880dcd95cc96a2c7d6e195729eeca37dc6f1eab915aebc07ef73f008cb80ea2d9561991e46389a83565bc9ef64a03aadfab1472693219eadb7f054b6638bf7c9124f781b42b9baa811c38fe5a3ab28edb7668407c79a507127cae39da5d6a7f138776143342c2e065cd6c45b7f6d436db27c0c96ca53c93b26f210e50bacdfa9fdb84fb79406c17b7490d59df571bbf2fd500e3e8dc08396e6515bf948df8dcacfcb2fb39746431368453f77c76f803057df95e3022b71b515008577981a2c2e5cc6c98f4312ac37149d84dc87f94692e2233e086dc810d9e8e7e8470257892b5c2a7b3e907432319f54396129a09a6636db7e4f85e1cc08500b40c20e17a19c6dd668a11abdfd0fe6b9570524a1b837269f182f55c7b0693917db70557a6346070e2e6eb9d5a9789959bf4bc8355b08821df527f751c59fa53f1b4899bf9fab68ec81acece374fe65e4ec72c4abb858bf1e72c5524ea4e4c76f6c76f45be36f3bca6b592b19215c0a60aca4335ed8ad270ec63025737ec3e51f7d54dcf5bd75caa8c42da59915fea42a1ef77f38598a4abf1c2cd7024c51cab2d80a822d62d917f2f47abdb19eea7f65f5a4df829b8ee4376c4863fe9bd48ff1736173e7b49013a486c6a6d02f943ee591616a91882fcf419b0b61d6d6cda4c747ae2491ac333f9deeb7217072080a96f0f0baf51cd3096aaaae96d3588c3b84cdc641c4b61de7d73fcb2e310a01772782470ba971a92186e9883391c2a5b71764185f98956643177021fa8b6c40030d5701976d04de36525e0ae28290958c3091b3fd4cc99abbb84f1d470126f29c8e347d9a4b717e681768f3b56cc27be107a7e5b6ce99e705905d015e64b99580f24a962d4845740d7f863d304bdbb3218f86fb7210444a96c1dbc37d76154362d21a2ef97cd6ccb3e9e0f81a7b698893c25184731e53915172d8ecd275a340e7dc35f15ec94cb314d5db849af0a6f48962fea92830a5814218c95fd3b6001266168b49d46eb569072b289d43b0d510295547b31f02e5dc9692758b0bfaaf42ca16267b50c047eca705bb7762f2bbd8a45a55cd1d459664a30b78b11905dfb74cc666ceecac5997079f6e71a952aad2b21b10353fbb3445613bfecff72ca075aed649237faf5b4cd5201cb15129f69d426751a7c9cd00d3557128cab9dfe774f0d78ed7d46f4865b057e90d36c2f5669ca09ec7dda08e6bf6d8c417189a47450f4fa89cef659288b8e83674b2e338372cf924752c50fea05d1b314051e16d7a648a5810dab5c6883183b081610471ce7bd5bd685204c540b383457a1ef3299ba846e03d90d1c2043356008ae5fdbe44aea18a3aa3d6a244c9aa37ca5134ef94445a33b46b47597e95660a3f2a555df504a13d88ed7e640a7cb8432f89d115dca04038d5c1e5136b891666883cc8b8e57d7c163d0149894390aa3b00cd5d41afd05fb49c59fc36a7ed42d565616b17f7ec553b9d35fb7cc0e826dea0e54e4ec488385fe122886cda11996531e8b5d79673030b10bd01e3f0dc66a249f9ea6fe22e88e3928085bbe840ee6b947318e2fc2b15e74d8ed628779c9b3b7321760d69d59d9b6d9d7e949228496b6dac8eca8c4b53eaaa39376bcd376f92850c8d5f6191cb5eb65aae5caa71d06911d2c73537915e5a350191b7218068b9f58d42ded1deefafa0da8260a76f8f138fff6be6bd20581a3cd66dd399a2608cf3a231589f0401c20713656da434cd5da57dc90646f330afc235fc4810018072577fc7b7ec30039b89668655aa3f2b9fc51517783d40d42e4f70ba4633efac372121033dcbabb23a8980b5a2cf9c98f04a7958200b68c885857f81be1816f5059e5e514fb66e8ff0f21f46092f605c0b95f66e4e621ba91bebbb3c897f2f2f56451e1e65a7d429caaa37d4c9f49a77f69d26028974114d12abdedda4ced95feaf0d3fccb9cc6f1520ebd1b2fe529d22149a0548eb1ce36676d0450559c99176c9388023e2f96e91c2e6f190864927b219f6a603ac0c457ce324690aa45ea4bfd4b9d0379d3df237f6e4942272ff53456fee4e1f1cd970c18e871b2ab978b692eca4e98d7b5e4e8dbf5e67c1c31485804d0e34774b1f8d31ced38804a2867b34fa07e33e3c3e8cccac3b5fdc8cb46f59aef016521bac18377270ac53271752172a5e795aeb54879ba1c131817df7cdab99596a4f238f099691e271b5d5831b6170a20d9b7d63eb42498d435b34c9d5094db62b3a7b0e6491bdc553ddf56a5477488fe519fcf3f50aa1124e334fc626b964de3248c37dea36beafb38f821d7878c7f471a3a4a41ebe553edcc519ea3584b8a470f82e976b66bd572e01ea29d1af314ff2552052e1324190f4f4e6195ea29d5ac666613323a218f024dde2fd5ca2da4911565e01be6e83b176506291f1a2016512619b82a70db82d3396628120c4980e12ebdc840daf846e6b542b4eb8e982c0ab2a883667bc7f615ee8357e16fab2d4ae8970eb10a5ac2eccd895cf59385befab6604d57764852788e527b168d0ca9ab60149f5947e0c2a647124d38481695c6163ec2855ce99aa60ac0b547eba5fcd6e14bc0e268c4ec24473693154d3ffbfc02eb0fd87ac7d6e64cef16e4cd4e67ea7108f6a3451a6466b5a46dcc3058eee8bf63356a336cb327ba41edb4485ab27ad90aab32a569fe30ea0b6f26fb50a4d1d44898612c4ac6615c9e97266ca745930425fd3d397e59a9b59bcb048a6f97a5bc30f4adf6ccec08588b4d2c8b4687071ca4068f1fa8ae8a573769444bc8a1ebbecf6f8e19d2a0bfba128961b0a86f5200fc005403d4fa80b57baf3eefd8e438f9c506cdc69691b64518a719750fe4de0d57fee0615328497519a017ba48118e036edc70523c48f3ec5b46a384833ee5f7c46fccffd0dcd13c1a18ff89c7c009f53f91e3e332c96e48112e86352ecfd4431ba5eb94bbe62b758f099d33db85ecbe5755ab197861f8886cb46db2f2f83a3a48ac38d828593898a12ece736a7f41a793c01d11db773282ec7571817b47c4b27b81ea9af11abb7656facf61e5303d5d7d626b09af6aa9e56ada717bcf0e5145edc2f5628d2825ec440de4d492980a3377a230c9645e6d2dac6496197284c24a02c09d7fe6a1de0a84a727f60c2c010b443cf3248d9687c22238559a08332f5bb56dbafba5750c0c58e49ce7d35699c7f2c55f6df4aa23397f07410f96df4928be2f4a7634efa64f21a1cc58e273dd2da2cc710080fc95f658bd6bcf3d9259ce5a905915ebc577774abf9c3e4d2c493b13377387c040773a00d9f5fd5102feee0f5d4f4e45a416b567da23cbde9a98dcc49293ee19f747b13c439a07b7ec165bd779ab6604f35cd91418529e7a116f0b3b24684d7b624a3cb7931f1aeddfb862b65b69876ae6a53627c0364ee42ac1ae9c988a09513ad2a364119fd99cb2b04d36e2a8e5df047eff84d4b7d0f62d08e706dff99bd2a2b00a54fd80d1506b280405fd8f860bf9c4108610119c99198e9c7ef895631b2dd813d9ebf6ac90f822fbceadacdd6e450c5f4ef048805ae945a8bb212563795b46a8c19c8257afa6a62e6ff8c8931d481f3d0a8f0044bb65690f8bdd3a813a27f4c98fd6adb108c5461af2513c622aed0d3261ab53f10a2a50e15c58f594bbabbccf817c4f1584569b37188da88f5c07bba6c894aea624a9a6c3d5c3e9bd5efff991694c81b7cdf02af361a519b0ac4e529c2cf403081dfed03428bd2894ecd929a652ced24386b88cb2b1234f1d0e47750137fca04b2b334f28d4566dcaf3f6f59644866f3abbd2e1bcdad87b09661ab646aeba4be27763bb9fe7e698e4e7877b6e54f14b3c81445ce4edbf7975d0f20b1414dd29e2c7fbfd816464df3e67fbd14d4dca28a42b725fa34a216ebc2bc38dce5b3a8ea6b5f19a850c517835ba172100acd0fce564178a12a09a81857d0220ddff2d58564295fb4bb81067416c0f4d04d3850fe91a91fafff030fff03232e18580075fe895f4b09a07a48b2c4ba89b1b79858dd8a1b072d14a8641e1a0b1068944e958bb1e7f283b8c427c28aa84eec03200b299810d9fac5c2805e6ef85f342fd3ef298a8256a88f9e731213c33df9e6ead44ab02558d72b78f0d43a854316d4519183b795d7ee54f6e538aff1fc7f6a9507e40783567bfc058760fb1a540ba9bdb6fa95ed45fb81e7cdd9bf0d6c91653099ab660302e1afc3f6cfc736f14190a6d54bcf24c33ad41205a67cd951adb4421f7bf987c996f1f4c030e5146a3de600e8e769e819c017a9e64fd62a263eac67a4575f82cae384675176e7930b0719ed4ea0afacff0c86fa0b5c7e397b5f858ca3ababadc27d192798efa5392b5662b892385dff695f29042b03e29021441882eb23f6bd4dd968bdfc96090f831dbc167498c27560a298b99f3f5c71d7d854cfb03889c21fc85ab54bd95867ab7ef4d3fec20f83d6a2d2fd5cf7efa21cd13b225d42fb4754840ce1359875af23a43b0fc34af9627d98a19f4715dc73484978486ac0839da4f4b1bc7b20caf72630108620bce7441b758c5d8f61e20d30525ff2ec8a0607c2abf86f26a9fbed9f492fcf46a5ab15887d09506daabbac6391b03d419ec3cc736e609cf460ce249bc28422d5ae1a2adedd167f554002c8122c3a8db3fe36ab7ddcc611a4f649a64081b2aa16ab391f9c2fa981d72202850ea342ac83381ec2cb4fa55fbafc008bc0ae1908bc4b4db073edae24908b6e858258f9fd760291dc40ccc94c8b3e8378cee55d26c469405963b650a384e64a71646f33f63cee0c8037381ddf9822fe47d8cf18edb8caa8f085f9875b51943d554165f6fbc95abd839bf4f4eb1c061280c9d20ed5d3d1c3653e4db8e1ee234df0e1365a9493298b26f4c37d5fb1c75d9a00f1a708d8f3e793167c32efd77999135e0466ef03c8b33b3cb5c6687d1136720ff35c750cb61a68483afbb5f0549c70ecfd2e51de142000a8a588d6a408d20e9793c6ad5b8b2f5d2fdc7e4ac4853cac40823db1724d7790edf1de1c7fa4b0b9e029d1c9851046e62846a94f4e48c46cbc8064804bb6d4e76e75a1aaeaa42359dd736972265a416e6460ba7a16456ed3bc14876e0148dfea0e021e46be5fdff6a2d7390b631744a2b9d919e9da6226c38549a145ceb5ac577028f9031967bcfe0106411c8a61b50de7917259f117f292d429f915ea5d28ff67a011990bb6afa33f5c47c44e8cdcb64158a10233471d70339a0e3bdbea6c0832a97d4fa15cdb13b45044151708bfa7fa08a0b54879369fc71857a906b0974a49eb6af0a7a416ed01792b81c1bd295c4e8d7a2e4d2f80db6d0f3a99cfc26a2f2841d5f5e7a77a06b4e056745314245e1f90bba9298f8e9eba435dd29a72effb0a9c4da715edb9e1677ab74f3252cbb113dc1fad24d1770a5d16c43b5d339b68b7fad94ed11ecec088b1821febd2cf3a2b5bb651bcbfbcc3125b8e7870047ed12e45feb48086b951624216bd56112b247e24e59b09f53b8328d331df2cf2165cd45218edcbeeca1c3818fe9c1748c17961fb0b8e61f66d635506777bb6f3b60266eee1dbe68b0385f960c8a0c2d82057d95858d822061e1be86c15e8a707e9fffb6291639e0d70f01a5c2a53f2ab3f6714f701e1a249eccd81e3490cdc759d0a3e80c08b00a7d2fa6e2b503552ee63f3c8efa366c282c0387f4eb7bf2af7682c3b9c574d427d78eee5681d5b42fc50a14a61962686ed3e1dbae5f53fc0d72eff21408aa068d681dd704b2bbaa13f1bcd86c339db551a93b2f0e345997691a8cff8c028456697731b7f7178ad017e73deba9dc7c899a954538bd8280cddac0881a8879363ada708ee24286faf54b35f8f2c29fcc0e9725567ede09fdc70f6f6bdc0af4cb5b1207fb180809c5abbf7e71c281b98364afd777c0a620fe811061fee9738953fe9d61eda5fe0857aac06fe1881b54867ff042f85c24d54e7a534a25f0de80251a44e128ac887df6bf2dd8b81f36a674a608b5936eb973b57414804058456360c31585a87df593781a749b54fecaa74710efaf6b03d859ea2a4dc6d0217f240ec392903155dfc953d2f6ebad7ec4f56fa66e090f2025b46932fd7912f874085ffe5b17b956b28e67fdead73170c9bd6de5cbb7fce6c0bd0849e8b9cfe2ddf3b0f6f04bd8c040bf15aa6ed461cde4cd654be4ff7884b63f76e5b6e15b0b6de79c4c4f18c6048ce52b2b6e640b00d53572fc6731ad7176ba4942bb3ca9809cc325ff36da6fa671c7104f1f040877d2da40528e0dc9c74d758b856273feff61d09dd739e3d4429ce5a8a1e2e2c11ef7ec35b752a27fd6c4fb3add14109d5936cf7665884865793eda69b6f27cb99f8558268bd9d9ab0ce33eac07b2110ade9d23987edae086288f790e82b31450014f0aecfd07890ce286aaa29366993ddcc85c2d90017ccce7ae49a2296fb589a4c61be2405378786e59d0c18c8ab74b8f0163c7f41ba62e492bd9b7c7e1739a8e732f6e510d17fb402e98786fa34e4240e218fdf276f36ec0288ee2eba3489bebc605c73126b1aa5651960d3aadcb6cd1de82a876b7fa4100562e9d997a63f7ea04c8a41ce91605b3f504d4a88aa7ce1075a4a07aab37337329dbd322ac73a6ce40fb3a1ccc83f0fcc1ea9457c4c71f74e38739f704ddd4b1ed1f696da79c80ee11f5b199145eb633c40683b61e062c5ae88b70cd621c2f2506dd35e3ffd06a2ba9f41f5a9297501097d2a6946aefee6c80bb06b147c2b4b41d362923faf2c90cc5e9ef3f72272592bf14b57366a842e283446c9ee07afdbf418d93a93b8473b19384e8c3c5b1e173afd8b3fee2a96e429f6f7e6b2d8fd36c8f56a6f5a819344da48a54c55f174690142275224b5b5db03bb3b4ecd79a127c1f9eeef857a8489af105400429a74633e0f8635debfb489d5b98092fbd46a794fd4d5f2e1f389bedb18f2423c025ccd64bed5da0336ff75ef76de111a3e6945cedcce68ba52af748553cc4bb7bda6aedb8616320151be4efb38c4768081c79f99593d31b96bc29f73054f71dd08c224b63b8d73bcd70ed4da8947114f749021fd65bda9d3cbdbaa2b840b268ba28b05bcea36e938c4ce53052a9f037ba99e1382788a9cb560badaf4b606996c2281fd516604268bda5f1df2b9ac5a3a27c86cfe7c36296e4409f924b7f09ec87c4e227f4cf348f483859b840e25f9af4e2df05a760dd0d7d7155dbadf1c681ad010df042ae7ea72dc892ff51b209be8873d5fb7696977f6d61a38243cec82335d875493d6fca819ec73ce9180757f98eb1563e0bfd416e21c89e32ca8b54ba189d3b336cb4d3ef924c11363f3011213ec85b9f569b138050e80902f7c9fccfcd25ade73b018a40b6bec956a60fae283164f78bfb91c2fd70f0174de7702240b89a4e80005c197f12143cfd3618f8bd55c648dde08c0975cb42a1d7822104a7e8a2da796387f02a41024f9dbf5667c2ea7af4fd81d8d13249bc78d6049e77ea509e9450a0e978f427a3a1c13df55eafb50c1c5a78ff23703200508e840f1ca0f666567ba070e7fb58461cd115b02b8a9fab4017f185834cdbef47c94080946571d586cef58ee134f27ba1b15e814d1c073330a1c70366728c8a7e535c1830781603e25c3668b920020ba9eba21bccc2686eb8976928644286eda8cbd8e7c134d0b2ce8dfce0168bde105601a6b28e73ff9ae906ccc87770462424acc1b413f7305fb2ff0bd8a909e170b3ce126e54e457fe15565026b073de11347ded4e6d4663109c276d000251d1c6c488c89182d806117c37b74a104ccab3f9559c39488d5993e4b3c83ac0f30725ba834dced6fcd6f593d6ca00dd6c4e74f30f058ae66f7497f2d1bfc54ee2bc86cee5717c054d3ddf6e1b6641767eadc8725c8053fcc579c2ce6422282b1f3e69a4cf4b32897897f6b4ed5822e91c0ba35a7749992104af07a2191845141c41e3926e0ce40b5769b5d41b8e4c76bc81dd3ea76ffe8aa92fa9daf4475f31b7d6eb823d54e585282dd0173c0d08a0ef6333d216c90fafa2551daf201e3c038ac32217d7ef4d07c1cc274766d3c491f985a4ac6b4b6b871721cebc479ae63cd858ef508253a4b3ce36d3bc4f2e0cc51980d003391b720ffb5faf67e9ab8c5cfed56e0beaf57f85dc416480fb9da3b366acd369d8b2eaab0f9ef6e7a2eea846924e3f8451152f883331cc9b1111d37547321229ba7a8227cf4a8a89f8f2fdd5ca442f3cf3bd193c6ce8065932743675d97fdf636ca0091e24da76c6a69f9bad2575aede5248c83f89008af281a4ca7e70bbbafb57ab59be21aa3df7edd4f42f3f4fa7d804f1a5480a0d5480e8938f07c6f81812694648b94c8330461e07bed5222bd5ce218a5f7fc0b56bc300956375fe95d2c5f360e72dbf907f22aa5d6a6f15a392556f439edfeb7e0d48ed8f62b4e00e4ba23592f46446b0d2377cdd77cedfe6b814c3c6feaa0709c764519f2b7243640f1425c3b5093728bbeb010e4653a9e7cd9da20fef20a8ba63c483967326fbfa64fb09773d5968f1b670b78627e22e48039959f012652329ed06c7d6af8c8b9f1399e63840369fc2117ae84a96851f137f54ae0d37ebad3395fe8bc4fddcfad632d7311ad0809b60008d0eb1dc852da411e3295b8a083b508ac6b0c70931eba4ef7c20af10005d5d41e4e30761def2d0720ecb7a4a8e1ed6642c75483f001671ffc9ef5141866dfe0259fc9736db823987dc2f05f7ee9121193bdad4f1839ceb1be849a1dfd6f7177c63066937c0c5d0fbbc974600e8cb91e760f7147f1a5dca844c983c2f82b71f067c936e24321017b4151e4760906ac236a508ba99ef3a3fcc3e6195c05da2646ba9bd84052bfbd1e8e4b58e708f8f0aaba3cb35ed919db7e3184145710d8c8cb7b7d82d3c0d23f0c6f9d95e8a71d42759fbcded126f02e1a04fb08af15bd92b30268a7814f090054d7fcfb25b14cbd15c934d30822aad932e503c6f30e9c430e32c4ce52f8d182d16627ab97af597964efcf57c6538fd2480fe366cfe73308d98fd69e0741d6d251dc92cc1494b84d4878967ccc9d2987d2d5cb4bdd6ca62192a04187ed684451565735cdafb1672ff638cb4bcf29118579d14030595915b8db95d25c850ddb7c46275729dd13330ba699101e2f18870061e2ac17b08948742e3b8fe45a46e8f94b766db96bc4cc8bb6fc5dcbe5ab9283f01746dfbe736d87d472d7094958d5bedb69493947d456612467716a7d540fccfd03b2a94a29f7a155ffff3b799e685d8cb39e7e5ae0439378f27d33fd12bbb5035fe7af66befa9fbbcb77a96ce9b1b9fccf740116e18d612a43324216c54da99f9d314f08545a52b8845cc7b5dc58d80f1bed060b551540739428393b7c81a887d511fc9f06669786de25b7620ee32f7e697871ad791c863dafe7d70fe1c1f70ab15d09b61ab5ba7a9a6fe63dee0a7fe561c37d7c3862a82a2ec80ac25cccca879ecceea6ecc8d72aa20e9b4a7515d1ecacc18c5f4a54a521f127043988073cb9d810a7280743914ea7cb02b01c17d80fbcd6f2b77970a74384520e24a65df03249399f540e7d6d054aae453171b3fe9e132003f5d3b6224328d25a7f9d7d757c994922ff89a23554d3364bd7be582769b95362962abfe41c22095d4a61249ea76a7a016c9a2e220d56d1d1bfa23dab22bb8d49f9bbdf886f24f233429f1e25b47e2b6f85ee498cb6422ce7538c78f43c3b155e71e69090360c1c249978a63b36b6715eff4c2d038bf71a0b321a7386f48809b0f2b0c5786409d29f541557d1b464379a70acfedb957b8556133f9095d8d5953185d6b0f4872af2e28c4f526b15e287af3a5b193ab4fd8211c7233c98f2c4753fe1f756b636054f8c5b88b1ea344a1502831770056ebd9a1cfc5c523e5a6f1a5c98329cfac61a56b951b3802a84c090a5cb9a4a22fcafcad3e7100ca0c9007fda1a78a9cc4684b544f51113081568a51549e550501f830a59b1763b95fd0898aac6ae5359031878717c8efda3677c5ec02e71dda1a98f82557ec7788254efcd36a2c00c80ca17cc5482d695063421d6aef70ef9a3dc337b5729aefdebfc9d16f1aea5cadc3194ce4b54d0951012da8eb13520ea40ec76a448db78f727d893c926c4c727ea4caa08612c5d5fe393ed83df301ba6b2c3dd92909b75130284928ea0f7f75b34239dceca771f741f01a2e768bf6031aee34f46be9f39c4e03a8f50b49ff49be12b2f75c5aa1624ce48fda1ea4f27bdf9584741c22589cda0b62852352f9255063bc8f8a5fef9b4bb922c3f21bdbab3f87324f02c9921eebac17c6446e7eda1829fe94e918befc2b4519dfebe2ab841085de03e2c0a9feed5a142e7f467dd52d8c18ccd642ab838ecac4bbd39d799431c0bd9480b23859ba498c8e49da070e754b23c43b259cf7ae7b6750c955b266360cc3bf82c7cd9d4a52fc8e668c0ff7433fd722ff961c21e1533fbc9c26b14b5cd80d7cfcbe3b2d8a42f432bb5984932d4eabe5003e6767b4f40f12dae2a0126c26ca04c7afd91c69d211601b4cffee0f277fde13a20e903debdc40cbdaaa3c4511e25b51a3e90d3c5a7c51babd13fecde421f4d5a7359b3ec2cb0ff9a49a4610fe237c1ae59d966a8cba89c0da69068edf75c771983fbffb35a822c28db339229d7419f9408b3f45aab141f5c35770def794f4cb807a790d4aeb1234b1338f6ff5e2398cf7c1b4a609e402d2440732477b440409a17a69954db850b25deb8c2e361cd378df88924ae40046ad6dbbfcc867c9c72de85bd3c80240f9f58b1ef2aaa9ed4bc0a36f5112a5cc0400995de7861573f135a77edbababbbf1b2ffc4b1fedbb6e24e3f77fcd6ae466a9aa2e395c26aa1f44cda4ee598bf4c99e4b0fa1ac184baf814816edcf3e2a36de72d789d1da84f3c93b71ae26fafcbee80eb8e203845821ac66f207beb4548bd5561a9759f61f498de22ce4cbaca1b248524d51b2d27e4176c1cfa011bca5236b9eee0fdeebfa5e38904ef62c7dddb3bf2d02a8175d71cddb7f99de1c664ae743d0fc62ecc080d4872bb4ae68ff5db32276ddf9ef5235fdd0d5b08ea17950e9a1ee250f2f60dcde7534beafe41783e71e8474eba100c808d6886b241a6a44085e670283628efdcb77b018ce384cc54ae4637f780d19d3583c0d5337368daf6fbf24592dc938431f25f265f094c05ff6d73badc9a6af770d3e083d91bd12162903d0bd0978c069f2eb2ea7e7533ced93f3fc3caf4c50d2d1420c34823da068aed3e98a21cc75e32f068b36d6c5188d15bbd3237b625b0f4d97dcc3b2463c26a09af74797e4ab4d00a690e8f7167f6957fef34227adad18fdb2c99c9f29b58df2b350120ace4ec16ec962ea8aeb2bdcd5b5d3a6fd9b825a65a9d8ba5c406f27e53ead0b20ba5509b692cfa7118dbb775af801f6f9fb28fc4bbe75bd02c6b3c17fa93906c63b4fce6a1531e9a9f9099f3e174765bcbd122d52451be71a4d6f9669f5f7b5f158483c2e901a2e730f6bee20a4e9117905ecafbb4dd339a0140efc5e87c02ea4eb561c9fe89cab6dbe535783ff25853093b35f3b426c7e5e296fa7810f97d9c01800b37e58e650dc855e896c50fa8ad4b2af55c2cf6b185b46c0d05ffe31a5031f56873b217def06c98eacff15a0d908c73bc01bbc087174878de86fb94501721ab396379944592318cd329872baebce071784e9bfcb281d27124e3c7167637e522311e90c689622f03e6ab85c4231e2538a3577eade1e5662d8f6ec6d8416da5ccb30efb9368befa02494aa2eabc7df3f77ea2818ec16378e05eb75464242cb349db7bad81ed462a0c362341b993001b79ce8b271ec26ec3aaf594688cd8feb319fe43deff9ce7c5128ffa22d71ea54ab4606c9aa900e536560650607953e52e06c9d4a8ca688c7e4d0ce18604f1634efdce8e3e4fc2be590ce297c5d94bfa54e75c916a62bd201c2d18466ebf1f5f8f54d8e46da729e85b8b53119c51a7e6e87046367a23a2dddc8e9d296b6981b5f7f47b6dc7e12c1dc349a731ec0b50ed9b0d546675b32b143c9f749a08f73a3b5450d90ce2d98dab8fcf4f258b49ff27fb55bb896a6f9028fb694f811d496967a9ebff52b0e0161314d626722ae0ef399316c9037d548a02c42722838d3b102785f23b69d9264e76b3d8581c47a878d6d3b188041721f89154934d5a83c07f932a1f1171ca6a6b9c5cb07ef68f737307a493c149ebffc0f91e70047e657f9750854be027484f04d26fc6bd9bfd28066568cec7a1f5ab8fa2ab9ab99a80fcb4162baa02feff7d26c21b18d18b43340a8c976b95b5033a8c26e7d9378a2832e6dfb6fa5d53695d9e2579ca917837bd7d7e99a84eaa812d846cadb86e7a296e844ffb7bd74f12c32f7dfc4ae424dfa01f75f3c5259da7ff222877022c75614515194c8a58c5050504298eed3093deb666d5c1d702995c9976a6126119991185dc5b30a95dcd227142ad5ec942793a52a0a60c5455380ba30a132d06ef53509872dae835320f01581e28d2892ceae130234b0e18b3c89b5e25c7f66123dc57e8b63049d12c13a492fb7ecde5b1023954d4e9f3412f4740d9dc27a71f3f9207eabf5958bafb7bbeecb78833fec918ed2fd4756e454c5161cab6c6b3655e3b9a7a6f340c7c6ad22cb625a52f62b260e4fbe1a5fc179649e0f92749dc9152f4c523c565f21071f0197e1d21113ea9c52053eb308ec6c0a9a7d3241f9c4b8390479ab6daa1691c439bef1652e4462fb0fd01c327062e04b7d4771438787d8d294cf2ecdcda7538d4b738954761df298ee4819d92f903638b39c439532657690ee840cef4f0be31fc9d8038e916164204f778d12680c8f390b57981f725b959a2a76924ddd8554f38adfccff449be5a7062afeb0168f60c9954be8af916ca5d1d6c9eba21a7e5bae4c688643038b85cd4e0eb9f9cc4d7a583b3e72429110c6616445bff228c4669d29274be99cc55fdf2a06dbc9c687defcb78409e75302a6e04de923604f1b9da86790933fb4287bf228430a35c38cf528d40b43a76b78fea8aab4f06e10d808010b813292ab1e43b805c036e19fd6e00c6627cdee12a7aa51fd59fb10ed5f1b3262b5d6222ea4d6dcd277298b991177894ff9e3f53800763c2a7966491c6b5f09cfe4e3b2dfb91c840b85d9df569968f893b17e3ef70d5b22109000e25d747650bc7aa37961f934252fa29368c9f61a5a2d730ef24b8f753ee8a7648f394e5763e65646663638a857ac33a957d05df6e423ddab0009be8ecadd77b426d7db00d84100cda41e5600c0641d543f4099670062260366d99f74bc807f2da9a2d99270d825660ac72f163d67d9596807b4f9488f14031a83a95401798e704fcab100299bab790579dc9fed7ad48b064ea0fda708fce1f666d83989a8eb8c60db04eea1bde7c9162e0a5f90bde0971373c4ac4ab8be968db3bcd022bfc074a1796c709dd6ff2bd4a4eb578ae37e33fa89c041a6d8e001f1c06efcb080e3202df2f5d89386b7580274b76cf9bbb3559db604fa8fafcd0fd0cb230008c54aada26e3a2dfc9c886650067731b82a67d0bbae06e540c352e2c5fae6e374404c491a25cceadf04afcfcafa9cb4f12956db1478cccc507214465ac39bfee4eb0bb2f9ab36d2216105f843d9f9f154497554e7e5da9f6e338374ca663a7a0407547a0a54db5f30c6c005395d6aabc9ed40123b3d10b72c519c2a589495370c9845e514e0c3cedc73bedae421f9900264c3f5a5b3f7780eff9e1cfdbf2c6e1d83ccbaf58e7a59fa5104134fc10cbf3a7594c3254966bf590f9b97eee6e40315e0d9a58ef8abe9a8bb56d0603e6e8f3a5370d2296423184974fc0dd933162b6d52296319db72d49a26abea2083f0fa7b9f7ad2dea31de07ac9630f3ae3b432cba6acefc43462d31b6d1acd2b4cfbb3038bedb901ef6c0f6fe2c55b37e97b2680888b3f5be5b27044ae68e797f5b6c4a81bff99ca52e51243cb8d0f31ec5a14026a6add688fd18f4710f0e7db1d6f110a2c9e3493cf16c272462d25ff152e54ee38725c77aa7e456c94651023433944b51ff407507d620cc2a8dbee97ef9eb86fcc4f47ac2f0b51b2f462f3e2b0694521c8502621a6877b356d5d110e5e20f57f20996d7bc1c72965fa2795b63739a8876801113ea442983ab80b0dc37c16f5d0da571868b7e72f6255bccb99ad87c4d738c334a24950718677bb1b27c1a3f6cc3e197e962bb73e718f88d6f49e777d036a36b710e4334c26a6330b533ea7bc7d1a59015b73dedad7b6bed1a92512f3af9bb7a0beef206921f0d440fdee4c6ad254e399b797d06ecf94da5db7742ece240aab682eb0810a260b0f53eb300574b975e38115219a85ee7e623a8c7a7ca99e1aac9314eed7b175b5349cace56424fdc0739e370355c7bd6e2d0dbe0850e560818cace9c6c0182769b7ccf333298ab0b13f3315392ec9122c8b87af88a545d278b2e03c58b139fe9307442408a9e419e64386afa7f81b2877f317ce9c35bbd6cffd19483362d8e46700298967e5e01b74bd45d3025deddf89f8e9f55a42a233fae2cb392a96a045feeb1869aaddf9596adff8e1014cdaa6703a3c9ea817eb19437908c8fa4ae9662424d6b9ea92f3ffa7296072177ac5163a8a769fdacd3bd9e1d758345be943b86147f77e2d3feb15b12783b4496136737a2541e7252db2fdd5480978e97b037867d9587c03f5f781b43f5bbb727aae6b821bcaf4d41e78c9a7f416ae31ba6615e654532cf885ea2137aa43565b6bffea50eaa2533455805e6da3dc0c5a837024a98c5e0e656a2970b67500ce4d3c53736ec80e596fb88da6ca283ec31f563a9978c934ec86b4e34f7c490ddc20205b165410437d7654962d5dd8f7147cbdb15d546d582a9ff043504b1a039157c67a7ac1d47076bae329755e6b12880e53bce3886b5b3ac666f5d76257d3ba163ee4e01a660499f869fb58e32d384b69f5185d462c631bf0df0a2e0a8e9f42a5334b2f5409ba069dbbff2b271c60f43ff7cdad825b74a2cc41211142e4c424eb3e49da94a00462d7410b1dc1243a2367ec3c0f9f778c5113461d32c1d4b8e133562b90d76527fd1b935f6f50976342525def4191fe2606e17471c9604c4023c5afc5c47fddb70c81eea09a14efbdb94e9f715a4de280314886f7ff883e4427874c08bae41558f4871bd3f056cac2db1ce225bed62f8370986567cf48f9be0fd5e59bc516f0362bcbfeb29e677f6d22632a02933ef0395c583ed0c93fae48f71e484eecfcf1febb6ca0a2ed49158ff90647957c00ce9d6cdea7158472d4fd15f0d4ae2fae30bc0340cc4e58f0f215f07fdba679d51fb949a05a72e1545fc3aa6a7bf9b56a47362b51c24eedac3a470c820d9057b98d6c4179503cd2b882f99d946f5f60bed27e6a0c495e822af5787999590a2a422cc6eac27df7050de8bd1c5f2ffd9efacbaacd99c80660400d7293fd43982a032cfa2b07599e462a07e65547159d50090fe1603132984ea740fd8aee61791f212afaef7c6d119539fa64a2e80bc325b8b0a2374a922a3787be630b9efe7bad00bc35a26bb9e5ed98e2578a8f538ec2d35284b65fb421700dbf47fc8c50fd6407efd8a5051563ea76ad01c811a78b1df4473c0bb33898733b6029d10f2f833b7597388f18e26a10154d51d406d7d405f04d44470794783f4f701441f2330dad6c06634d3dbd472e64bad4daea971518505df58819cb95ea61598c9a60526d9f63f033739c4132569c027f874e147f9179b852748e25816431013c4abe53d17379f76dc3f89760ea4953d30973d892d22c91f220c7d32121050890b269f8a536cb94f3a6eefdee6f0720f435ced77c0cb3a41928b502ec80c7fe3a838422fdbcfe8c1c0d7066247c5068f0e96d91c7ed8646009c710f8a46aa85a5e998eaedf1f24499136d27c630b99ca9a3c260622277cf5e790ce6d4e81f2842eebb99f8c4f425eb383016be01332d4499a80830794aab2355c5404c01489a0b7774ebfa95e675df2535ce0056ecf6f21997ee9ca174d5daceb47d77fec71f2eaa72cb22d9a2aa9c12232e3fa83907803bb67fb23d563c9cbc6e31521b61e2efbf1d977a564ccfb9244909e54165513fef3f89b751167248604b797ab015a9d98a6eadb3bd5e6d16845295087322f8d4d05cf335377989306e83592da07b9cadc13cff48e83a60bd9b277c3652acf29bf246599bf9d51df086f7dc10dc785d4d43a63f6263c4793b4563cff55dd63f53cfb11422b6711a9dfef03ab47ecc82ac74e9ba9e5647e24ac5d0e2e9033f534b687b290ac1144ea6da898cefd332874fb784543bbac84e77ee630f294b25709d7ff732f585e1550e3f89676620c9f6ec61d150e122e35ec3e7d8fa420fed0581f9f652514ed26947a35120cf2e1756e5ed20724fcdb92c6447f3ccc9a4a5c20f44e78150f3d4bda54f1908fca6b2710ac88e90abf4b71db8cb2893a9c4c83c0c1282607a542bc94e82c30021a4d59c80fbbb781681a1e2d5812d76f7d623f8908a4a6e3ecb496c35a740c0549c1211fb29dc176c340cd5d0133b39fb32f4bfc779dc79d34e7b318e51a07d0e04d08261ef345d0a8c63a84a72c702ffc0dde08ccdd98f9d20230c24e48b819ffa156b42439080c315b3beb8c2c59d527575d373a28af3ca1564ae56fcc21765edf37048c5c9f63ebb09986cd093b10095bdb85db83766eadb2ac779630e8ebcd8c80a24f1a5a70f1fd3b3fa561845415aa119b3332907745ee177624a32f773de6bf0355fab56a69df7936c220196b98bd18e2d61acfccfcd3092747b75597fdbce437d4445b9e7332ea4495b3e5248acdf13713ee76b95b6aeb5f8c36f32508713eb897c55cbb43e5d439c899ebd133993c029d9d62c891b823b443fa5b644a4d3566f249ee52da3368be0b6e677e65d25aca9b59dc3f4e6d9786795e61cebedc4ec772d74f0c0184fa3b8f10f9370320d182d95fa3d258e4b2797058e0213e55d4f8326841f90779b3a8bc6c25c55060c2677415237250b352001dc1114c3a9832857d0b79ebd8fbfeee46c5279b290c4194bf77aff79c73c3d6df18d1a9a377e8ba60d19fd11d72637b55239b48fd6129fb519aa0435750b2b1ae0e76c7c15727d1bd7ba50ddc86296496dc29d009eb0b86510111ae181bdff8a7c01e460dfa21e8c4753aeef60d9c05cd1a0d49265f05afc7b657bae31f2d6fd984f3a338876b10cf0a58872664ccb331e8445592c8394758747970fa491c9291514b34dcf009c20c750ea0e6bf74f6e09486b28461dc1b12ef182dff79d4587dc8ace8902322f1cc8f078f31857511e844d8f51a096ae2e5c4393435b55149452183d55c6dabed24631637ebcc56ee50c8fc9460853b7a15ee8ce6e7ad693778fcfd57c7bc168e769d5cd6350bfcd821d2db2b9bcc59d6915d05370ee2e4d7221d68a115e8a21d96118cb31ec38528fe7ae28abd0e67e1f6576ff95bf82e8cd1e32b34985601c09fd8525dc3de73d84b6737e0780d8c6ca2f3d6648ed20a0305f2225c451e3463ee416c0c3bbe5d7240a7a1bd618aa021cbcbb285be74d3a9a400fafe9cdaa953b9af646676bd81ad8411c08137f0c21cd0bcf713c6eff8148a7f6c0c60107103acbbe065440693fa43711f36248ff9ad8677052be3bc9d4f4f235a393cfd8159c3f794da0a92e3e01675606d8c645514f2e91a3288106a5a26cea7e416224077fd9bc0c9e46b085ba07e059f3d76f526539649e16cf7669f21cfe29d1b1875956448968636b75e9a98280df5cd8e2f9ac02b0a39601b8c4e8e87dbbb4c5348598222d4689680f7e00e5287d56e1c817880dccc136bc039c6165a8d70347d3a1b1dbf014e72a8c9b8a8696300203ce332b00e4aeda1552b52a48f34357694a40fac41f8df1aaff95c1d3f39178318a228f8e738778b6a6a5474ec2580c9c6c248362b78f9a2f020b4cc2ec49a7d92ebf1c1a6838d28eb14429b88fd8343d12dd4c03efdd514323498283158a086ae6e162f0456ac90877d4f1e897c100fa158d7b7746b6a71b129d46df9ea2d97147937195c42e2ae9cc58555835b9394322c33121748acb2d8f49df080b41908b2f43938c165b941129af299b3d73323c0c2cb5b1be4715b1e1c19a046e7876475f1d48bef7365164702c83355575e36b8ce4eedee700345c11f831585a1d8cfc388a0c43d2cda56862a94266d2823bcf66ee5124d11cb63db7d5836fbc4a15abc67eef23b7839ff10792cc22c0d2a1b4891c4f7c138d127ec2b5d6ce01f53bc767d507714a2ec7b2460755af693b47dff735b74a915205e74ed4b6ac8dc944c56fc2163d52de9b25a4d3dfcb7c5df3fbee8fa5fb102b482cb37e69a15dd85dfd71bbb9cb59e2880410d6a9425b5476e830029444f67e16277e4a8d8ecd27b652bccc221a95dcd7a76b37a9c7245bd149b948c67016b6c49ca012483de2c0d0c3f7a278be23ba24d58f4246cbfdac756e95c896aab78d55d581671c5704718a51a103983cd356533f009526629e35978a192863a531ebeaf08f2fe2a392f180d4dced81bbaee2ec7b93aecc4169f0e3b65ae66bdcf5b555834bd152370ca89a248aae2c92c793cb236fb05553156abc4d79f40b545933190a7cec1851a8ecfd654cca14fccfbd8666a72c333b03fc8a588274429d244e1c34d473a8acb1b75a7c536e45a5838ec1b126dc7fe1215f65cd9e04bda28e9d06dc9eb8292970593f945faa7169d4ec48787ca3e928c33eb389215627f64b62c65a1dc6efe882a44566a9b0f9632e18d64f6fc23abcf8270d756a22142b6fe4620cac5eb0814b64a15632e9d9ce175835097af243bbef4348b60d53dcd2f3e4e2e0a76d53e829e3a457c064b6ef42c382b3cef5dacfb022bb855fc8d3d5d5a6054dfb1d5ffb6e076c570506e7166280e6e5040474e0a6fced14c728fa21bb5e8d5cb9533ac16a0b96ef7c104e90fccaec6bbbae9f579798a305159a1fbba011becadbdf12ef4c3caa5ebf9384a5971224dbe6796f4a2b0af95e3336861b9f5e21a5fec26ac3fcb51dc94da4e82f30b71bf07c50c65598d1fa1e9f39d45e8016488d63671a8e0278d45e375e0fdd11f1705a61c4bd837bc6912c735fb51847ef8ee66472caecee148b983d380e9775b50f1d11773040e9583b877868eb6d0757738dfd2bdc01dd145a2e1307c8bf32208c5161c1fb704d7c7b11b85c667f91804f533d674aba74a0fda2994870d71f981a75dbed6a4ddea3d4a1846ecb3c0c1337a8280151ca1a4014001521c6cfbac3bb57a95cd6a5c1fe4e90b91d452cedc67ca0787e7351a8b82a2aa8c35d24121915c2910d141381624c35c821aecc877d198b5f38f972dba93d132d23b2850b618cbd8347913d0a7ce973ef727c67426befd8e8406b74585e89744cd34d70388478a4769b7095c7ae615830ebf464dabf8ecfdc760db4dc0021f661c508e0d25f84bb928754b67227c22ef871e7d1e3f844d7ca9f851afcb935f29ca767bd6651107bcb37a5df9892cf22ce5c80db36912802bc63095eb645a79ee13884bbff8f98491315cb0c8da79b9948278257b375aab55cd615427090611043d6e32e4fae868957ed988b4e703455711efb660667f5086f88c9c76cb3cee511f52c259012680effc413d9328dbf5319ea53b908228141466f4a28d03dcc49cfa6e3dafec2a376eee7e6d3e6c4315537ca6d1cc66454087bad2becbec4c6c241561d72641f410d795e2ae0d457dadd89ac31e648de230a811687956e7b83945129f0c2d16808e637e4d9d016cf384e5e2baeede8c7f037f2ccb8f91b6d6e56b7534e29fd2fde4b3e5bf2daf11507e7c5f1ee8e086ca0a83721ab06af89f7b12dbef21d042c286840680cf10107bd491589f0a9b4a79bf54f9b115e0fe91fce9050cea3226b8cd9e0b747b4a4d1426077858ba8324857f703d7d40857cbab9675f8fea70c655504e9fddc7b5fc479a8b960503662ec66d7e5b781bc700ece8a4828a1255b3428e06198a8c85c67463500e02abcb5da90880e61ebf34ba26567c1b28da58c638bace58216af7f7c38c821ee2fd91d3ba204eab17baeb5b4a7dce042f36af53044cba78c34eb6b40755fb07f0b2e084d1cc0d714efc376e3d693c07df247674796b6dc5a5b1b7d1a2e517ce5328103d0c4d5c34686a6495520490f69e5d7d3b9a00e1f0a861bbb9427e5fef5152a4fa5642958e60e1530ceb917872a79d21927bc7262a67c1b562179451e852743d4c565d82243aad5ec17df40a62ff5e10c2a15d4ac2a297b0fec782e56518a3160a12252f191611f28585b28799b18921b6878ba942616e969086ada64ac18e904d31b8dbb4c0fcaeee684b75842bb63a91b78e783dbc9a00f8f2fe720763c120aa9c89ad1c2b89c440cc29ef9ffe5ace7f06591c2916eedc905c52bdefbe98373b2ee5877e3ebe94a9eac934ed3d516260d2f43166277bd52a4e5669b53689a9eb46371c3c9a661d92bfdf97cac0ea8f1bf03b7bb35b2cef466c38b40c71e4c8902c38791c859a760047f9c4d24d7072f8d289ae2a047aeebd01c891b73e3e9c87aa2f932b9c974b3df927eff1257b2ec6cb49bc17aabc9329bdbf91cd1deeb362d2fda4bd2d65075fd227ef374ad222f022121959d268ddcdbce49254274078cb22f9703ccc3f214cc8398b5b34e3e11742f8df45c02bb4e4af3e26bf65b5e0e62781ad267bb48920d00d3e2d5a8a01daf4bd33087249808b3127f6f01274240e15b09c5f4b104435f9abc3935011f6d8f38673e54017b6c15fb41d8d1d7b324d22b6efeb6e8541e9d6ad149f85f36dc6300736cc512d047e5f3dc7eec6abc7592e2223e76f63bda07f4ee11ea3540c74a97028033e328c50da67e09b38f9797a60c3717b3addc3112c120e6f1c9f76976dd5b1504d92c297b2c2e1775e1478819da9127007fe9a189a9820de0caef63ac83f25585967c11970bae9a2340aaa2feec0123b06ab84c61aee05de6f12800f7eb77fc97a6fd4f70c504ebd72e8714933a811e55da19f97f25d8bf44266a8032e068316e06aecce2793c75d78aa3e0822057a8ccceb91b43e20bedfb755f439cea344c8f1705c13a00f9a3c1d977f5819325e005ba3baa90a4f6cab035b0b0392f268693b869db6927f4b81f2090179f13d79c7f3d13cbe0b23790796efefc3d099458281c9c9bcd7d48b3b4af3920a3e00192f4dd3618666a40224ede2661da14c38e35134812238f0502002da189e51a17252ace92ea64e45b348b4128d09f1ea36b7cab15d254e5f1d128dadcac172ceff915d56951fe8e4f634ba9bd247cbf7d3c41438c69e7fedba8c458af6d37fb04d646c213c7c1f7dc19be6ca08f49b91db7b6a3223eda41a981addfb812f6d5e42660bfb1a6289aaaf17d069bc05d496f27430046a1f7dab53432f0ff6f43d605d3bec1803dfcd2848d479c6e2a1521d6121f49002fc7596c310d59ee793291da02901873705e129f610285351ba8f01eae9efae8d0b66f49d77b2fd4063d1fc1d8e692bc514808f4b097b02af21c19dfd4dd4438eedddbe293e68181af2e5d5ec8e01528aca56597d4083f7c613892589f9664d56a451a20a6615f5ed5a27ac22fdce784492cdb0c81fa6ab7c70360705d1e16840bab9833ded0a5944cacb004b696bfde522de6aeb491fe1720503a8ee04d6214a53efe69e0c874e51cb89add25d66b9be23508618c0508e5ba230e6ffed6e104313594df2718fc3b11de40b00a7bd9758f0016052de2b7b874bccfd92ed40b64080f6d24f05fd48f4431e1c60f170ff1d64f58ef516768bfec3ffbabc51dbfc27d682881c8722b4b45d8f7bca7dcd3e2663fdb574b2ef3db05b6fbf2ff0ae9cb7a688475493d0d3907c556e04d3b6d5b35296a3420057495645e432d938d9a4ff6381755f80c88f195f4b2a2f3740c50e2d07ec9411ec5be958bf545721cb3a5bebfe119ed73f2c2152dee6773019f4f2be8c4bb24a85472707e14b78c0c3f57d5e005aafa18794e7f79c3ac075ea48b315b8206b9949430b2778f4307b44dbedf74b143014972b06c864a07af5406de052c62ff84a33cfea8c73a93273ce4929ab6b07cafcc8e3ae431306a606139ed6a974fbaed9d315c9fa8587a0100b93812dd4fee7405f2b09c7ffbf023c94187f5661c256d0d3d8280156c4968db382d74e39e96c8d222b9b1cc88d2312162dc1a05c94a2e166ff56fd1a4ebea4bb6bfb15196622bf1ab69cb89a47dae3486ca543820c404f4fbfb4b0a9cb79c21eb34893e51bb4d21ae7613ee992a183d64609ae2bac1078e3b0105270373d73e7caffb314ee37180d5893a8c0a09ccc6b9d043a0dfa78d459fc8750837c0500dc14df3fc2171117ee112b8cccab561dd01b1f7707e186b5fcc37447b4e37a0874fc9d8f55cdb38cc31025c9941d44596d055cbe6ae2d83840d8d18e55a36bff2de5a3e76186467fc92cafc102a8b2158c57228f255d402c0cdb4381078cee315ec5a9e8e7cafd8a9bdd624de9c7f0da87f24abe73ddbad5b4e5a6a28ab84f20291409697a788ae605be2a3627f34152dde6cb4de4f40cae7123b1b017260323e7924b9bd0249ea4e213972d0bdce87c36c7aafb3f0b295fac77b5ca9f4d29af4df34bd23e75003fc401bf50313150270a524c2fcd9aaf96dba3ca1222474d71f392d9faf2af821d60d0a462e4611b70b3bb2880d200ee3eaa781cb40f9feb1abf6a3da87faf84ea901524af549467fcb4f5d8078a1abb7ce870f84a895c38ab6d0200e9850c2520a346e80d561d271f7476e1cbae69e522d0ef1bcb7ced28dded03261810e7ccf5d692b00525d41ae7ecc9aa01bf90ac2c8657b0feee8c80e7afd918efaeca3f51243b1145a8bb71ce717ce84f4ca85b907c3b2adde3efb0bb3af3b4d3c5355bd0dc3ae97ddb2dae6e831c4dbed4fca5765fc223d632a4af5e856d29cc77f981b5cfee3cc51d5988f728d7af787f92c8f11a7252767d885a40c81cbe2b648d834e7ebd68747a261163f069f14c60f4a080d676d14a94c5d3c0cfd8ca1b2b6f29712a17aa5ee0fc08dfeec101b21d78016e1026cb28219bd95923dfb819deec2c6ba1fd8b00f864b2cb0dc20eae4a7cbb378ab2973b6a64dbb3b50fa9c19af745ddc3c6e45b5109fde80e4ae7f12a48beb690907be697caa0791feef33c7bd6e5297d15a61e2c7950b4f008f28e7bbc77a6dc6dae0aa8dcd33b42cb63b93da47cd837ca62b72b6a28d6b36e95bc66d0dea0595bc442963a24d31243e918f80eaa761ccfc8fb5fcb069eed1db3ed173042e3cef6431f2d8d7055b968850d08e23ddc06add35f91878fdfcd2ef4aeb9fb603dd81adea7913b6d346c404829017ace47be570d0cd6f7d1fd09f5f65dd9359b18a4996648275cc42e2b4b7bdd7f6af6a5f4cb70969c4d85227dd7c51ac1aa3e9eee8935606117ff4cd1c69ac575266e6a3ace063d096c8f598534cd4b5ca67222c2581ba575a4a3e6a516ff5c24fce9896d9675de358f6b3944b431ac858945c0b1ccbb8774a6da13ff4b87bad51c26e204390abaff9fdb7e033058d5296b0d9f77a4c3d3700259d70117aec20227472b31d50dfc8e9d41819a958e99a7b9e104a780d256de003742cfa52cc1cd7e880040e7702ccd2fb142f1d0aee2a0c805adad1ba018bed702cd2c380951f29c51625be24ca3c145637f72d3e510d0e5d3198080a1e8d9d5c8e9828ede89d7e9605d6d1caa3b1a4f1f593a2aa0e700ccd25b949a1096114b433a27739435b81e5f926dc7cd0231a9f33860abd9d28df89e6c11c89e8dc574c7a9b4ae32ee3df711c58e182f8cede81d3c3b1901a25a08fb5c09f6301ed7b0191cf8fe3f727892642d3384bdb0e82ebc46377f2a017a8ae5b242f9b02b469c7fe6936280217a44a724e420e4de3db926e91c87b419d5e3332fa39b9239264f603ddf889aabb6c9175f7a8dfb6ab937ff7e834d487d03b6f6659997234c92b59127f7d48edf6636da39c17262d2ef3e4c86acb7679ddd75d2dbc8a91c728a5e1062b87a210abe2ede173c1efd683ccaba2a0a5713ee12673592efa87a452b42f510da35a874aff7f974490f76f5f35d570b29586fcd16d451e436a85fe6eef27af8af834c983e7c7acc9c2fdf518fb34e1bbac09ee5ce265cc2238e373ba08f2180f47837d7df8183bf45221fad6dc5f49bdd95aab818de4a262f0f277b5843a6e8db6619d08f9ef2afaeea39a565998efb7cc562373c76082261892729c757f7780f04ddab7cfad85aae802a970a6bd187869b981775487f4901b592e721702473553ad969ae6fa413ca0a6c4dcfb0890562d80297cfcd98e58465860c669a7d37b924f420d473f700a43d539b744c3c2c1c0bdf45e5abd919f33af9ac5c369ddf13cda4b58737f07df388637ea6870fdf3e1511126efb29ef81ec36c3535d0229294a4d3e06d8786f60514599c844cb0cf24245afa7eb39334e16c2ba21f8ad5f6b3e346ff8f523c1c05dc993cfc81d593a601e80936d61b0d0e73367341c1d06b28c1110b2a84d5ac927dd93c436ef0d1e668176151f344f1cde77542408a03237823d1d6d9caf148c123bfc7782a5492ec440fad3095f4438cad3fdccf11b8eab77188bdbdecc070e0583dbb20866544e8c3f4c10d40c1241f93a08b39d061db9f71c294ac0bab2efc4c827cb076cadce61388c8a1126ad37f2cf480263f12da3cf419b0df4857b949f516b236502ea868215b085b1bdac8be9407092eae53245b343ecf81af1bc5875dd94968b8049bf31b69e2db0b81463a1f19468cdcfd3724fe0756e6163d89430c4c0cb82bc977669a1b2f8fd18cf60119ace2536998bf686e20751c8ecfe1657fd41e26929f11b591b281837be076405a2f64949396c9ea204bf880d3453e88d9e5a5187a39f0752dee5efaae3921c5fe5c356288b6b752a184dfa62fd64352c0841e0553fabc25b61a9670657f28cd9498f1a788cb475b7060fc66fb5fabade57dbf3f5ccb2ffa22977add1bb6b598bf9429253dfcb77eaf58f5ebc88603a32308cedd845aa803101e1b4ab3447961ffa18826d7d3c6da04d997ec0a2e169eacd16f43b1e36740ebb06dd707f93b5dee7a44bef52b48ac0740895777efbccad54bae4626572516c50707ba2625514a10a26d54d61573f0e10034f685f20d7447f567318e75e3a2d5e70d3db4ecae7b8e511744a4a5ea385adebb313a504aeecc0ea0d83816c6a56e2584de680253850eeedf11d07ca9009ab4039b43da092e4880ad0c23015f246814b4e173d6daffe8c9eee66cfe891088891124e6d7719f2134dc0a4c25920ea05e93b14d75048bbc5dde64618e878e72c6f502a166177c89c8376f721600d444150e89e45beca4c8c5a116532293dfcc592f7f9a1ac6b51ed9a290aefff5b63871908e8a3fcc925d1b4c66459eb77b90231c68be3df7b7514863eeba88cef6a877f652a8e08ea6269d552573accbef3e1a8fb378b279e9b0fe0413db0ddf8767a7d76995447e7c992096f0b19bb713b4668c09cb98ea1321fd2c65f60db7b65a226595676ccb89f4a4abe630a53a21523f25451e243a7f428f43054b04a3fe7980fb7a9016cf702b3a11920f7b6cce10841d4ccc1f622feedcfc47d6be499edabe01b8d31eecfa36c8374f6be0e2ac013965291f8de075b39f77b551523948487d4b5d1d1a4e55ca628973ea557388cc9f1d5fb1ef17bd83361bdb4fbcc471f58842073801e65771a8dcee3d9119adf52f934f3cc8c5e44b777465da66c96c4cae7ecb24fa1f749045479f9dfd92225e1174eff39bf4cfb011e06a091a4f99151b79f0b8bead5c4e26cdee82c5f4e6ef9ca08d65f77be6c561165e415da515b2a41bef5931a7df73dbb60a4cd3aad0801b42fc5314b6054c4c28b8cf859b1259f999b878075400852a558aed375d83a8d2f6fd176fcd0e72fca3ed596234b76e0213ae27b1d7005f81377658b17a5579e89d4ffd1c388d054edc2b6d2e4fe82c2d4131fb92edcea3a72bbb29c686f65a39512ab89f419f8a5bb43589cd30675e7d5050de0e0f4a63b814d7452ebcfb1f1b7c4f22ab120306dea0e7b1f1a4cd2f2214d700b7c02042cc364272e36fdbecc904ac9b4679c61725ce8d2912cb359466f6928dd06c2d3c2cc6f7b529a34bc786cdd8304dbc1b685abb8f0584f3fbd16059f68ad685b81aeaf26a601fad5b1d31b89d5634ddf793fe58330ad6c4a3f765a3afbe478621574db35648e9140ca3850fc40ca8ca68e476c32ee25c4525760454d40e9b5caefec547e0cb553b17f614ae6d6a420245bdb74fd263eb8d20e91f418277330e86db544be507de732674795c7517d264e9eee6f6d897be63c2853e404e11e853d246ad52c27c118be46f0b8f441d21a9b2973abb279854bc9533b103b95ee140cee00c4447024ecb02579623d48a3b6612ac2945bbfdbb677d9d3c2c43112c6808d2e01fbe77938b22a0e769032d453ac41fd1f3c6ce1c812f2bde6b254234b892e7ee501cbdb26e0074af9c9aa446e21f36b8e80f9131a4c428e5a7beef3f39a3b8d8b238ba413dd6fae5b19cf67b31f18420502f20c4dfe7f5ab82303bd48e92f76883eaa72a6f6fa45aae98719b47cd64d5976bf2608929276964237aaedabc3280231e6da74975efa494907744e126b80fb84db2f8eda7328251f2f807c7c382fd52b76620f9c78d8cf098c77581942b5fb89bc3a1fd023c353a82ea7191ca35483e08479657dc08b05df214701b396d634f582d9c3bca060f75b0d1777338516f565f5b7f08a0953ef7cd6cbdc7051c414d4b474ec32b2ce7ae03f5d2c19a74dd257e4037784670fa832fd00396844678e9155fa71a5b260be3e958b1be01bd66eef11b3f7f12fcb97394dff9d9d0c825f8cfb2a1888b6dc915180c7d8eb6625b8a78818e76206afab346bc2edf573a2a6e6118994eddf1ad89491757d97867ac76bd2583442ad5566113aae7b3a4091fe8e29deafb05e0653c7ba63777b7ea7a25b4eeaed233a08dfaa7ab07189264ac6492e1fa8fa4488210bee8252acfa3d8916fc0a7278cde78652fdb8f616b9affa0e061188d2772fd34a29abccbf75fb699456d698a59c8fa4fa636fe451e82ca889e80afc103fddd7f4ebe358c4896e2878efed0e292b02a4931cdc66aa070290fce8034bf97158f56373ba546cc7c124fe628e0d7003895fb920f49b4fe4001ab8b74321ac0fa2feafc04bad1418c14663360d07925720112aaefc2b7719f869e9b7cd82ec6eb23018f31075543123edd73837f4b6c8fb1e3bd9e00fafcd5e3bef66c72882aeeb6befc99ddf65902506de63b97b43f957eb42b51b8697b070db50967ee6cc8e64e4e208db040c67ec08a300fbd925a4684ec1408634d807888844226f5801777da7257dbe463b41013d1852c6cf52bf06bb18926bfcbfbbdb61fa147b66f69b55ee2158228c2616df33cfff113997f2498c14b46353a19ba80f0b5ce0ccfff60cb19c28fcd99b20a064640cc4a31bcf0d8c728855c158c84e2247cfb7849dd628b988b77b603ab3937b30d42220c8f3c4f26af76cfd310c779334fbd36a0a4f425ba9dd75153440fd9a12522a11681ee354ccfffb8967a0d03a7b8e59bdc6572e773627ca9d9a07909800f8d8ad91a67157e16d6e45a5620eeb8319346ffb2f954f569994a0287c3d932a8f44cea44bcca415ae9266e82dce7dc18c9fac7f255c626d436374aafaf43a07b64ca540ec7baba0e8476e539b92745c6f7cfa07587e67feb544e5cdd8d539439b5e09d62ca32aad7f5e6d8ce7c55c31a1e801be730ab8ed7069faf070b3d9050f9447c61dc93ed4f09cd73fafd22d88625fe4e129d98ed7326d50115ed196449d5ca874a83046cc2e2f53eeb8dcd9de99591eb6f505f384195ebd21c4f4e37daeb5d3021b750ebc80eeef11f16dd1e0e19fc456deb5646205fad318177149ed326845e394244f24a78f67c39bcd10f1d16843b5d33916ad6fdb3020522ed721574af6ec1aee2ef3610d14c7747575643d159be061b4a6c06ded33e542defbd57cc2efabfa07357a48af729a84a9860ae6381b1de84ff6b88e39624cf942d1f11376d7f1fe6ac4df919f7a317a6922944b5e2dca6d5675f3396f29392c35b3555cd9085bfb3e7c53c648e075f40f1a05cd344c2516d061dda5bcfde38e9cf18fa628554015a293d75efcf9f9ba907cefdd1577b55422084b280222e01f454c8e78b78d29050216b0007012d16862161c7a8b3040cda7da75ccc6d3897664825f2723d59f39054d0f1e97860e16ced6f45f1d9ec5ca65ac59887ddc54abf6130c273ebf5b0876672260fa34b7cc9de3ade2ab4f42322472e38970b8a4f9965b37b8a31252d8e86b4d0213415bb25fc871b45cddf6fe324aa6cdf9d1c6e7492f08048d73a347f57d2db76ce5bb4fdf810318f50f827aff4fa98f9bc94573ee8c1eb5747a9bd066b5b10a60351bdf260b142951f5f4157b3506f654050c7d20aaae049a2413badb74d2e1db0e9192c7add4d6a2aea2622852fa6a8ca385d885fb3856dda79a38af589071483256651915874b11b132219da894dd134c2cf4dd7ea9d1c1a787dc427dceed1899ec1f81e5fad77e8046aa5942e50dc4e39c79a8c2019c1dc3309b8d22747cdee6bd7e5e5d83985fee67fb24321ac6fda39ff6d6a5aa67b4f617ccd2c5c263ed7f3528c6717ca3f44ffe1f88a3967dddddef6a065f1f06ff3e47d03a932455aa6ce72be0a271c2e57712395c7872808a4cdb3de4a3ea21e8d680fc9d27d1880dc9345fc77621b7dfc79e757c885fbf2afd8eb82a1b44588e2e71d6715f6fbbf126409833599292c58940c9dc1e4e748c828f11cd8c87fc60b3b2a7186cd88ea6bac3d05afac7dd817214f3bb8867ca49625daa786d0e3dad571267bca5c43484879eceedf1f21145720c2a69d41e9192f7f2ae6f08adc3ca799742a8f554ecff2d96af8a2a1256b5f7634a2d1414a14cf75681afa2d548440414ad198c65b43e543e230db5e00b1f286fdca41844fa23170982bccb476fae37184511b70f807e04b8c50c43674148d5021aed37ddedabee80b0ce8cf17a511a974d8775b53c36e133b85f5b368efaf92d9feba6c1fca2c512d1b0b065bfc779fdb7712ae3f3087aaa9fc93e6e968f604ed118ca3da62147b7caa13bc1514fe711f7ab20c27ce6369c193d609f5ee2523bdf3a3a867edc9993b5b56c664cc8c2ee9c8e95fe824852499bfa6e62606b190652b707d28c26e2ddf2c107c6cc232e295e8fcb3e2cea5e0dcd4fcc77508e18802a95fb38f38d8ded9bfc8d8f772f0dadba650802264d8e933f387a3f4bfc41e963bb70a845328b877b2a0421a34fc3b4c47ae2025ef8d32332632140925e88c5574d16b252214b8dcc3c6a2af8442de331c415369f70f801d0ea45bf1dfde21f179a5d51d3508d608ce528f7fc906ec55ef30e6397a7e7b6eaee50e68fd6f4d6a02bfc33e4da307968720347b25cf28caf6526639767321dbd91e3fc047ff876a7c853ea639bf79fe937a466b11e618568c10ca604d0efd5b40c78470a90f976f2dd2ef7634be1df50c27fbaf982596d47299f3edb6a579f1e42eadd497c5b3d30f8074ffebf5086edfc241113e3e8a19923196931388e63c2bdaedef8d58c77a9ab00e3881d01ca9ba44f1c59dc19e3c908755fc112427821e29e7ce3f4ddb9720fe93caf9b4486a5782997666f3570fff6dfbafa413e0581c49bbca299183e2db72248ff68dd84eed27d67e6bb43fcfe09eecceb6bcb9b5acffe1ffe2cbdb82f6ebca7183aa777b13d36aab0dbf8e9f1310ebc08066eba590f8a6ae091aabf8aa00db61a17965f2afc8ee5fc81ff4cf116cb6f5c6dbb2b8e3e1542e13b82b8884bd9feac7a92bdba65fc2878f970ef5953a8b32035a4740569b3778021c82d4a79dd730033f7771b0c80dfa55122d0a87f11408800ab2e1048dc3c45d8f433cd94bdca6f426fe6c312a0472615c55c1ffc696ce35a870cf8630d6213920f6a946cc749fa9f01b901ecb1f33de20a19b9c56b8e52a3466cc255103e86c2f8f927f35f49764f2e06bb514cfc0fd3c0301c369fbd383995bc45dbaf7ab0c643fd24af2aa50a47d7a99684f879d6324301fd5da4e8c6e7c9c03e471a566cffe645d5d38e8a1f7e356f7aa097ee0eea911129369e322734fe1f55fdefb3c5f439398709fd1a1b2c23c59528352551d70ea67b2601c84fe0b18eb74c843f782e39861e79569782233daae67361ad3a65595cf09683519f102243bab217fa82278c68cf08488979df49b48c29666fe31b1d593b36cd647a1cefa5402515ceb569f19f619cb235c1697ed53b5bcc92cae3add64d1bcb2bb841ff4df0ce472d40b9ce058249cc2dae03e52bfdc1e131811d7a59393a9762940d5682666651abc9e3a69dd220031d51705dda7b06510e3a746a180597890ce56358ffb66e6fe5b8d409cd4673d88e4f1ff982c131b8bec849f941a34be89093be28099a54ed97dd4affcb1af7d6762620883323636a7f7a93fec114582b6ad28774d485e7e299f03d026b7d1b428836c84d95cc513193b33bd01350c0846f2785b6265023a85d00ecff958072987f5816f8a847bd24632dd0cd4ea40ff2651acec9f913264684eca0b26be602abf45d834e63a3721b0f4796a85ae773393826a16dc7b880870182d8fd5017775d3155213cd2cc9a150a529fa4356b278650d474e5442b7f55eb414b366d737f69884db4a6630f1e848706fdff15639d2cd2eecae787f78083fb0372ab47e66c501ee05ff29ee5c9bbef555c19b0930a7b5e8f7949ffd3861e82513a7c5a18222c118c3bd2b3576412e3d6d55ab6b9dea18114fd41f372217d0ebd06f605e9def4e541b18614be90e1605f3e1e27c63188f45fc20ca9002208ccd24c6e00c44f4bb695ec056791c4d96cf39f21af1a6c0fec8c2cd215ce687c14ec27a75d5d1505d1525dec68effec9919b6ac560d86acb91aa024e1aa65c586eb4d3b12cc2056b150d8b24c9b9dfa346b8c45573698a98c0c5cfc18b32d1c8d8a129257fe5919fd35b4a1b360dadbcbe381861108d38c34ebefd969f641b12e492c6ba72e876c404bc6814a6ccd3eb33c6822769fef4e5c1211976454a07efffa8d67c40b84146a95e002c0dbf6d158d272c5a98b2c3b351549f4d32962e5116cec0a758d3c31a70a7b1888ab94e42b6e81f99db74bba2d847d1d82aea7b217eab7a3b4760e6ff87d16cbb60edb1688d75ccddf73d059f32ea80c7c334db73e7f17f0e5efd3d19d5a45cf64963c921a74f75f9748077a71e7420e878af1a4b433af03773df9c6e239675b5b713c6c737952697b034e39e38397676dd5c155b48360352c43ce99c9004a2f7c0a2a4707e033a2dd9a027d102a3fdc31fb7418748690a8934f6f99826c992117c5413f7d5818d3d456f8c5bc28d9cb7d640e774b3875d10d834384ff8096423d43d093694d69de6bb67afea0f75d76f72d6778c5eaeff150d9eb3e2fac3b986af4821e7becc2cf60b878f1c8cc87a84d805f6c5b0e1b23178943b799eb6d9bd6a723050756801090e967774e0a7fd7e5c1271f60b58b57258c5eacbdddfca0ff1e2186ec127aac056cfff5db80102e31a6d2747fe6b4776ceb606e2f9b00630a9bacee48c3e00a999c1e0b8ab4405904a8a18a3d373ed35881d6e0c9047c6c1cfa86e26ee32edc0f56e36ae583247b541a1bde504f896a77b25049dfb51a9875287aacae73042b09e2051d1f4f8e9b5ef51f8e6599250738c4fafcdf552008af6331a0dfd645d68807c4ceaab79bbbcf38a5eee291941b4692b2b876df3d76ec654d8e036ef8f596b96a256fcf2269f326d8ef90c50d18d255adeb388c0badcf9302a1bd89b8fea3e590873a4a7fc420db7c64bcc2294c3433b37b2ab53b9a5d2f559c5c85a5283393285b38a27d1923f5c180f80a1cfabbbe6973b225d255ce6b7bd3f7e6e71c6bd7853e690957eda5cda11f913937173ee3252cf0df078fe078eddce35cd88b5ee93ea063dd9d859df871a076f74602086770eb45897fa5059fcb52e04587bc2f9ef3ffac2978937afa923716db83676c4cb67415179d505aea3ef7b20052a9a5c390f187b558e60868284413225e64274b0723139acf06bd4b1290f5c6d05644bcd9812e6eded997399100e19d6f902bcd7a21620ee0a801fc7cbf8d6a70a193192a491fabde6df4dbceda5a9ca6987e7056ce341814335045e6e90386afe149a887e094f9d50d69c7ecfb548b3e8cb2dc9dc831d48a73336d54de959c4763dbec57c1da2454b87d5039072ea04bd91b919fcf52194bc44bfd1b510a89fe143de3b2c39f467a12ec39ab2c59733f1bf7e7b7d728dc972d7d88c9a742132d7d33f33eaa453ab18d40de71bf9e388dbb8f8ffff5c6dd7a8f4125a94706bbcb1b3d79077665e9764aab0e133b9f1b9479c0885ddf78a0e212bc297bf523c0dfa284a688de2ec07c578faca20205fffe9427ccc48b761eeea1ab3fa78a24baf2596d509c6528e663cd498b943dc553043321d089a87992bd7c0bdbe119a5a186ef090a5830068001480202efb52bd88622f6fd201854c6d1213115d81ba1e9e3e0f0a29be332656dc4270e740cd76f5b0a052089ed98a4ea1c98f93f54837417ca5d08e44f46775c1ad72f6f6b46344fdb7f70be0bad46030f745be0b1a46417ab624b1677e46e063ee63da0bd40b594392690a51276b80da50e48fc40aaf350fc29bda0e7855e0ff20cfe0d5d4e0831721afb220bc59531c512db66f13487fb051e84d96771633cc5c40d8db272daf52bd3a28a90354f5a17fa30ad39dc8463c8e87d9704a9e03bd771c24256ad16e98d9ab57ecc2f47638d6d65e379fb46027cbf49a3f3fd45df7d9c22d7ac2b346a6120c5ea87452ae1812f90542eea2b7edbb8363d91f4eb307de710acedd50d40af968312805dcd5bd2d79ba77731264c2279cdf9bb28197f69a8270451f1f932244bd2bb5cde1c7c286dda14da09863fd18f62e26c794ff98c0c2d46fcd9e2a1c6d078e20685a1ec20311eb0424cd4a83059a41296328a154deb0f19edbffb2f5a8baff7af7d0955251d70b16a4b807a3b0d50aacedbb64db69321148c0bb397e038d6d1eb592e9d1c3b3454fddd7199e00e0b6dccb96164c5edb7ab8f0c6ce40bcc9e31a219da2dc24ab5d74b8790db180f62bec64fe94dd545b7803d7adebc4ad376ddaa6bc4b55fa91f7ea94cf3e4e35dd053b965c3c4691ab13d1894f2bdb798f76d9f199d7d53c91c34c3f62a1abbf40514655026ddc7325ce1e4c1eed512d481da434c9d632a09a7016dfc9f2dde6a0d8e7e502a6bdb55ed5fa11b00cdc9935438bccff4ad4156953394fd55dc628a1b4d52e601d8e981ff7d62d463f45b159c0af6ff0bcfff982740eefb76ab06b36a20cd89cda71c9f322d88be4871f3ee238e5711d7345b50ffe2d1272cfa7eb1ff3224ab406f27d15b9331100a0ec7690a0ebb8b692912b7efdce2ce00e0737e24f9de9acd2c9df5e48ce3ec20167d664094d80ee5104ac9e3d30fba021d48d3ee5a162925a6d13ab0e95142ab2419513eccdfb43e119c4e8943e6dfaac503a2095e53de93c9a12399715bcc78bf4663b1460bcff839bda15bae8ecce15bd55d91932eec541c0c7ff18dfb87d1b2c2b050368d0e1b12b193674ea394d59ae1c59788104d82f9b0149d5d95e8461f33b363a6580b89341bf14a76561cf1288123bcb79be33499678a2b3bc912ffc3d9b5753d005e7e541937f5e8e69ab833b91101a0e653b9e6642650ba9af06be1e5e1e4d081862f932e38ce4cb04e94c6c0dcf9e110f78adc983099a6a5718b0c26bfc7069b9c461d519d5a97a2c54066b79ca64a195e28a6e2ba684da9173d2bbe3b60b5bdb6f2a3de152f7ecc8c5ae828cd86faa070e7b0628ccba154e3c24db8d57d849b5602e7106ba423e06e95493ba3fdc8663720b2c642cd5d7fb324961323c8fb1d2f3204f0e025edb820d56ebaf2b479dae3497ffa9ef6be775a924cd21bb6e39a1b19290420a3b3f3b2102688bb302143e3b4a69581d7cdf8f7b3ec65e3d137329cf617677917dff067837afa3d619c01f1957e62c0d094bc8a2eb2bd2969d9b4458da24c1d6af1b686a92743f82ff220062ab71e44f5e4090c171ba95f4f3ede8ae853585b35cf29903674390f84541844cd3c1a8997e4507bab54b658d670491ab6c3c35dd373a81706cf1d9fdc15ace6403d3bc31d114e22aeba2d8d53c93078a54b01cf81e2fc8fa458c332fc822cc58b6b3cb4023a51da3c7e3a7e941103d8aaf4e288e58d2702db5386f29e0a34918e5e90eb15a7c3a3faf1e62d1c6f6e437f235ad536544b781cfb9bd9fd5a6d70990a6803c4174a50274d8d996e97e554b0518ad24adef0ca8226b0af7a2435fecda68d4808caf7a755c2f1099e1a652c2ce54bec15034a5846c97a9b52326ea0db3830cfaba23ccf334be62f89a543cf682e71e39296f9e086c13312cfae9690753155b3c3193618f32fb4fc15c83292b31aadf75d03bcc063d304db95c3609d7c7c9bde6ac325ee705a72509cd8f7737dee6863559c05079700578244639fae2bd3d1d78edae86bbe5462fa7c07009a6f22f84632fb73884378c57a0cbd0fb00a233888c6fd4c27a535d179bbb951e5415931ad10bee4fd23f17feee0427e4c72954269f7487b206374f4820bbab640e41f086480b74a1e8c0c0f6337461b186905770a2ca9ab7b1fbb9c4279ee02053717fb60c373013e5f1c576a30aefec70e818c9c6938ecc2218dbf246f6ca615ddb98c75d9c6cf7a779763b6db359717440a2ab2735ede7b3336c8bb99a2fd207bf1474bcf18be8661f5bb20359f79b8ad0f2103094fde3336fdad50a65447a62db7da246d29df337962c917ab3352440806084108409774c0781b5f17596dd3bd7ffcd589aa71b7d6efb8cf35d26a22f16bcfb4b28a7cbdb5ed93163b277b9b2ad14527c16535ba92f9e8c9f75afd0f22d4ea2547709bbee10a1e171ae8928f16936d70cab364b1e10d0a8052c0c12bbce7d9178012de2d2819916e0d6d9dc4496bba10cf7bf9b4d7e979ace4dc332042247db4a2617cc32c6fd075fbede9af26956223e6db6f5150535523a8afe680b3a89d374507c8baeb78a0658606befe6a32dc7de78f9083916710d6139a4d63b27dfc4bbf8bd325dbceb3238875276e99076fa136af093288b8a92113807e52bf5dd6391008c4613e8710e7619c5b028c9eab32c63bc5057dfbfcaa96a6a7fa318b91a192fd1031f2860d5fa773701d04ec01e688acf56161438adbbafec4dfe5ff1eef510ac31cb78d66ee90b27dd7de4c6ef808934110629c17922715f9442404a20c696794121029a89456c1760fb5c69baf408235b35f11f0357ac795f93e69a9d62702f611ec505835cfcbf33f55b1e77587f97bc5362b762568d50c2f821ff77da8323b08cbbbbdd01d1a8f9043b4b13682298b92ac92535ac2e062cb773ca990ffde4578324e90b0eb846d2412adc5292d3a6a2057f6bd7845b28a778839431f0fe474c6226d45af3bbf07f5e2205f6a359a4e94e05c386d58cfe9f71faaa0e2a0bc2255fd172243c8eb90984509ea9cf8daae0c9573a620cac24a2dca9f0ba5fdc6babb93c0e6adadce2c56e7906eeaa77c9da6d63277c05617e2a6535f046ae37126872934b43942e51772dc0efc67a5308a4c232e06454ba898fb3a900886ba22ba93c802eeae80687b3667ffea8bc7fdfa856ebe5dce785a34538dba4fe5c1011683bbb364aa0d6fea56ef0d361ef45d0a047767ec2156200afb7ea6ef61be0eb7acda0bd338d88ad33db90773fcbbaa150269d88b94288dc798a20142b14aae535cb30031ecfa61be47220596836ee359b10ccae5dcc52410be169d55f375c6e2f561a649b42435c120164af96a94ab1d3704ef38ebed8b290771649d90b3d34ae272230aff4afcb70ebb100b1016bec79a9007f83c692e61e40233532ea377e3c9325f2301fc624550535a854873bc63b81eb9fffe4509d35111a4da139c13c4694f8f00172df4d337571ed4a08351fa5c7d80f56a9b704f9ee60733dca958453c7a21af8f0e7029f98aba6f66f54823dc25ad82b0f0673fd4aa08f3f2c7437b17f4b2dd70accb940c30a4aa24bef22c6029ee947b0a05b561c38253ca356f148be2d1b5e73b0049939a67ff772412e06eae3a29ac1d13edb44b49e207ecf8101cab8384748d3129429bbeef086f713d471a692ca1bfc9de42599196b3d9f6cc5867435d888fad8869d78b81ce4c67d6255d50dbf640261f4bd1437e512023f12eea8e53bace117206999b4bee9981345d24ce706777bc1e274c661cf687f5f0d580facb2f9717500c722ec915bec5d60cf62562a9497d58f689a39c1694690817556133eeabdace4062e04d5e1667f6d1f32332c9b40bf759ad6c061b7936ec77d542d5dbbb3e56c9d83b6b8443dc9635dac6bf9294193bfeac802e0e4921a68e20917b7cc94bb3c19a9cab8558c3474446643439cf505d61edeb7b2b84e57df19a7e4ee7487b2389fff00d644439be5433f2d37943723394e9b1de3825db78c25f1f4b6dd17d97236d033dfbbb401c647dc786c071363e4148e4041699b7b9a132d64143a8b6355bb2c1f8f89b74a28bfbb221a7330306437be91b901b7fa19f49b692e72814cb35a7841b194c2db8d40c7a7d9776c161cc3ae443664050bc2d5d817ca843451a1a0071788167e9e40515bfc96f6a36ed353d68eb97b95018b849fa3ef6a1cc612ca4192f005bd8989194039bfa7bf31fab1d548b8b1a323c93c82bbf17961dd68c723050bf39e1fc609a7b15426acb15d9e2869891d9b2127102a3d8679bb35311bafeec9ad4b8183e5bc3159461bca9554db0de81a86652529204f604fd6d753ece67a784694f8f50335fe589dc893028927374d3bebc844b17511d59c394d2d4af9efe5207690ec24526c3f88ecc2a333d2ba8a86e94522b2880525c15823c5b1618f183344ff85fe4f1432ee46c896dee3b0871dac94f72bc2732da1cfd7aca6fc4b671183e0e4572887c7dc6a535e76379201e6ae4b10289a324e79ad83a689358c39b2724bcb11a7f31427eecb9883041090099c28e546ad8c9f75cf0e732500582346c29427967af58c27061a973025c6ae43431f461d0519f30b49fe944c69584c6eb169ebf06ef4ac2b475d62bc0c1560ab55ac5dbc00d7e5858b0466bb512ab5ad6f45567e475e06227d33afd6395e1d0a581b9b010c19d4c03e078190bac4048f316155e90ac456ef906272623186c0822197f2d139df5141ce612814d7e088b527b622ccffaeca066195a545693e0b572e63a26dead517be4fc87168699de3b8aac8d6ed9bf4cfe4ac8cb5c9b95c005029625128b3cb3825fb24635709c4bc5edbccbd0a6e9bc2a68e6eea7f0763a268b01ea4d527962e45b1a831492b0d4067322627a0ebb370c88437894ab7e969d8f24bfcb1a33dcc1970b5061ef41b5be0f574537d63f368f70c9acb905c2d8001d4ad081cf1103afb3e4dca6b764703b645ebf807ad40a36783486f9fe20c5919e0acc67ef8ecd6ad8fbfaad4617e477d96b3cffb3870004dcf7c7bfb74c5267f8d11f499219e47a3ec39d48ea1cbb2ad2f9c22d3a9dca4d1277406bde1619d76d4e01e60ea7394adf3d5db42ae90fdec199daf4b9d78a03a3b89fca8ae0718a1a9e603ad460ce868f5116eecdc78134f580391c5e496a14ce3ee8ecc3c3bd21e77276d85e6818901ec37e185eabf3dfc1cd704d4b6f9a463e5de7abc5bae162d0c6c9467b1df3e3a6f1cdafc4021a9eeb809a815eebf589ddfd61afdfb4aa2f916a7c85907641803e762dc038d395a9e9d4755ec2d5921d554c15b00387672d2bf4050de2319c42f76b92d1b1e1e7fb9d206cbe90b0f5ef79b8b4b91fe56f8cf299abcab6d08fa5ae3f28f4ce7ae617cef39579cabfe22de40eff25a7a94d0ddb8044e69249cfb1afd5d8cfd8482467cdac920529028a739b97b34032fa41886d4c60f2ec08f8390dae2c379fe8d7452b2230b5d86e79aa367d3fa51f40cb0fa90fd3033284c975d047329c9aba762b86431cbf5fe5199f58313ff29be1945d7fc5d2f5feef9f603311849d797661cb54e0cf4eca7dd8ba3320269461a39e4764e64a1981c95b37fae1cfea7b54716d677aa59edfca0f9619e53dce31f2665305cc3e558a06216a5eeb8a27ace8c80505a9d6b779a531fea59caa6e2e4e7b615680b66f39a9c7d138201d0e2033b59c2cf898bc7afc5d4c78ce98d26c707e2ee57322e12c63d5992ea79c1e6625fca7d7898f63c2c62ec2e3d9e978653486bdac37787629cd2c6048fcb23722ab063b388b593f72da2fa2a3c4c7a79787ceb4785e96183256425ffb26e34f0c25c3ce13ca06cbe9c38026bf8633c6e8a8bfa3fb5630d8b110e6f505329b319d24924a1cc54c75e5860f24a5b866152c030f7f48ec2fed8eff4325cddba4fec2e8f3b3726a90d4d46817189192adb2f6fcf33ba76aaf8277fdefd5d48715fa777811ae727b1376cbd7478d28e7abc023d222d477010e800029132786826e239f4738ef7b528cb65b6e6c35bfe9d4907e3b43a90c9edc5424a7046b197f14a9b02f3fe494f779a8d3a1060d603b233086ea81421c0c8e728cbcddfb0fdf02bb58e577e9b26954db3bd49220716267e252fe9e1b7b18b4963e16572e289089fdd18eba73e8765911ea5656d07b872ad8b691fdf51c66af8fd07aba69e77dbb73b6ae21ddb29d099d803e4fea1da8169e9bf777b5352820953e17d24e1bc977da75c39b9a4c9272ff1264a8bbdedbb6db63cc8da1d549cdd3b4ce0d627dade354d435831ae1082a2504a631f80672d1df5b3c3fb66c0f32234d8a366a27aec1e357c845878d682f81559e5deb2964363de860488f5c88becebb2008b18f794520c2a084df595fc8e7871f325f52d0a4eac63f4c4794647eecde3fb371135a0fc25af15c66e7a9059ba1e9958db335da2df267fa1582d7cb066de5266e641f01e7cc89d0fdf47b06e8164d7795255cda50b7cf9b152c3c25369c737804824b24214cbfeb2651b3e8fb4b6a8e1b2ebf885af30cdec9deb06920559094b77790a7aae1508ba190e3e52a2258b1f6c68d0f1cb83e0db2481a01b54f53cdd88536b5a22d818505217ac0239e4e9e984eba0dcc1944916134cad50d4abff9d6e3310e96210a86b360093111715ea26d25bca3d5574400da1dac5d604acc329176495defb1bd1d4e780745f1c346d7f3f70ce3f68051f2b0062cec1c4ed0a971fd6b1d678be23edd0a52b45e9791c4a397b8d44faba15b13438e73d46cfb0764519a7f9b1c8bfc1d849a9b771426a5cdd2ec9750887451045778d5cb4e68d36ebd4870ca8a3d8c92a8fca07b260bf1bd7547c2f7d911a1826726097f8ee91838f23b8c29926f8b32054c4b7bc9af416ff263b8cd6338843652a449a197ce22bee0e3b0128c135828b186625d4c0865fa54f4eea49396662089dc8ea0e8790c5cad5c2452927af0881f9230aa3bef9684c1aa9acadcce2ca9a0808d44359987bd03d8152db2c2916ee3716f3f7d7e233a946cbf3a3420fa7167632d61a727903b8463d52a06e674b34db06f2b103ce5454a3ac14cab615deac108c76b0d08ce16f0e05103b3d12c0c83d2ddabe58bcf3166eb1ec908b794d4cdf0f020bd05955d29602d06f68ae284409397ae36f3417b2920f16e6b38b7f1354f6431c7bed4fabcd7f35be0e0989c769bd1e02e974824dfb70d2203230ce4cef21d77ae3f8adb6539449593edd2da67768d329adc318751398bc4684d3cc5d391ab134a3fe7e9a00bf4860718524d92fb5be0dc9448c403db0467d1c611070484c677d330edbcd7b1c5a5c1736eb972b850cd3507cc1bb74cd1202c94c4db2f97da1ea2b7afff3e1fe6d883b767330ba862fec03832e0e13ea853bf3152959d8273479cfb00b58314314a147e033dc391b97791234b35d417d44b120a937bbc174537acb451bf812765a042774bc22f9bb9b0004d82fc31d2398f08091a708199764d196621073b8625ea37b53e32543f492778034b16888bea6e509e3fa134232137915e461881ff917206410d1208dcc16643a288fba341e2b6fe8c7f4037baec7cf9539161ee3e114dc9aa5c1473812b00c462ec891c533ab33de8f53324f4f7cbef95ebae9f0350baf5aba200c71da36f92b0a852daa0c865f10a95ac03517243607fca25d9fdb7cd063e1c2077a32c9878db6f6614c561a72ad803ccffe8f608e47076e3f188e63652a535c7c6f61289743c40bab5ef02264f4d8f6a72f1f570925d8e1aeca1466d50b28eef9668200d73b684ae5dffa9664770086f203d729c05ceaadf90db195f8c4984d2343386b36f1c089e1572681fb458737a3ec5e660cb61f762e74fca6c6b6dfc7eb128e389667d1708e86fd09b959e0d7b95daedabd0d9fd9ab683c97fa0b9be4555a916217a4987176724a4934de468019154efeeacf781d090e0b94094c37fb8261d3732b1c39cb316d275cc931b29bdd03c3573e5c88af8a9f1dbf99c9182f51429169382f1da8d9cefa5674fecc0aa108404a9ad9910baa391c59f6f0cbff9c04b822fe69bc76c66a5a260c56eac6093ab6eb4dbd631accb871b0d48659e6eabcdf2af9b5f31df9e1a585ddf70fe0c6e2342b7048908c016ec21101610b15fdc70ed04f0cab74d5354011b86c4b4ae248d6d27f84e8ca32e2e75ca7a5fd24abfe95ca6b0c10ce18abc611e796dcd79ea5a9b57176014d0751e5ff1a9917da4a71b1b4059cbfc9d30c83be28f32172a3d7d2c870b6c2cfc7713bdad1932a19639dfa452ce17379ba6506f74a022d61f97030021a89481b5f90614519ec7f2642b0773db7c7ab845335f0ed87dea027abcd7239c60afe4d0692c41781e6389236f135acae5629e3727588cdc481a2f3f31d703d6265429b89dc7f98cc148cfa0b568f5d02302eef9e68ccf53e7c1a2d1280b20077ae5eabcaa97f6bf45bc9ab20da4668171eb8279e538af490fea317a32965b01c5ffd0269720b4555741199a70cd6738340587adb09bb0f8441fdf747b3351e4691072d51b3cf065f7d1807b30b38a6d5e7d0574c5e69688c63bbfcb9dc84a15dd2e03622348fb2f08fdf00b419b2a6c39a5ad53ec97474958e87e88a01fa0862361a28c6d51290226ceb71d020605585f8b6a2cd81f16931eae6fd82d51a392aaf61b915ef191da9d37689099af28838c43fc7909a9fbf76fbbb5c3c6e742e80d587fb04d0abb44e686bad45f6015dd64b528dcc6ad77a91f77554d661b8fc58c9f2219903befae009172aa260091bfda9ea91fa98c2fc86e1be43500866de64089a33b64c4bf9ff1c9da6852e820332d529e379ce2c7fb8304fa7cd60712ee68cc27b7920310495721cebc4c7e5a306281f62a7b2e62b50a1b4223d2f071f37dcbb062df1e288ea8f4e8cf1066f96ea8e6499c2eda278c7c3f24582315070844ba593ef2df0d4289342016e9b205a0a6aad5abff20cecc4636e84eafa60daa3ab7024b785748154bc277760a2f3acb68c10347a6a0c6f5e00a7348bae90509efb6af85755709487687ed237bf7c2098714b3a165e1a30eb65ccc4f11724bc06664f632e1290636ef8383fb02bf09da2f39887ff219bd6c503d4b490a4bda21e7d09dcd2dd9cbe03c947ba383514c0e5db0a73470951a90a6beb80f3201b8efe6613c0bb8c92700e8310e5c6fcdbd51f63a01bad18ee1c21125207dcac7f8a6dff1da227414d475adca49c663f657ac2e8df179dc0521ba5128364b9ee881bd7a1c2883dab3292eeb8cbd040cea5be2e09e4bdd30fd6f59e536533bfce082637da208dfe572dc468cb4889cad8721883497cda59bffd2d390c131b3f4eb0671c21a5079b3d39053aa595ad1e111b28a0e20616575bd3b2bf9bfa6d713be7c2d755ed4508bdf5355a242c6075becb80e0287266d08f6788374f9d760773c767a42fe7f8641758317f265dc5d100994738b79a69fbdf29da426c741004827e450675aec0bd1b1dfc6e978ca807cabe0e2d402d4f36dda3b647858534325aca055ef91e3aafeeeafdc8c99386f0da7e7fb91accf6a3eb2b7c5076f67f6778539b08f90dad951b44e1ba7cec123e3a3a8c338a5e4a7e82665df2c16cd8761e6c58de53b29cec0cfe5a0d3ff2732e89e84d8ce95547142d8ade7c934b3663979605a738fc8c87cad16ccd13f5186dbfb92c8af12f670cfe73b0fb665e2de4bc1a46b911c7fedf3a26a235bc228bb54562480d58ce6f60138d3838b1e3bdc35301ba4643a8eb1328593f59855ce6f0586aa035648d1e8b286cedfe2cb6301882b7e8afbd0b86076ddf46ac72590bfda09fe023acac45d79eb908a59765f4498ccb1cc3f49d2c3708cf78c170b1c0cbe8f030d9bd3f724e7fa8e2c1de4389d584967477042c6e2a9cd250007ecc32f246f65d5c2ff72367eb7d5549ed6518ecf8f82e4b83a3d5ea217609bbf78394fcfe38990458943b158c80022a88f2b16367985375d663598e9808a6297088c4248260bf5053719f7d28e992641b486e1f3b80b77f117a170d797899b077259b16371363fd9dadd9d04a931d3888312c73dd4902200b3d887edc70d273813453559293c812717dd99d875666cfa38832bb3612ac9adb4dbf2878bd4a4d110816078fc3fcbf95ab1d0a7651d77560277c9d1a4988aa8f77537ee075a83903b0f2721943a1e1d9828c7cd10dbd3a574ccd017ea2e2cf63fabb82f22d76abba462ed90826231bb0b9c744378082c58103b0328aa5ae8c69400bf06f83119af74da805289c544bb2a67ca1782663aaa0308713a870b75cc7ba783ddbf5c1ca34f591cb0ff8cace1c04c53ec0615f65963531d06893d388d3c1bda71ebe42a2b8139248520c6db27e0be82ad3c683b5799a5fd9a6ae183b419cd9a459e9ebfb4aeaf4f77f7afaa29d8dedd1ad671db64f798045440d18d9f925b84422aa893faebfff9a2af6608e15330a86592ec34ffb955d743b9225a314f0c1e6cadb948a9524b77fd3e95ac010f35c22fb4c405f447bb5d89ee1e29f0a906dec041d0f9a479a05aa7c7d8922cc01efa20567cc774275069f5c546434c230675c4e2f6c6538d5d5f92dce7272c8b955aaccf6ebded833b3971c2dddfafd162de9f2f0288eb5705fa9de4b1a994355bcc244e96614e4c3a9db92df6b3cf8297c7131247c522ce69d2dc94649be22b5a94cd09bcb9ea4d9909723c138aa987b9bf93c05f46a1329acd8ecc456765e41eafbffd48bcb5739e5f9ff15927b15f6a98495be2c3ab0aa0283977b89cdce0180ef801db6560585f03e29f958e5c927283dfa3df4befbfccda583f0711fc85ad940d3fba99e984e5a2df8750e6baa41f49110ec01976740b488d5f89872ae315ab4596043ef3362df8ed52f211ac236c5a8894fa86c193b926917c501b7f38a4f68af47f40623690ce8e6b082cccae450a907be9dcca0d5a678db502cc205e569b25d24050c736fe0019e76e9c0d4b28a7cb647ef366daaaa2823e86ca7dff46409e3af4a660515ff090bef901f7f5f13794ad024fc30627621dbeb31e45409e582ecce63d7d413df78e99e4cf495c60a8c60d1666e1cc491b582354e5130a5ec29b736aac81f9d12f622d98b4a1991c41b2cecd3e592bcb85936d4393ddcaaf39e2bd00df5ccb6ca08c03c123c977b53d8e1eb392d1640da027c7b22b8b9e758533e1521cef910943ffaaf03da566ce2f6442cdcda71d61987bac59ba952925d54e843d7fd7171899679c5008a92e8a525a57bc3fbb5762e0c1ace48edcaa3c9a899d1b1853fb9547c063aaa5909158b7ae3509c4f0390126b4a708a8c3761325ae12191dca92fdfe1dce1e4a96cf12bbfeb18baf0f20254a6a12bf6c0727d463649d7e290ad286f5d8a8f5fa64cc0651b03abca084a56a1f564cf5621f83a541160bccc1f41e029862bc9df970e253f9b4a546545ae714c205d2d0bf3757118d883e4281cdc4a07c5cb7f9cb568683972198f99e54e4f7120acc8ba406cae6572f4f3508f02954b10a6cfe842a3a762b10a74d58d7ef1fb9c35012da2ec29ac06206e742c74c1df4c47580e5578f8536d6fd6ee3ec93d8c27339cc5175f76256f726ce70097b45d34dd1ca59c559f96f8bc82b6195d56b01a14499e8983857d775e6ad57b3128787338f532d953b2b8f41d354397071b92a4294fb1c1bfa78747a74628703cf3e291ad61f0a3f87ed4df5b291c551101c14c6c359157a559f3168d678b4130c80f2d71c0bc7379479ed3fd66df976f2d3589d3074e53171752782341133824f349abdcbaf68f1cf2ddfe</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入</title>
    <link href="/2022/07/14/SQL%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/07/14/SQL%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="32d067b52af4b9cd889d16aa2186ac7a8d4c9f9f7b60d2fe4273632c62f57273">905c4d0cf8e39f3f4fbbf98d9acd6e655bed925345883a3fc5617c3319f3afd3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">努力学习</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(十)SQL编程基础</title>
    <link href="/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%8D%81-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%8D%81-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p>说明：其实不用缩进的,我这是为了好看。</p><h3 id="一、变量"><a href="#一、变量" class="headerlink" title="一、变量"></a>一、变量</h3><p>1、系统变量 @@变量名</p><p>查看当前系统版本和时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select @@variables as &quot;当前版本为&quot;,current_date();<br></code></pre></td></tr></table></figure><p>2、用户变量 @变量名</p><p>定义一个用户变量 num 赋值为 100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">set @num = 100;  -- 方法一<br>set @num := 100; --  方法二<br>select @num := 100; -- 方法三<br>select 100 into @num;  -- 方法四<br>select a into @num from table_name where id = 1; -- 方法五 字段 id = 1的 a 字段的值为 100<br>select @num; -- 查看变量值<br></code></pre></td></tr></table></figure><p>3、常量 即：不会变量</p><p>4、局部变量  在 begin .. end 之间定义的变量</p><h3 id="二、存储过程-procedure"><a href="#二、存储过程-procedure" class="headerlink" title="二、存储过程  procedure"></a>二、存储过程  procedure</h3><p>declare ：用于声明变量</p><p>default ：用于设置默认值</p><p>call ：用于使用存储过程</p><h4 id="1、创建存储过程"><a href="#1、创建存储过程" class="headerlink" title="1、创建存储过程"></a>1、创建存储过程</h4><p>不传参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_1()  -- 创建一个名为proc_1存储过程<br>begin -- 开始 类似java 的&#123;<br>  declare a int default 1; -- 声明一个局部变量 a 默认值为 1 <br>  select * from test where id = a;  -- 查询表test 字段id = 1 的信息<br>end; -- 结束 类似java 的 &#125;<br><br>call proc_1; -- 使用存储过程<br></code></pre></td></tr></table></figure><p>带传入参数 in </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_2(in a int)  -- in a int 声明一个输入整型参数 a <br>begin <br>  select * from test where id = a;<br>end;<br><br>call proc_2(1); -- 使用存储过程输入参数 1<br></code></pre></td></tr></table></figure><p>带传入 in 参数和 带出 参数 out  </p><p>输出的参数用来带出处理后得到的数据，并且输出参数要为用户变量即：@变量名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc_3(in a int,out b varchar(10))  -- out 接收输出参数的变量 b<br>begin<br>  select sname into b from test where id = a;  -- 将 name 值 赋给 b<br>end;<br><br>call proc_3(1,@name);  -- 声明用户变量 @name 用来接收输出值<br>select @name; -- 查看变量值<br></code></pre></td></tr></table></figure><p> 传入参数  inout</p><p>用于从外部传入变量到存储过程后，经过修改后返回修改后的值赋给传入的变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create procedure proc(inout a int)<br>begin<br>  set a = 100;  -- 给a 赋值为 100<br>end;<br>call proc_4(@b);<br>select @b;<br></code></pre></td></tr></table></figure><h4 id="2、查看存储过程"><a href="#2、查看存储过程" class="headerlink" title="2、查看存储过程"></a>2、查看存储过程</h4><p>查看 proc_1 的定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show create procedure proc_1;<br></code></pre></td></tr></table></figure><p>显示所有存储过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show procedure status;<br></code></pre></td></tr></table></figure><h4 id="3、删除存储过程"><a href="#3、删除存储过程" class="headerlink" title="3、删除存储过程"></a>3、删除存储过程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop procedure proc_3;<br><br></code></pre></td></tr></table></figure><h3 id="三、函数-function"><a href="#三、函数-function" class="headerlink" title="三、函数  function"></a>三、函数  function</h3><h4 id="1、创建函数"><a href="#1、创建函数" class="headerlink" title="1、创建函数"></a>1、创建函数</h4><p>function ：函数关键字</p><p>returns : 用于声名函数返回值的类型，这行不用分号结束</p><p>不带出传入参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询 id = 1 的学生姓名<br>create function func_1()<br>returns varchar(10) -- 声明返回值的类型为 变长字符串型并且长度为 10<br>begin<br>  declare a varchar(10) default &quot;&quot;; -- 声明一个变长字符串型的 a 局部变量<br>  select sname into a from test where id = 1; <br>  return a; -- 返回 a 的值<br>end;<br><br>select func_1(); -- 使用自定义函数<br><br></code></pre></td></tr></table></figure><p>带传入参数 ：传参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 两数相加<br>create function func_2(a int,b int) -- 传入两个整型参数 a,b<br>returns int <br>begin<br>  declare c int;<br>  set c = a + b;  -- 两数相加并赋值给 c<br>  return c;<br>end;<br><br>select func_2(1,2) -- 填入参数 1,2 <br><br></code></pre></td></tr></table></figure><h4 id="2、查看所有函数"><a href="#2、查看所有函数" class="headerlink" title="2、查看所有函数"></a>2、查看所有函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show function status;<br><br></code></pre></td></tr></table></figure><h4 id="3、删除函数"><a href="#3、删除函数" class="headerlink" title="3、删除函数"></a>3、删除函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop function func_3; -- func_3 为函数名<br><br></code></pre></td></tr></table></figure><h3 id="四、触发器-trigger"><a href="#四、触发器-trigger" class="headerlink" title="四、触发器  trigger"></a>四、触发器  trigger</h3><p>触发器（trigger）是SQL server 提供给程序员和数据分析员来保证数据完整性的一种方法，它是与表事件相关的特殊的存储过程，它的执行不是由程序调用，也不是手工启动，而是由事件来触发，比如当对一个表进行操作（ insert，delete， update）时就会激活它执行。触发器经常用于加强数据的完整性约束和业务规则等。 触发器可以从 DBA_TRIGGERS ，USER_TRIGGERS 数据字典中查到。SQL3的触发器是一个能由系统自动执行对数据库修改的语句。</p><p>触发器可以查询其他表，而且可以包含复杂的SQL语句。它们主要用于强制服从复杂的业务规则或要求。例如：您可以根据客户当前的帐户状态，控制是否允许插入新订单。</p><p>触发器也可用于强制引用完整性，以便在多个表中添加、更新或删除行时，保留在这些表之间所定义的关系。然而，强制引用完整性的最好方法是在相关表中定义主键和外键约束。如果使用数据库关系图，则可以在表之间创建关系以自动创建外键约束。</p><p>触发器与存储过程的唯一区别是触发器不能执行EXECUTE语句调用，而是在用户执行Transact-SQL语句时自动触发执行。</p><p>此外触发器是逻辑电路的基本单元电路，具有记忆功能，可用于二进制数据储存，记忆信息等。</p><p><strong>语法</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger 触发器名称 [触发时机(before|after)] [触发动作(update|insert|delete)] on [数据表名] for each row<br>begin<br>  [触发后执行的事件]<br>end;<br><br></code></pre></td></tr></table></figure><h4 id="1、设置插入时触发器"><a href="#1、设置插入时触发器" class="headerlink" title="1、设置插入时触发器"></a>1、设置插入时触发器</h4><p>为 test 表 设置插入时的触发器，当test 表每次新插入一条记录时统计一下记录的总数并赋值给 @count_1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_1 after insert on test for each row<br>begin<br>  select count(*) into @count_1 from test;<br>end;<br>insert into test values(&quot;小刚&quot;,&quot;男&quot;,2); -- 插入一条记录，用于触发触发器<br>select @count_1; -- 查看用户变量 @count_1 的值<br><br></code></pre></td></tr></table></figure><h4 id="2、设置删除时触发器"><a href="#2、设置删除时触发器" class="headerlink" title="2、设置删除时触发器"></a>2、设置删除时触发器</h4><p>为 test 表 设置删除时的触发器，当test 表每次删除一条记录时统计一下记录的总数并赋值给 @count_2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_2 after delete on test for each row<br>begin<br>  select count(*) into @count_2 from test;<br>end;<br>delete from test where id = 2; -- 删除一条记录，用于触发触发器<br>select @count_2;  -- 查看用户变量 @count_2 的值<br><br></code></pre></td></tr></table></figure><p>3、设置修改时触发器</p><p>为 test 表 设置删除时的触发器，当test 表每次修改一条记录时统计一下记录的总数并赋值给 @count_3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create trigger trig_3 after update on test for each row<br>begin<br>  select count(*) into @count_3 from test;<br>end;<br>update test set sname = &quot;小刚&quot; where id = 1;  -- 更新一条记录，用于触发触发器<br>select @count_3;  -- 查看用户变量 @count_3 的值<br><br></code></pre></td></tr></table></figure><p>4、查看指定触发器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show create trigger trig_1;  -- trig_1 为触发器名称<br><br></code></pre></td></tr></table></figure><p>5、查看所有的触发器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show triggers;<br><br></code></pre></td></tr></table></figure><p>6、删除触发器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop trigger trig_3;<br><br></code></pre></td></tr></table></figure><h3 id="五、流程控制"><a href="#五、流程控制" class="headerlink" title="五、流程控制"></a>五、流程控制</h3><p>流程控制可以用于，函数、存储过程、触发器等，这里我都用函数来举例。</p><h4 id="1、if-判断语句"><a href="#1、if-判断语句" class="headerlink" title="1、if  判断语句"></a>1、if  判断语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">if 表达式 then<br>  执行体;<br>elseif 表达式 then<br>  执行体;<br>else <br>  执行体;<br>end if;<br><br></code></pre></td></tr></table></figure><p>创建一个函数max_min ，可以接收两个参数并返回两数之间的大小关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function max_min(a int,b int)<br>returns varchar(30)<br>begin<br>  if a &gt; b then  -- 需要 then 然后开始要执行的语句<br>    return concat(a,&quot;大于&quot;,b);<br>  elseif a = b then<br>    return concat(a,&quot;等于&quot;,b);<br>  else  -- 这个不需要then <br>    return concat(a,&quot;小于&quot;,b);<br>  end if;  -- 结束if 语句<br>end;<br>select max_min(1,2),max_min(2,2),max_min(3,2);  -- 验证一下<br><br></code></pre></td></tr></table></figure><h4 id="2、case-语句"><a href="#2、case-语句" class="headerlink" title="2、case 语句"></a>2、case 语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">case 表达式    /*方法一*/     case         /* 方法二*/<br>when 值 then                 when 表达式 then <br>  执行体;                      执行体;<br>when 值 then                 when 表达式 then <br>  执行体;                      执行体;<br>else                         else<br>  执行体;                      执行体;<br>end case;                    end case;<br><br></code></pre></td></tr></table></figure><p>创建一个函数max_min_case ，可以接收两个参数并返回两数之间的大小关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 这里用了方法二<br>create function max_min_case(a int,b int)<br>returns varchar(30)<br>begin<br>  case<br>  when a &gt; b then<br>    return concat(a,&quot;大于&quot;,b);<br>  when a = b then<br>    return concat(a,&quot;等于&quot;,b);<br>  else<br>    return concat(a,&quot;小于&quot;,b);<br>  end case;<br>end;<br>select max_min_case(1,2),max_min_case(2,2),max_min_case(3,2);  -- 验证一下<br><br></code></pre></td></tr></table></figure><h4 id="3、while-循化语句"><a href="#3、while-循化语句" class="headerlink" title="3、while 循化语句"></a>3、while 循化语句</h4><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">while 表达式 do<br>  执行体;<br>end while;<br><br></code></pre></td></tr></table></figure><p>创建一个函数 func_while ，实现 1+3+5+…+99 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_while()<br>returns int<br>begin<br>  declare num int default 1;<br>  declare n int default 3;<br>  while n &lt; 100 do   <br>    set num = num + n;  -- 要用 set 来创建每一次的赋值<br>    set n = n + 2;<br>  end while;<br>return num;  -- 返回num 值<br>end;<br>select func_while();  -- 使用一下<br><br></code></pre></td></tr></table></figure><h4 id="4、repeat-循环语句"><a href="#4、repeat-循环语句" class="headerlink" title="4、repeat 循环语句"></a>4、repeat 循环语句</h4><p>repeat 循化 类似于 java 里的 do{ }while() ,就是先执行一个，再去判断 until 条件，当 until 条件为真时结束循化，条件为假时，继续循环。</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">repeat<br>  执行体;<br>  until 条件; <br>end repeat;<br><br></code></pre></td></tr></table></figure><p>创建一个函数 func_repeat ，实现 2+4+6+…100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_repeat()<br>returns int<br>begin<br>  declare num int default 2;<br>  declare n int default 4;<br>  repeat<br>    set num = num + n;<br>    set n = n + 2;<br>    until n &gt; 100  -- 这里不用 ;<br>  end repeat;<br>return num;<br>end;<br>select func_repeat() -- 使用验证一下<br><br></code></pre></td></tr></table></figure><h4 id="5、loop-循环语句"><a href="#5、loop-循环语句" class="headerlink" title="5、loop 循环语句"></a>5、loop 循环语句</h4><p>扩展知识</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">leave ：类似与 python 的 <span class="hljs-keyword">break</span>,即：结束循环<br>iterate : 类似 python 的 <span class="hljs-keyword">continue</span> 即：结束<span class="hljs-keyword">continue</span> 后的循环体后继续重新循环<br><br></code></pre></td></tr></table></figure><p>loop 没有内置循环条件，即：没有结束循环的条件，但可以用 leave 来结束循环。</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">startloop:loop  -- startloop 是自定义的一个词，用来做标志的<br>  循环体;<br>  if 表达式 then<br>    levae startloop;  -- 自定义的结束循环<br>  end if;<br>end loop;<br><br></code></pre></td></tr></table></figure><p> 创建一个函数 func_loop ，实现 1+3+5+…+99 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create function func_loop()<br>returns int<br>begin<br>  declare num int default 1;<br>  declare n int default 3;<br>  startloop:loop<br>    set num = num + n;<br>    set n = n + 2;<br>    if n &gt; 100 then<br>      leave startloop;<br>  end if;<br>  end loop;<br>return num;<br>end;<br>select func_loop(); -- 使用验证一下<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(九)数据库索引</title>
    <link href="/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B9%9D-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/"/>
    <url>/2022/07/01/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B9%9D-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/</url>
    
    <content type="html"><![CDATA[<h3 id="一、创建索引"><a href="#一、创建索引" class="headerlink" title="一、创建索引"></a>一、创建索引</h3><p><strong>方法一：</strong></p><p>在创建表时创建索引</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> abc( id <span class="hljs-type">int</span>, sex <span class="hljs-type">char</span>(<span class="hljs-number">10</span>), <span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>), <span class="hljs-keyword">unique</span> <span class="hljs-keyword">index</span> index_id(id)  #创建唯一值索引:id  索引名:为index_id );  <br></code></pre></td></tr></table></figure><p><strong>方法二：</strong></p><p>用create 创建索引</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">unique</span> <span class="hljs-keyword">index</span> index_sex <span class="hljs-keyword">on</span> abc(sex); #创建唯一值索引:sex  索引名:为index_sex<br></code></pre></td></tr></table></figure><p><strong>方法三：</strong></p><p>在表创建完之后添加索引</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> abc <span class="hljs-keyword">add</span> <span class="hljs-keyword">unique</span> <span class="hljs-keyword">index</span> index_name(<span class="hljs-type">name</span>); # <span class="hljs-keyword">add</span> 添加唯一值索引:<span class="hljs-type">name</span>  索引名:为index_name <br></code></pre></td></tr></table></figure><h3 id="二、删除索引"><a href="#二、删除索引" class="headerlink" title="二、删除索引"></a>二、删除索引</h3><p>删除 名为 ：index_name 的索引</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">index</span> index_name <span class="hljs-keyword">on</span> abc;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>索引</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础之字符串操作</title>
    <link href="/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="一、统一英文大小写"><a href="#一、统一英文大小写" class="headerlink" title="一、统一英文大小写"></a>一、统一英文大小写</h3><p>1、统一英文大写  <strong>upper()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;ABcDefg&quot;</span><br><span class="hljs-built_in">print</span>(a.upper())<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  ABCDEFG</p><p>2、统一英文小写  <strong>lower()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;ABcDefg&quot;</span><br><span class="hljs-built_in">print</span>(a.lower())<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  abcdefg</p><h3 id="二、去除字符串首尾空格"><a href="#二、去除字符串首尾空格" class="headerlink" title="二、去除字符串首尾空格"></a>二、去除字符串首尾空格</h3><p>1、去除字符串开头空格  <strong>lstrip()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;   hello world!   &quot;</span><br><span class="hljs-built_in">print</span>(a.lstrip())<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!   </p><p>2、去除字符串末尾空格  <strong>rstrip()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;   hello world!   &quot;</span><br><span class="hljs-built_in">print</span>(a.rstrip())<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>     hello world!</p><p>3、去除字符串首位空格  <strong>strip()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;   hello world!   &quot;</span><br><span class="hljs-built_in">print</span>(a.strip())<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!</p><h3 id="三、拆分字符串-split"><a href="#三、拆分字符串-split" class="headerlink" title="三、拆分字符串  split()"></a>三、拆分字符串  split()</h3><p>把字符串 a 以   ,   分割返回列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;hello,world,!&quot;</span><br><span class="hljs-built_in">print</span>(a.split(<span class="hljs-string">&quot;,&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘hello’, ‘world’, ‘!’]</p><h3 id="四、查找子串的位置-find"><a href="#四、查找子串的位置-find" class="headerlink" title="四、查找子串的位置  find()"></a>四、查找子串的位置  find()</h3><p>说明：find() 函数如果字符串中有所查的子串 返回子串位置 ，否则返回 -1</p><p>1、查找 “world”  在字符串 a 中的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;hello world!&quot;</span><br><span class="hljs-built_in">print</span>(a.find(<span class="hljs-string">&quot;world&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  6</p><p>2、查找 “xiaoming”  在字符串 a 中的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;hello world!&quot;</span><br><span class="hljs-built_in">print</span>(a.find(<span class="hljs-string">&quot;xiaoming&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  -1</p><h3 id="五、截取字符串"><a href="#五、截取字符串" class="headerlink" title="五、截取字符串 [:::]"></a>五、截取字符串 [:::]</h3><p>说明： string[起始索引:结尾索引:步涨]</p><p>1、截取字符串  的 前3 位字符 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;0123456789&quot;</span><br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>:<span class="hljs-number">3</span>])<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> 012</p><p>2、截取字符串 的 后3 位字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;0123456789&quot;</span><br><span class="hljs-built_in">print</span>(a[-<span class="hljs-number">3</span>::])  <span class="hljs-comment"># : 截取全部字符</span><br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  789</p><p>3、截取字符串中位置 为 奇数 的字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;0123456789&quot;</span><br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">1</span>::<span class="hljs-number">2</span>])  <span class="hljs-comment"># : 截取全部字符</span><br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  13579</p><p>4、截取字符串中位置 为 偶数 的字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;0123456789&quot;</span><br><span class="hljs-built_in">print</span>(a[::<span class="hljs-number">2</span>])  <span class="hljs-comment">#不设置初始值 默认为0</span><br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  02468</p><p>5、将字符串倒序截取输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;0123456789&quot;</span><br><span class="hljs-built_in">print</span>(a[::-<span class="hljs-number">1</span>]) <span class="hljs-comment">#截取全部字符串 步涨值为-1</span><br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  9876543210</p><h3 id="六、字符串替换-replace"><a href="#六、字符串替换-replace" class="headerlink" title="六、字符串替换 replace()"></a>六、字符串替换 replace()</h3><p>说明：replace(要替换的字符串,替换后的字符串)</p><p>把 a 字符串 中的 “HELLO” 替换为 “hello”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;HELLO world!&quot;</span><br><span class="hljs-built_in">print</span>(a.replace(<span class="hljs-string">&quot;HELLO&quot;</span>,<span class="hljs-string">&quot;hello&quot;</span>))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  hello world!</p><h3 id="七、获取字符串的长度-len"><a href="#七、获取字符串的长度-len" class="headerlink" title="七、获取字符串的长度 len()"></a>七、获取字符串的长度 len()</h3><p>返回 a 字符串的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;hello world!&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(a))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  12</p><h3 id="八、使字符串居中显示-center"><a href="#八、使字符串居中显示-center" class="headerlink" title="八、使字符串居中显示   center()"></a>八、使字符串居中显示   center()</h3><p>说明：center(width,filechar)  </p><p>width 字符串排版总宽   </p><p>filechar 为填充字符</p><p>1、将 “12321” 在 7个字符宽度里居中显示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;12321&quot;</span><br><span class="hljs-built_in">print</span>(a.center(<span class="hljs-number">7</span>))<br><br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>   12321 </p><p>2、将 “12321” 在 7个字符宽度里居中显示,并用  *  填充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;12321&quot;</span><br><span class="hljs-built_in">print</span>(a.center(<span class="hljs-number">7</span>,<span class="hljs-string">&quot;*&quot;</span>))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  *12321*</p><h3 id="九、统计子字符串出现次数-count"><a href="#九、统计子字符串出现次数-count" class="headerlink" title="九、统计子字符串出现次数  count()"></a>九、统计子字符串出现次数  count()</h3><p>说明：count(sub,start=0,end(string))</p><p>sub：搜索的子字符串 </p><p>start：字符串搜索开始位置，默认为第一个位置</p><p>end：字符串搜索结束位置，默认为最后一个位置</p><p>1、统计字符串中 “ab” 出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;abababcdababab&quot;</span><br><span class="hljs-built_in">print</span>(a.count(<span class="hljs-string">&quot;ab&quot;</span>))<br><br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>  6</p><p>2、统计字符串从位置为 3~9 之间中 “ab” 出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;abababcdababab&quot;</span><br><span class="hljs-built_in">print</span>(a.count(<span class="hljs-string">&quot;ab&quot;</span>,<span class="hljs-number">3</span>,<span class="hljs-number">9</span>))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  1</p><h3 id="十、新字符串生成-join"><a href="#十、新字符串生成-join" class="headerlink" title="十、新字符串生成  join()"></a>十、新字符串生成  join()</h3><p>1、将一个字符串 在每个字符中间加入 -   返回一个新字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;abcdefg&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;-&quot;</span>.join(a))<br><br></code></pre></td></tr></table></figure><p>  <strong>&gt;&gt;&gt;</strong>  a-b-c-d-e-f-g</p><p>2、将一个列表中的每个字符连接在一起输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(a))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  abc</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串操作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础之编码与进制</title>
    <link href="/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BC%96%E7%A0%81%E4%B8%8E%E8%BF%9B%E5%88%B6/"/>
    <url>/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%BC%96%E7%A0%81%E4%B8%8E%E8%BF%9B%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="一、Ascii-码转换-ord"><a href="#一、Ascii-码转换-ord" class="headerlink" title="一、Ascii 码转换   ord()"></a>一、Ascii 码转换   ord()</h3><p>将字符 a 转换为 Ascii码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;a&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(a))<br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>  97</p><h3 id="二、Ascii-码转换为普通字符-chr"><a href="#二、Ascii-码转换为普通字符-chr" class="headerlink" title="二、Ascii 码转换为普通字符 chr()"></a>二、Ascii 码转换为普通字符 chr()</h3><p>将 ascii 码 97 转换为普通字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">97</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(a))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  a</p><h3 id="三、进制转换"><a href="#三、进制转换" class="headerlink" title="三、进制转换"></a>三、进制转换</h3><h4 id="1、二-进制转换为其他进制"><a href="#1、二-进制转换为其他进制" class="headerlink" title="1、二 进制转换为其他进制"></a>1、二 进制转换为其他进制</h4><p>2  进制转  8  进制  oct(int(n,2))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>)))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o12</p><p>2  进制转 10 进制  int(n,2)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  10</p><p>2  进制转 16 进制  hex(int(n,2))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">2</span>)))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0xa</p><h4 id="2、八进制转换为其他进制"><a href="#2、八进制转换为其他进制" class="headerlink" title="2、八进制转换为其他进制"></a>2、八进制转换为其他进制</h4><p>8 进制转 2 进制  bin(int(n,8))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>)))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1000001000</p><p>8 进制转 10 进制  int(n,8)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  520</p><p>8 进制转 16 进制  hex(int(n,8))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">8</span>)))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0x208</p><h4 id="3、十进制转换为其他进制"><a href="#3、十进制转换为其他进制" class="headerlink" title="3、十进制转换为其他进制"></a>3、十进制转换为其他进制</h4><p>10 进制转 2 进制  bin(int(n,10))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1111110010</p><p>10 进制转 8进制  oct(int(n,10))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o1762</p><p>10 进制转  16 进制 hex(int(n,10))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">10</span>)))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0x3f2</p><h4 id="4、十六进制转换为其他进制"><a href="#4、十六进制转换为其他进制" class="headerlink" title="4、十六进制转换为其他进制"></a>4、十六进制转换为其他进制</h4><p>16 进制转 2 进制  bin(int(n,16))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">16</span>)))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0b1000000010000</p><p>16 进制转  8 进制  oct(int(n,16))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-string">&quot;1010&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-built_in">int</span>(n,<span class="hljs-number">16</span>)))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  0o10020</p><p>16 进制转  10  进制 int(n,16)</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-built_in">n</span> = <span class="hljs-string">&quot;1010&quot;</span><br>print(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">n</span>,<span class="hljs-number">16</span>))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  4112</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>进制转换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础之常用数据结构</title>
    <link href="/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2022/06/28/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h3 id="一、列表list（有序）增、删、改、查"><a href="#一、列表list（有序）增、删、改、查" class="headerlink" title="一、列表list（有序）增、删、改、查"></a>一、列表list（有序）增、删、改、查</h3><h4 id="1、在列表增加元素-append"><a href="#1、在列表增加元素-append" class="headerlink" title="1、在列表增加元素  append()"></a>1、在列表增加元素  <strong>append()</strong></h4><p>​      创建一个空列表，增加元素 name 、age</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = []<br>a.append(<span class="hljs-string">&quot;name&quot;</span>)<br>a.append(<span class="hljs-string">&quot;age&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘age’]</p><p>​        在 a 列表中指定位置 1 插入  sex <strong>insert()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>]<br>a.insert(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;sex&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sex’, ‘age’]</p><h4 id="2、删除-元素pop"><a href="#2、删除-元素pop" class="headerlink" title="2、删除 元素pop()"></a>2、删除 元素<strong>pop()</strong></h4><p>1、列表 a 第一个元素和最后一个元素 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>]<br>a.pop(<span class="hljs-number">0</span>)<br>a.pop()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘age’]</p><p>2、删除列表中索引为 1 的元素 <strong>del list[index]</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>]<br><span class="hljs-keyword">del</span> a[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sex’]</p><h4 id="3、修改元素"><a href="#3、修改元素" class="headerlink" title="3、修改元素"></a>3、修改元素</h4><p>1、把列表 a 中 第一个位置元素改为 “sno” </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>]<br>a[<span class="hljs-number">1</span>] = <span class="hljs-string">&quot;sno&quot;</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  [‘name’, ‘sno’, ‘sex’]</p><h4 id="4、查询-a-列表的元素-list-index"><a href="#4、查询-a-列表的元素-list-index" class="headerlink" title="4、查询 a 列表的元素 list[index]"></a>4、查询 a 列表的元素 <strong>list[index]</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>]<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name</p><p>​      遍历列表 a 所有元素 <strong>for in</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex </p><h3 id="二、元组-tuple-有序-查、解包"><a href="#二、元组-tuple-有序-查、解包" class="headerlink" title="二、元组  tuple  (有序 )  查、解包"></a>二、元组  tuple  (有序 )  查、解包</h3><p><strong>元组元素不可改变</strong></p><h4 id="1、创建元组"><a href="#1、创建元组" class="headerlink" title="1、创建元组"></a>1、创建元组</h4><p>创建一个元组，并写入 name、age、sex</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,sex)<br></code></pre></td></tr></table></figure><h4 id="2、查询元组"><a href="#2、查询元组" class="headerlink" title="2、查询元组"></a>2、查询元组</h4><p>1、查询元组 a 和只查询 第一个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  (‘name’, ‘age’, ‘sex’)<br><strong>&gt;&gt;&gt;</strong>  name</p><p>2、遍历所有元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex </p><h4 id="3、元组解包"><a href="#3、元组解包" class="headerlink" title="3、元组解包"></a>3、元组解包</h4><p>把元组 a 解包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>)<br>b,c,d = a<br><span class="hljs-built_in">print</span>(b,c,d)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age sex</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;sex&quot;</span>)<br>b,*c = a<br><span class="hljs-built_in">print</span>(b,c)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name [‘age’, ‘sex’]</p><h3 id="三、字典-dict-无序-增、删、改、查"><a href="#三、字典-dict-无序-增、删、改、查" class="headerlink" title="三、字典  dict  (无序) 增、删、改、查"></a>三、字典  dict  (无序) 增、删、改、查</h3><p><strong>键不重复，唯一</strong></p><p><strong>创建一个空字典  a = {}</strong></p><h4 id="1、创建字典"><a href="#1、创建字典" class="headerlink" title="1、创建字典"></a>1、创建字典</h4><p>1、创建在字典 a 中增加 元素 “name”:”xiaoming”  “age”:18</p><p>(1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;&#125;<br>a[<span class="hljs-string">&quot;name&quot;</span>] = <span class="hljs-string">&quot;xiaoming&quot;</span><br>a[<span class="hljs-string">&quot;age&quot;</span>]  = <span class="hljs-number">18</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p>(2)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">dict</span>(name=<span class="hljs-string">&quot;xiaoming&quot;</span>,age=<span class="hljs-number">18</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘xiaoming’, ‘age’: 18}</p><h4 id="2、删除字典-pop-key-d"><a href="#2、删除字典-pop-key-d" class="headerlink" title="2、删除字典  pop(key,d)"></a>2、删除字典  <strong>pop(key,d)</strong></h4><p>删除字典 a 中的元素 “age”:18</p><p>说明：pop(key,d) key：删除的 键  d：没有对应的键返回 d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>a.pop(<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘xiaoming’}</p><p>删除字典 a 所有元素  <strong>clear()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>a.clear()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {}</p><h4 id="3、修改字典元素"><a href="#3、修改字典元素" class="headerlink" title="3、修改字典元素"></a>3、修改字典元素</h4><p>把字典 a 的 “name” 键 的值 修改为 “小明”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>a[<span class="hljs-string">&quot;name&quot;</span>] = <span class="hljs-string">&quot;小明&quot;</span><br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘name’: ‘小明’, ‘age’: 18}</p><h4 id="4、查询字典"><a href="#4、查询字典" class="headerlink" title="4、查询字典"></a>4、查询字典</h4><p>说明：get(key,”d”) 若字典d 中没有key键 则返回 “d” </p><p>1、获取字段 a 的 “name” 键的值  <strong>get()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>b = a.get(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>)<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>b = a[<span class="hljs-string">&quot;name&quot;</span>]<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  xiaoming</p><p>2、遍历字典 a 所有的<strong>键</strong> <strong>keys()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a.keys():<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name age </p><p>3、遍历字典 a 所有的<strong>值</strong> <strong>values()</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a.values():<br><span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  xiaoming 18</p><p>4、返回字典 a 中 的所有<strong>键对值</strong> <strong>items()</strong>  可迭代</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br>b = a.items()<br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  dict_items([(‘name’, ‘xiaoming’), (‘age’, 18)])</p><p>5、遍历所有键对值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-number">18</span><br>&#125;<br><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> a.items():<br><span class="hljs-built_in">print</span>(i,<span class="hljs-string">&quot;:&quot;</span>,j,end=<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  name : xiaoming age : 18 </p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(八) 数据库视图</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AB-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AB-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%86%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h3 id="一、视图介绍"><a href="#一、视图介绍" class="headerlink" title="一、视图介绍"></a>一、视图介绍</h3><p>理解：视图就像一个窗口，每个人在自己家里的窗口往外看，看到的风景是不一样的</p><p>视图就是给表开一个窗口，让每个人(角色)看到的风景不一样(数据) </p><p>窗口 (视图) 原本是没有风景(数据)的，它只是建立在风景(数据表)之上</p><h3 id="二、创建视图-view"><a href="#二、创建视图-view" class="headerlink" title="二、创建视图(view)"></a>二、创建视图(view)</h3><h4 id="1、单表创建视图"><a href="#1、单表创建视图" class="headerlink" title="1、单表创建视图"></a>1、单表创建视图</h4><p>要求：给student表,建立视图(stud)，并且视图只有student表的sno、sname、ssex列，</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stud <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> sno,sname,ssex <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h4 id="2、多表创建视图"><a href="#2、多表创建视图" class="headerlink" title="2、多表创建视图"></a>2、多表创建视图</h4><p>要求：给student 、sc 两表创建视图(stu_sc) ,并且视图只能有student表的 sno、sname列，sc 表的 cno,degree 列  ,</p><p>并为每个列取名  sno (学号) sname(姓名)  cno(课程号)  degree(成绩)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stu_sc(学号,姓名,课程号,成绩) <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> sc.sno,sname,cno,degree <span class="hljs-keyword">from</span> student,sc;<br></code></pre></td></tr></table></figure><h4 id="3、as-后的查询语句可以像查询表一样操作"><a href="#3、as-后的查询语句可以像查询表一样操作" class="headerlink" title="3、as 后的查询语句可以像查询表一样操作"></a>3、as 后的查询语句可以像查询表一样操作</h4><h3 id="三、更改视图-alter"><a href="#三、更改视图-alter" class="headerlink" title="三、更改视图(alter)"></a>三、更改视图(alter)</h3><p>要求：把视图 (stud) 减少sno 列</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">view</span> stud <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> sname,ssex <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h3 id="四、查看视图详细信息"><a href="#四、查看视图详细信息" class="headerlink" title="四、查看视图详细信息"></a>四、查看视图详细信息</h3><p>full</p><p>查看所有表的类型，视图和表</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">full</span> <span class="hljs-keyword">tables</span>;<br></code></pre></td></tr></table></figure><p>desc</p><p>查看视图结构 </p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">desc stud<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="五、更新视图内容"><a href="#五、更新视图内容" class="headerlink" title="五、更新视图内容"></a>五、更新视图内容</h3><h4 id="1、插入数据-insert-into"><a href="#1、插入数据-insert-into" class="headerlink" title="1、插入数据(insert into)"></a>1、插入数据(insert into)</h4><p>要求：向stud 视图插入 一条数据 (“小明”,”男”)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stud <span class="hljs-keyword">values</span> (<span class="hljs-string">&quot;小明&quot;</span>,<span class="hljs-string">&quot;男&quot;</span>);<br></code></pre></td></tr></table></figure><h4 id="2、更改数据-update"><a href="#2、更改数据-update" class="headerlink" title="2、更改数据(update)"></a>2、更改数据(update)</h4><p>要求：把stud 表 sname 列 的小明 改为 小刚</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">update stud set sname <span class="hljs-operator">=</span> <span class="hljs-string">&quot;小刚&quot;</span> where sname <span class="hljs-operator">=</span> <span class="hljs-string">&quot;小明&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h4 id="3、删除数据-delete-from"><a href="#3、删除数据-delete-from" class="headerlink" title="3、删除数据(delete from)"></a>3、删除数据(delete from)</h4><p>要求：向stud 视图删除 一条数据 条件为 sname = “小刚”</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> stud <span class="hljs-keyword">where</span> sname = <span class="hljs-string">&quot;小刚&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>1、视图是逻辑上存在的，而数据表是真实存在的，视图是一个编译好了的SQL语句。</p><p>2、在更新视图内容时，实际上是对原表的操作，即：</p><p>修改原表，视图也会相应的发生该表，反之也是。</p><p>3、视图只能查看原表的部分内容</p><p>4、当视图是原表使用聚合函数时，不能修改</p><p>5、待补</p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>视图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(七) 聚集函数查询</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%83-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%9B%9B-%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E6%9F%A5%E8%AF%A2/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%83-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%9B%9B-%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="一、按某列-升-降-排序-order-by"><a href="#一、按某列-升-降-排序-order-by" class="headerlink" title="一、按某列   升   降   排序(order by)"></a>一、按某列   升   降   排序(order by)</h3><h4 id="1、按升序排序-asc"><a href="#1、按升序排序-asc" class="headerlink" title="1、按升序排序(asc)"></a>1、按升序排序(asc)</h4><p>说明：系统默认按升序排序</p><p>表：sc</p><p>字段： * (所有)  degree(成绩)</p><p>要求：查询sc 并 让 degree 按升序输出</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> degree <span class="hljs-keyword">asc</span>;<br></code></pre></td></tr></table></figure><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> degree;<br></code></pre></td></tr></table></figure><p>两个或多个字段 用逗号隔开</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> degree <span class="hljs-keyword">asc</span>,sno <span class="hljs-keyword">asc</span>;<br></code></pre></td></tr></table></figure><h3 id="2、按降序排序-desc"><a href="#2、按降序排序-desc" class="headerlink" title="2、按降序排序(desc)"></a>2、按降序排序(desc)</h3><p>表：sc</p><p>字段： * (所有)  degree(成绩)</p><p>要求：查询sc 并 让 degree 按降序输出</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> degree <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure><h3 id="二、按组合输出-group-by-having"><a href="#二、按组合输出-group-by-having" class="headerlink" title="二、按组合输出(group by [having])"></a>二、按组合输出(group by [having])</h3><h4 id="1、简单分组"><a href="#1、简单分组" class="headerlink" title="1、简单分组"></a>1、简单分组</h4><p>表：student</p><p>字段：classno  </p><p>函数：count()  统计列</p><p>要求：统计输出各班学生的人数</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> classno,<span class="hljs-keyword">count</span>(*) <span class="hljs-keyword">from</span> student <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> classno;<br></code></pre></td></tr></table></figure><h4 id="2、分组加条件-having"><a href="#2、分组加条件-having" class="headerlink" title="2、分组加条件(having)"></a>2、分组加条件(having)</h4><p>表：sc</p><p>字段：sno </p><p>函数：count()  统计列</p><p>要求：查询选修了2门以上课程的学生学号和选修门数。</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><span class="hljs-keyword">select</span> sno,count<span class="hljs-comment">(*) from sc group by sno having count(*)</span> &gt;<span class="hljs-number">2</span><span class="hljs-punctuation">;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>聚集函数查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(六) 嵌套查询</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AD-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%89-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%85%AD-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%89-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="一、嵌套查询-in"><a href="#一、嵌套查询-in" class="headerlink" title="一、嵌套查询(in)"></a>一、嵌套查询(in)</h3><p>表：student 、sc</p><p>字段：cno 、degree sname</p><p>作用：从student表查询到的结果当sc 表的查询条件的一部分</p><p>要求：查询 “小明” 同学所选的 cno 和degree 。  </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">select</span> cno,<span class="hljs-function">degree <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sno <span class="hljs-title">in</span> (<span class="hljs-params"><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sname = <span class="hljs-string">&quot;小明&quot;</span></span>)</span>;<br></code></pre></td></tr></table></figure><h3 id="二、嵌套查询-exists"><a href="#二、嵌套查询-exists" class="headerlink" title="二、嵌套查询(exists)"></a>二、嵌套查询(exists)</h3><p>exists 只会返回true 和 false</p><p>表：student</p><p>字段：sno,sname,sbirthday</p><p>作用：把外层查询到的结果，放入内层去对比 结果成立 返回 true 反之 返回false</p><p>要求：(1)   查询姓李的同学和年龄超过30岁的学号、姓名、年龄。  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sno,sname,<span class="hljs-keyword">year</span>(<span class="hljs-built_in">current_date</span>)<span class="hljs-operator">-</span><span class="hljs-keyword">year</span>(sbirthday) <span class="hljs-keyword">from</span> student a <span class="hljs-keyword">where</span> sname <span class="hljs-keyword">like</span> &quot;李%&quot; <span class="hljs-keyword">and</span> <span class="hljs-keyword">exists</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span>(<span class="hljs-built_in">current_date</span>)<span class="hljs-operator">-</span><span class="hljs-keyword">year</span>(a.sbirthday)<span class="hljs-operator">&gt;</span><span class="hljs-number">30</span>);<br></code></pre></td></tr></table></figure><h3 id="三、相关子查询-in"><a href="#三、相关子查询-in" class="headerlink" title="三、相关子查询(in)"></a>三、相关子查询(in)</h3><p>依赖于外层查询结果</p><p>表：sc</p><p>字段：* (所有)</p><p>作用：把外层查询到的结果，放入内层去查询再返回结果</p><p>要求：查询 每课成绩大于平均成绩的信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc a <span class="hljs-keyword">where</span> degree &gt; (<span class="hljs-keyword">select</span> <span class="hljs-keyword">avg</span>(degree) <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> a.sno=sc.sno);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>嵌套查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(五) 多表链接查询</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%94-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BA%8C-%E5%A4%9A%E8%A1%A8%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%94-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BA%8C-%E5%A4%9A%E8%A1%A8%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="一、笛卡尔积-连接查询"><a href="#一、笛卡尔积-连接查询" class="headerlink" title="一、笛卡尔积   连接查询"></a>一、笛卡尔积   连接查询</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用笛卡尔积进行连接查询</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">select</span> <span class="hljs-regexp">student.*</span>,<span class="hljs-regexp">sc.*</span> from student,sc;<br></code></pre></td></tr></table></figure><h3 id="二、内连接查询-inner-join-on"><a href="#二、内连接查询-inner-join-on" class="headerlink" title="二、内连接查询(inner join   on)"></a>二、内连接查询(inner join   on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用内连接进行查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> student.*,sc.* <span class="hljs-keyword">from</span> student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> sc <span class="hljs-keyword">on</span> student.sno=sc.sno;<br></code></pre></td></tr></table></figure><h3 id="三、左连接查询-left-join-on"><a href="#三、左连接查询-left-join-on" class="headerlink" title="三、左连接查询(left  join on)"></a>三、左连接查询(left  join on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用左连接进行查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> student.*,sc.* <span class="hljs-keyword">from</span> student <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> sc <span class="hljs-keyword">on</span> student.sno=sc.sno;<br></code></pre></td></tr></table></figure><h3 id="四、右连接查询-rigth-join-on"><a href="#四、右连接查询-rigth-join-on" class="headerlink" title="四、右连接查询(rigth join on)"></a>四、右连接查询(rigth join on)</h3><p>表：student 、 sc</p><p>字段：student.* (student 表的所有字段)   sc.*(sc表的所有字段)</p><p>要求：student 和 sc 表用右连接进行查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> student.*,sc.* <span class="hljs-keyword">from</span> student <span class="hljs-keyword">right</span> <span class="hljs-keyword">join</span> sc <span class="hljs-keyword">on</span> student.sno=sc.sno;<br></code></pre></td></tr></table></figure><h3 id="五、内连接查询-inner-join-on"><a href="#五、内连接查询-inner-join-on" class="headerlink" title="五、内连接查询(inner join on)"></a>五、内连接查询(inner join on)</h3><p>表：student a  (student 取名为a)</p><p>字段：student.* (student 表的所有字段)  a.sno (a表的sno字段)</p><p>要求：student表用内连接进行查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student a <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> student b <span class="hljs-keyword">on</span> a.sno=b.sno;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多表链接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(四) 简单查询</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%80-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E5%9B%9B-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%B8%80-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="一、简单查询"><a href="#一、简单查询" class="headerlink" title="一、简单查询"></a>一、简单查询</h3><h4 id="1、查询student-数据表所有数据"><a href="#1、查询student-数据表所有数据" class="headerlink" title="1、查询student 数据表所有数据"></a>1、查询student 数据表所有数据</h4><p>表：student</p><p>字段：* (所有)</p><p>条件：无</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h4 id="2、查询student-表的-指定字段数据"><a href="#2、查询student-表的-指定字段数据" class="headerlink" title="2、查询student 表的 指定字段数据"></a>2、查询student 表的 指定字段数据</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：无</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> sno,sname,ssex <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h4 id="3、查询student-表的-指定字段数据-并改列名显示-as"><a href="#3、查询student-表的-指定字段数据-并改列名显示-as" class="headerlink" title="3、查询student 表的 指定字段数据   并改列名显示 (as)"></a>3、查询student 表的 指定字段数据   并改列名显示 (as)</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：[sno  改为  学号 ]、[sname  改为 姓名 ]、[ssex 改为 性别 ]</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">as</span> 学号,sname <span class="hljs-keyword">as</span> 姓名,ssex <span class="hljs-keyword">as</span> 性别 <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h4 id="4、查询sc-表-打折-数学运算"><a href="#4、查询sc-表-打折-数学运算" class="headerlink" title="4、查询sc 表  打折(数学运算)"></a>4、查询sc 表  打折(数学运算)</h4><p>表：sc</p><p>字段：sno(学号)、degree(成绩)</p><p>条件：成绩打八折</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">select</span> sno,degree*<span class="hljs-number">0</span>.<span class="hljs-number">8</span> from sc;<br></code></pre></td></tr></table></figure><h4 id="5、查询student-表-指定条件-where"><a href="#5、查询student-表-指定条件-where" class="headerlink" title="5、查询student 表 指定条件(where)"></a>5、查询student 表 指定条件(where)</h4><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)</p><p>条件：ssex 字段数据为 “男”</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> sno,sname,ssex <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> ssex = <span class="hljs-string">&quot;男&quot;</span>;<br></code></pre></td></tr></table></figure><h4 id="6、查询sc-表-取区间-between-and-、-not-between-and"><a href="#6、查询sc-表-取区间-between-and-、-not-between-and" class="headerlink" title="6、查询sc 表  取区间[(between  and)、(not between and)]"></a>6、查询sc 表  取区间[(between  and)、(not between and)]</h4><p>表：sc</p><p>字段：* (所有)、degree(成绩)</p><p>条件：只要查询 degree(成绩) 在80~90 的 所有数据(between  and)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> degree <span class="hljs-keyword">between</span> <span class="hljs-number">80</span> <span class="hljs-keyword">and</span> <span class="hljs-number">90</span>;<br></code></pre></td></tr></table></figure><p>条件：只要查询 degree(成绩) 不在80~90 的 所有数据(not between and)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> degree <span class="hljs-keyword">not</span> <span class="hljs-keyword">between</span> <span class="hljs-number">80</span> <span class="hljs-keyword">and</span> <span class="hljs-number">90</span>;<br></code></pre></td></tr></table></figure><h4 id="7、查询sc-表-取集合-in-、-not-in-、-or"><a href="#7、查询sc-表-取集合-in-、-not-in-、-or" class="headerlink" title="7、查询sc 表  取集合[(in)、(not in)、(or)]"></a>7、查询sc 表  取集合[(in)、(not in)、(or)]</h4><p>表：sc</p><p>字段：* (所有)、degree(成绩)</p><p>条件：只要查询 degree(成绩) 为 {92、85、90} 的数据(in)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">select</span> * <span class="hljs-function"><span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> degree <span class="hljs-title">in</span> (<span class="hljs-params"><span class="hljs-number">92</span>,<span class="hljs-number">85</span>,<span class="hljs-number">90</span></span>)</span>;<br></code></pre></td></tr></table></figure><p>条件：只要查询 degree(成绩) 不为 {92、85、90}的 数据(not in)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">select</span> * <span class="hljs-function"><span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> degree <span class="hljs-keyword">not</span> <span class="hljs-title">in</span> (<span class="hljs-params"><span class="hljs-number">92</span>,<span class="hljs-number">85</span>,<span class="hljs-number">90</span></span>)</span>;<br></code></pre></td></tr></table></figure><p>条件：只要查询 degree(成绩) 为 90 或 85 的 数据(in or)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">select</span> * <span class="hljs-function"><span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> degree <span class="hljs-title">in</span> (<span class="hljs-params"><span class="hljs-number">90</span></span>) <span class="hljs-keyword">or</span> degree <span class="hljs-title">in</span> (<span class="hljs-params"><span class="hljs-number">85</span></span>)</span>;<br></code></pre></td></tr></table></figure><h4 id="8、查询student-表-空值-null"><a href="#8、查询student-表-空值-null" class="headerlink" title="8、查询student 表  空值(null)"></a>8、查询student 表  空值(null)</h4><p>表：student</p><p>字段：classno (班级号)</p><p>条件：查看 classno 字段   为空值的行(is)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> classno <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><p>条件：查看 classno 字段   不为空值的行(not is)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> classno <span class="hljs-keyword">is</span> not <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><h4 id="9、查询student-表-只取-前两条-limit"><a href="#9、查询student-表-只取-前两条-limit" class="headerlink" title="9、查询student 表  只取 前两条(limit)"></a>9、查询student 表  只取 前两条(limit)</h4><p>表：student</p><p>字段：* (所有)</p><p>条件：只要查询到的 前两条</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">limit</span> <span class="hljs-number">2</span>;<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h3 id="二、简单查询-模糊查询"><a href="#二、简单查询-模糊查询" class="headerlink" title="二、简单查询(模糊查询)"></a>二、简单查询(模糊查询)</h3><h4 id="1、查询student-表-查询姓刘的学生-like"><a href="#1、查询student-表-查询姓刘的学生-like" class="headerlink" title="1、查询student 表  查询姓刘的学生(like)"></a>1、查询student 表  查询姓刘的学生(like)</h4><ol><li>模糊查询：escape “#”  把 “#”  用于转义字符的字符 </li><li><pre><code class="hljs">                     --&gt; % 匹配任意多个字符 </code></pre></li><li><pre><code class="hljs">                     --&gt; _  匹配单个任意字符</code></pre></li></ol><p>表：student</p><p>字段：* (所有)、sname(姓名)、sdept(学院)</p><p>条件：只要查询sname(姓名)   姓刘 的信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sname <span class="hljs-keyword">like</span> <span class="hljs-string">&quot;刘%&quot;</span>;<br></code></pre></td></tr></table></figure><p>条件：只要查询sname(姓名)   姓刘   单名   的信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sname <span class="hljs-keyword">like</span> <span class="hljs-string">&quot;刘_&quot;</span>;<br></code></pre></td></tr></table></figure><p>条件：只要查询sdept(学院) 为 “计算机_”  开始   的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sdept <span class="hljs-keyword">like</span> &quot;计算机#_%&quot; <span class="hljs-keyword">escape</span> &quot;#&quot;;<br></code></pre></td></tr></table></figure><h4 id="2、查询student-表-查询姓刘的学生-regexp"><a href="#2、查询student-表-查询姓刘的学生-regexp" class="headerlink" title="2、查询student 表  查询姓刘的学生(regexp)"></a>2、查询student 表  查询姓刘的学生(regexp)</h4><p>正则表达式：regexp   </p><p>表：student</p><p>字段：* (所有)、sname(姓名)、sdept(学院)</p><p>条件：只要查询sdept(学院) 为 “计算机_”  开始   的信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sdept regexp <span class="hljs-string">&quot;^计算机_.&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="三、简单查询-引入函数"><a href="#三、简单查询-引入函数" class="headerlink" title="三、简单查询 (引入函数)"></a>三、简单查询 (引入函数)</h3><h4 id="1、查询student-表-学生年龄-year-、current-date"><a href="#1、查询student-表-学生年龄-year-、current-date" class="headerlink" title="1、查询student 表  学生年龄 [ year()、current_date()]"></a>1、查询student 表  学生年龄 [ year()、current_date()]</h4><ol><li>函数：1、year()  取出年份</li><li><pre><code class="hljs">       2、current_date()  现在的日期</code></pre></li></ol><p>表：student</p><p>字段：sno (学号)、sname(姓名)、ssex(性别)、sbirthday(出生日期)</p><p>条件：用函数处理 sbirthday 字段 ，拿到年龄</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">as</span> 学号,sname <span class="hljs-keyword">as</span> 姓名,ssex <span class="hljs-keyword">as</span> 性别,<span class="hljs-meta">year</span>(current_<span class="hljs-meta">date</span>())-<span class="hljs-meta">year</span>(sbirthday) <span class="hljs-keyword">as</span> 年龄 <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h4 id="2、查询student-表-去重复-distinct"><a href="#2、查询student-表-去重复-distinct" class="headerlink" title="2、查询student 表  去重复 (distinct)"></a>2、查询student 表  去重复 (distinct)</h4><p>函数：1、distinct 去除重复值</p><p>表：student</p><p>字段：ssex(性别)、</p><p>条件：用函数处理 ssex字段 ，拿到所拥有的性别</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">distinct</span>(<span class="hljs-params">ssex</span>) <span class="hljs-keyword">from</span> student</span>;<br></code></pre></td></tr></table></figure><h4 id="3、查询sc-表-数学函数、"><a href="#3、查询sc-表-数学函数、" class="headerlink" title="3、查询sc 表  数学函数、"></a>3、查询sc 表  数学函数、</h4><ol><li>函数： 1、max() 提取最大值</li><li><pre><code class="hljs">        2、min() 最小值</code></pre></li><li><pre><code class="hljs">        3、avg() 平均值</code></pre></li><li><pre><code class="hljs">        4、count() 统计行数</code></pre></li></ol><p>表：sc</p><p>字段：degree(成绩) </p><p>条件：查询degree 最大值</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">max</span>(<span class="hljs-params">degree</span>) <span class="hljs-keyword">from</span> sc</span>;<br></code></pre></td></tr></table></figure><p>条件：查询degree 最小值</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">min</span>(<span class="hljs-params">degree</span>) <span class="hljs-keyword">from</span> sc</span>;<br></code></pre></td></tr></table></figure><p>条件：查询degree 平均值</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> <span class="hljs-keyword">avg</span>(degree) <span class="hljs-keyword">from</span> sc;<br></code></pre></td></tr></table></figure><p>条件：查询degree 总行数</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(degree) <span class="hljs-keyword">from</span> sc;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>简单查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(三) 数据数据增、删、改</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%A2%9E%E3%80%81%E5%88%A0%E3%80%81%E6%94%B9/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%89-%E6%95%B0%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%A2%9E%E3%80%81%E5%88%A0%E3%80%81%E6%94%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="一、-向数据表插入数据-insert-into"><a href="#一、-向数据表插入数据-insert-into" class="headerlink" title="一、 向数据表插入数据(insert into)"></a>一、 向数据表插入数据(insert into)</h3><p><strong>表</strong>：teaching<br><strong>数据</strong>：C01    101 | C02    102<br><strong>字段</strong>：cno    tno</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teaching(cno,tno) <span class="hljs-keyword">values</span>(<span class="hljs-string">&quot;C01&quot;</span>,<span class="hljs-string">&quot;101&quot;</span>),(<span class="hljs-string">&quot;C01&quot;</span>,<span class="hljs-string">&quot;102&quot;</span>);<br></code></pre></td></tr></table></figure><p>在添加的数据填满表字段时，可省掉字段,</p><ul><li>即：<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teaching <span class="hljs-keyword">values</span>(<span class="hljs-string">&quot;C01&quot;</span>,<span class="hljs-string">&quot;101&quot;</span>),(<span class="hljs-string">&quot;C01&quot;</span>,<span class="hljs-string">&quot;102&quot;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="二、-删除数据表的数据-delete"><a href="#二、-删除数据表的数据-delete" class="headerlink" title="二、 删除数据表的数据(delete)"></a>二、 删除数据表的数据(delete)</h3><h5 id="1、删除指定字段整列数据"><a href="#1、删除指定字段整列数据" class="headerlink" title="1、删除指定字段整列数据"></a>1、删除指定字段整列数据</h5><p>表：student</p><p>数据：sno 字段为 2005020103 的那列数据</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sno = <span class="hljs-number">2005020103</span>;<br></code></pre></td></tr></table></figure><h5 id="2、删除数据表所有数据"><a href="#2、删除数据表所有数据" class="headerlink" title="2、删除数据表所有数据"></a>2、删除数据表所有数据</h5><p>表：student</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h3 id="三、修改数据库的数据-update"><a href="#三、修改数据库的数据-update" class="headerlink" title="三、修改数据库的数据(update)"></a>三、修改数据库的数据(update)</h3><h5 id="1、修改指定数据"><a href="#1、修改指定数据" class="headerlink" title="1、修改指定数据"></a>1、修改指定数据</h5><p>表：student </p><p>修该：把 sno = 2005010101 的 sname 字段的内容为 刘一二 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update student set sname = &quot;刘一二&quot; where sno = 2005010101;<br></code></pre></td></tr></table></figure><h5 id="2、修改整个数据表中的指定列"><a href="#2、修改整个数据表中的指定列" class="headerlink" title="2、修改整个数据表中的指定列"></a>2、修改整个数据表中的指定列</h5><p>表：student</p><p>修改：把 整个表的所有asddress 字段都修改为 “广东茂名”</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">update student set saddress <span class="hljs-operator">=</span> <span class="hljs-string">&quot;广东茂名&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>​<br>​<br>​    </p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(二) 数据表结构操作</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%8C-%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BB%93%E6%9E%84%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="一、创建数据表"><a href="#一、创建数据表" class="headerlink" title="一、创建数据表"></a>一、创建数据表</h3><h5 id="1-创建数据表并设置主键"><a href="#1-创建数据表并设置主键" class="headerlink" title="1.创建数据表并设置主键"></a>1.创建数据表并设置主键</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl<br><em><strong>字段</strong></em>：name age<br><em><strong>数据类型和范围</strong></em>：varchar(20)   int<br><em><strong>设置不允许为空值</strong></em>：not null<br><em><strong>设置主键</strong></em>：primary key</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xiaoyudi_tbl(<span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">primary key</span>,age <span class="hljs-type">int</span>);<br></code></pre></td></tr></table></figure><h5 id="2-创建数据表并设置字符集"><a href="#2-创建数据表并设置字符集" class="headerlink" title="2.创建数据表并设置字符集"></a>2.创建数据表并设置字符集</h5><p><em><strong>设置字符集为utf8</strong></em>：charset=utf8</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xiaoyudi1_tbl(<span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>),age <span class="hljs-type">int</span>)charset=utf8;<br></code></pre></td></tr></table></figure><h3 id="二、数据表操作"><a href="#二、数据表操作" class="headerlink" title="二、数据表操作"></a>二、数据表操作</h3><h5 id="1、显示数据表的字段类型等"><a href="#1、显示数据表的字段类型等" class="headerlink" title="1、显示数据表的字段类型等"></a>1、显示数据表的字段类型等</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">desc xiaoyudi_tbl<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h5 id="2、修改数据表名"><a href="#2、修改数据表名" class="headerlink" title="2、修改数据表名"></a>2、修改数据表名</h5><p><em><strong>旧表名</strong></em>：xiaoyudi_tbl<br><em><strong>新表名</strong></em>：student_1_tbl</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> xiaoyudi_tbl <span class="hljs-keyword">to</span> student_1_tbl;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> xiaoyudi_tbl <span class="hljs-keyword">rename</span> <span class="hljs-keyword">as</span> student_1_tbl;<br></code></pre></td></tr></table></figure><h5 id="3、查看数据表创建信息"><a href="#3、查看数据表创建信息" class="headerlink" title="3、查看数据表创建信息"></a>3、查看数据表创建信息</h5><p><em><strong>数据表</strong></em>：xiaoyudi_tbl</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xiaoyudi_tbl;<br></code></pre></td></tr></table></figure><h5 id="4、复制数据表"><a href="#4、复制数据表" class="headerlink" title="4、复制数据表"></a>4、复制数据表</h5><p><em><strong>复制表</strong></em>：student_1_tbl<br><em><strong>新建表</strong></em>：xiaoyudi_cp</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xiaoyudi_cp <span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> student_1_tbl;<br></code></pre></td></tr></table></figure><h5 id="5、添加字段并设置默认值并加到指定字段之后-after"><a href="#5、添加字段并设置默认值并加到指定字段之后-after" class="headerlink" title="5、添加字段并设置默认值并加到指定字段之后(after)"></a>5、添加字段并设置默认值并加到指定字段之后(after)</h5><p><em><strong>添加字段</strong></em>：备注 varchar(50)<br><em><strong>默认值</strong></em>：无<br><em><strong>指定字段</strong></em>：classname</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> cp <span class="hljs-keyword">add</span> 备注 <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">default</span> &quot;无&quot; <span class="hljs-keyword">after</span> classname；<br></code></pre></td></tr></table></figure><h5 id="6、修改字段长度-modify"><a href="#6、修改字段长度-modify" class="headerlink" title="6、修改字段长度(modify)"></a>6、修改字段长度(modify)</h5><p><em><strong>修改字段长度</strong></em>：header char(15)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> cp modify <span class="hljs-keyword">header</span> <span class="hljs-type">char</span>(<span class="hljs-number">15</span>);<br></code></pre></td></tr></table></figure><h3 id="7、修改字段-change"><a href="#7、修改字段-change" class="headerlink" title="7、修改字段(change)"></a>7、修改字段(change)</h3><p><em><strong>修改目标字段</strong></em>：inyear<br><em><strong>修改后字段</strong></em>：入学时间</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">alter <span class="hljs-keyword">table</span> cp <span class="hljs-comment">change inyear</span> 入学时间;<br></code></pre></td></tr></table></figure><h5 id="8、修改字段默认值"><a href="#8、修改字段默认值" class="headerlink" title="8、修改字段默认值"></a>8、修改字段默认值</h5><p><em><strong>字段</strong></em>：备注<br><em><strong>默认值</strong></em>：班级注释</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> cp <span class="hljs-keyword">alter</span> <span class="hljs-keyword">column</span> 备注 <span class="hljs-keyword">set</span> <span class="hljs-keyword">default</span> &quot;班级注释&quot;;<br></code></pre></td></tr></table></figure><h5 id="9、删除字段"><a href="#9、删除字段" class="headerlink" title="9、删除字段"></a>9、删除字段</h5><p><em><strong>字段</strong></em>：inyear</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> cp <span class="hljs-keyword">drop</span> inyear;<br></code></pre></td></tr></table></figure><h5 id="10、修改表的存储引擎-engine"><a href="#10、修改表的存储引擎-engine" class="headerlink" title="10、修改表的存储引擎(engine)"></a>10、修改表的存储引擎(engine)</h5><p><em><strong>引擎</strong>MyISAM</em>：MyISAM<br><em><strong>表</strong></em>：cp</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">alter table cp engine<span class="hljs-operator">=</span>MyISAM<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h5 id="11、删除表"><a href="#11、删除表" class="headerlink" title="11、删除表"></a>11、删除表</h5><p><em><strong>表</strong></em>：cp</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-keyword">drop</span> <span class="hljs-built_in">table</span> cp;<br></code></pre></td></tr></table></figure><h3 id="三、主键约束-primary-key"><a href="#三、主键约束-primary-key" class="headerlink" title="三、主键约束(primary key)"></a>三、主键约束(primary key)</h3><h5 id="1、为表添加主键-primary-key"><a href="#1、为表添加主键-primary-key" class="headerlink" title="1、为表添加主键(primary key)"></a>1、为表添加主键(primary key)</h5><p><em><strong>表</strong></em>：student<br><em><strong>设置为主键的字段</strong></em>：sno</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> student <span class="hljs-keyword">add</span> <span class="hljs-keyword">primary</span> <span class="hljs-keyword">key</span>(sno);<br></code></pre></td></tr></table></figure><h5 id="2、为表添加主键并设置字段约束名-constraint"><a href="#2、为表添加主键并设置字段约束名-constraint" class="headerlink" title="2、为表添加主键并设置字段约束名(constraint)"></a>2、为表添加主键并设置字段约束名(constraint)</h5><p><em><strong>表</strong></em>：student<br><em><strong>设置为主键的字段</strong></em>：sno<br><em><strong>字段约束名</strong></em>：PK_student_sno</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> student <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> PK_student_sno <span class="hljs-keyword">primary key</span>(sno);<br></code></pre></td></tr></table></figure><h5 id="3、删除表主键"><a href="#3、删除表主键" class="headerlink" title="3、删除表主键"></a>3、删除表主键</h5><p><em><strong>表</strong></em>：sc<br><em><strong>主键</strong></em>：primary key</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> sc <span class="hljs-keyword">drop</span> <span class="hljs-keyword">primary</span> <span class="hljs-keyword">key</span>;<br></code></pre></td></tr></table></figure><h5 id="4、为表设置组合主键"><a href="#4、为表设置组合主键" class="headerlink" title="4、为表设置组合主键"></a>4、为表设置组合主键</h5><p><em><strong>表</strong></em>：sc<br><em><strong>组合主键</strong></em>：cno sno</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> sc <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> PK_sc_cnosno <span class="hljs-keyword">primary key</span>(cno,sno);<br></code></pre></td></tr></table></figure><h3 id="四、外键约束-foreign-key-参考-references"><a href="#四、外键约束-foreign-key-参考-references" class="headerlink" title="四、外键约束(foreign key)  参考(references)"></a>四、外键约束(foreign key)  参考(references)</h3><h5 id="1、为表添加外键"><a href="#1、为表添加外键" class="headerlink" title="1、为表添加外键"></a>1、为表添加外键</h5><p><em><strong>外键</strong></em>：foreign key<br><em><strong>参考表与字段</strong></em>：class(classno)<br><em><strong>字段约束名</strong></em>：FK_stu_class_classno</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> student <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_stu_class_classno <span class="hljs-keyword">foreign key</span>(classno) <span class="hljs-keyword">references</span> <span class="hljs-keyword">class</span>(classno);<br></code></pre></td></tr></table></figure><h5 id="2、根据外键约束名删除表的外键"><a href="#2、根据外键约束名删除表的外键" class="headerlink" title="2、根据外键约束名删除表的外键"></a>2、根据外键约束名删除表的外键</h5><p><em><strong>表</strong></em>：class<br><em><strong>外键约束名</strong></em>：FK_class_department</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">drop</span> key FK_class_department;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">drop</span> <span class="hljs-keyword">foreign key</span> FK_class_department;<br></code></pre></td></tr></table></figure><h5 id="3、为表设置唯一值约束-unique-替代键-和约束名"><a href="#3、为表设置唯一值约束-unique-替代键-和约束名" class="headerlink" title="3、为表设置唯一值约束(unique)(替代键)和约束名"></a>3、为表设置唯一值约束(unique)(替代键)和约束名</h5><p><em><strong>表</strong></em>：student<br><em><strong>唯一值约束名</strong></em>：IX_student_sid<br><em><strong>设置的字段</strong></em>：sid</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> student <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> IX_student_sid <span class="hljs-keyword">unique</span>(sid);<br></code></pre></td></tr></table></figure><h5 id="4、删除唯一值约束-index"><a href="#4、删除唯一值约束-index" class="headerlink" title="4、删除唯一值约束(index)"></a>4、删除唯一值约束(index)</h5><p><em><strong>表</strong></em>：student<br><em><strong>唯一值约束名</strong></em>：IX_student_sid</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> student <span class="hljs-keyword">drop</span> <span class="hljs-keyword">index</span> IX_student_sid;<br></code></pre></td></tr></table></figure><h5 id="6、为字段添加检查约束-check"><a href="#6、为字段添加检查约束-check" class="headerlink" title="6、为字段添加检查约束(check)"></a>6、为字段添加检查约束(check)</h5><p><em><strong>表</strong></em> ：xiao_tbl<br><em><strong>约束条件</strong></em> ：只允许填入<em>男</em>或<em>女</em>(sex = “男” or “女”)<br><strong>创建表时添加</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xiao_tbl(sex <span class="hljs-type">char</span>(<span class="hljs-number">2</span>),<span class="hljs-keyword">check</span>(sex <span class="hljs-operator">=</span> &quot;男&quot; <span class="hljs-keyword">or</span> &quot;女&quot;));<br></code></pre></td></tr></table></figure><p><strong>创建表后修改表</strong>:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> xiao_tbl <span class="hljs-keyword">add</span> <span class="hljs-keyword">check</span>(sex = &quot;男&quot; <span class="hljs-keyword">or</span> &quot;女&quot;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL数据库基础(一) 创建数据库</title>
    <link href="/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2022/05/26/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%80-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h3 id="一、创建数据库"><a href="#一、创建数据库" class="headerlink" title="一、创建数据库"></a>一、创建数据库</h3><h5 id="1、只创建数据库"><a href="#1、只创建数据库" class="headerlink" title="1、只创建数据库"></a>1、只创建数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database 库名;<br></code></pre></td></tr></table></figure><h5 id="2、创建数据库并设置编码规则"><a href="#2、创建数据库并设置编码规则" class="headerlink" title="2、创建数据库并设置编码规则"></a>2、创建数据库并设置编码规则</h5><p><strong>数据库</strong>：xiaoyudi<br><strong>character set</strong> ：设置数据库采用的字符集<br><strong>collate</strong>：指定数据库字符集的排序规则*</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database xiaoyudi character set utf8 collate utf8_general_ci;<br>create database xiaoyudi character set gbk collate gbk_chinese_ci;<br></code></pre></td></tr></table></figure><h5 id="3、查看当前使用的数据库"><a href="#3、查看当前使用的数据库" class="headerlink" title="3、查看当前使用的数据库"></a>3、查看当前使用的数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select database();<br></code></pre></td></tr></table></figure><h3 id="二、查看数据库信息"><a href="#二、查看数据库信息" class="headerlink" title="二、查看数据库信息"></a>二、查看数据库信息</h3><h5 id="1、查看数据库所支持存储引擎"><a href="#1、查看数据库所支持存储引擎" class="headerlink" title="1、查看数据库所支持存储引擎"></a>1、查看数据库所支持存储引擎</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show engines;<br></code></pre></td></tr></table></figure><h5 id="2-查看数据库所支持的字符集"><a href="#2-查看数据库所支持的字符集" class="headerlink" title="2.查看数据库所支持的字符集"></a>2.查看数据库所支持的字符集</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show variables like &quot;%character%&quot;;<br></code></pre></td></tr></table></figure><h5 id="3、查看数据库所支持的编码规则"><a href="#3、查看数据库所支持的编码规则" class="headerlink" title="3、查看数据库所支持的编码规则"></a>3、查看数据库所支持的编码规则</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show variables like &quot;%collation%&quot;;<br></code></pre></td></tr></table></figure><h3 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h3><h5 id="1、使用数据库"><a href="#1、使用数据库" class="headerlink" title="1、使用数据库"></a>1、使用数据库</h5><p>数据库：xiaoyudi</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">use xiaoyudi<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h5 id="2、删除数据表"><a href="#2、删除数据表" class="headerlink" title="2、删除数据表"></a>2、删除数据表</h5><p><em><strong>数据表</strong></em>：xiaoyudi1_tbl</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-keyword">drop</span> <span class="hljs-built_in">table</span> xiaoyudi1_tbl;<br></code></pre></td></tr></table></figure><h5 id="3、编码规则和字符集在创建数据库时设置可以继承给数据表"><a href="#3、编码规则和字符集在创建数据库时设置可以继承给数据表" class="headerlink" title="3、编码规则和字符集在创建数据库时设置可以继承给数据表"></a>3、编码规则和字符集在创建数据库时设置可以继承给数据表</h5>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创建数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础之format</title>
    <link href="/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8Bformat/"/>
    <url>/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8Bformat/</url>
    
    <content type="html"><![CDATA[<h3 id="一、无参数"><a href="#一、无参数" class="headerlink" title="一、无参数"></a>一、无参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125; &#123;&#125; &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>,<span class="hljs-string">&quot;!&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;0&#125; &#123;1&#125; &#123;2&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>,<span class="hljs-string">&quot;!&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;id&#125; &#123;name&#125; &#123;age&#125;岁&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;20200&quot;</span>,<span class="hljs-string">&quot;Tom&quot;</span>,<span class="hljs-string">&quot;16&quot;</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> 20200 Tom 16岁</p><h3 id="二、列表、字典、类"><a href="#二、列表、字典、类" class="headerlink" title="二、列表、字典、类"></a>二、列表、字典、类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span> = [<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>,<span class="hljs-string">&quot;!&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;list[0]&#125; &#123;list[1]&#125; &#123;list[2]&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">list</span>=<span class="hljs-built_in">list</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> hello world !</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&quot;id&quot;</span>  :<span class="hljs-string">&quot;20200&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;xiaoming&quot;</span>,<br>        <span class="hljs-string">&quot;age&quot;</span> :<span class="hljs-string">&quot;16&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;id&#125; &#123;name&#125; &#123;age&#125;岁&quot;</span>.<span class="hljs-built_in">format</span>(**<span class="hljs-built_in">dict</span>))<br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> 20200 xiaoming 16岁</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">user</span>():<br>    <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;20200&quot;</span><br>    name = <span class="hljs-string">&quot;xiaoming&quot;</span><br>    age = <span class="hljs-string">&quot;16&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;user.id&#125; &#123;user.name&#125; &#123;age&#125;岁&quot;</span>.<span class="hljs-built_in">format</span>(user=user))<br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>  20200 xiaoming 16岁</p><h3 id="三、魔法参数"><a href="#三、魔法参数" class="headerlink" title="三、魔法参数"></a>三、魔法参数</h3><p>*args       表示任何多个无名参数，它是一个tuple or list；</p><p>**kwargs  表示关键字参数，它是一个 dict。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span> = [<span class="hljs-string">&quot;--&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;--&quot;</span>]<br><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-string">&quot;hello&quot;</span>,<br>        <span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-string">&quot;world&quot;</span>,<br>        <span class="hljs-string">&quot;c&quot;</span>:<span class="hljs-string">&quot;!&quot;</span><br>       &#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;a&#125; &#123;&#125; &#123;b&#125; &#123;&#125; &#123;c&#125;&quot;</span>.<span class="hljs-built_in">format</span>(*<span class="hljs-built_in">list</span>,**<span class="hljs-built_in">dict</span>))<br>    <br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>  hello –&gt; world &lt;– !</p><h3 id="四、数字格式化"><a href="#四、数字格式化" class="headerlink" title="四、数字格式化"></a>四、数字格式化</h3><h4 id="1、小数保留"><a href="#1、小数保留" class="headerlink" title="1、小数保留"></a>1、小数保留</h4><table><thead><tr><th>数字</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>1.23456</td><td>“{:2f}”</td><td>1.23</td><td>保留小数点后两位</td></tr><tr><td>1.23456</td><td>“{:+.2f}”</td><td>+1.23</td><td>带符号保留小数点后两位</td></tr><tr><td>-1.2345</td><td>“{:+.2f}”</td><td>-1.23</td><td>带符号保留小数点后两位</td></tr><tr><td>1.23456</td><td>“{:.0f}”</td><td>1</td><td>不带小数</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1.23456</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:.2f&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:+.2f&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br>b = -<span class="hljs-number">1.2345</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:+.2f&#125;&quot;</span>.<span class="hljs-built_in">format</span>(b))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:.0f&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>   1.23<br> <strong>&gt;&gt;&gt;</strong>   +1.23<br> <strong>&gt;&gt;&gt;</strong>   -1.23<br> <strong>&gt;&gt;&gt;</strong>   1</p><h4 id="2、填充"><a href="#2、填充" class="headerlink" title="2、填充"></a>2、填充</h4><p><u>0 的位置也可为其他字符 (不填默认空格填充)</u></p><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>123</td><td>“{:0&gt;6d}”</td><td>000123</td><td>用 0 填充左边，宽度为6</td></tr><tr><td>123</td><td>“{:0&lt;6d}”</td><td>123000</td><td>用 0 填充右边，宽度为6</td></tr><tr><td>123</td><td>“{:0^6d}”</td><td>012300</td><td>用 0 填充居中，宽度为6</td></tr><tr><td>“你好”</td><td>“{:-&gt;6}”</td><td>—-你好</td><td>当处理字符串时时，去掉 d  。</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">123</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:0&gt;6d&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:0&lt;6d&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:0^6d&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:-&gt;6&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;你好&quot;</span>))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong> 000123<br><strong>&gt;&gt;&gt;</strong> 123000<br><strong>&gt;&gt;&gt;</strong> 012300<br><strong>&gt;&gt;&gt;</strong> —-你好</p><h4 id="3、逗号、百分比、指数"><a href="#3、逗号、百分比、指数" class="headerlink" title="3、逗号、百分比、指数"></a>3、逗号、百分比、指数</h4><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>100000</td><td>“{:,}”</td><td>100,000</td><td>以逗号分隔的数字格式</td></tr><tr><td>100000</td><td>“{:.2e}”</td><td>1.00e+05</td><td>指数记法</td></tr><tr><td>0.13</td><td>“{:.2%}”</td><td>13%</td><td>百分比格式</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">100000</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:,&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:.2e&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br>b = <span class="hljs-number">0.13</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:.2%&#125;&quot;</span>.<span class="hljs-built_in">format</span>(b))<br><br></code></pre></td></tr></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   100,000<br>  <strong>&gt;&gt;&gt;</strong>   1.00e+05<br>  <strong>&gt;&gt;&gt;</strong>   13.00%</p><h4 id="4、进制"><a href="#4、进制" class="headerlink" title="4、进制"></a>4、进制</h4><table><thead><tr><th>输入</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>123</td><td>“{:b}”</td><td>1111011</td><td>二进制</td></tr><tr><td>123</td><td>“{:d}”</td><td>123</td><td>十进制</td></tr><tr><td>123</td><td>“{:o}”</td><td>173</td><td>八进制</td></tr><tr><td>123</td><td>“{:x}”</td><td>7b</td><td>十六进制</td></tr><tr><td>123</td><td>“{:#x}”</td><td>0x7b</td><td>0x式十六进制 字母小写</td></tr><tr><td>123</td><td>“{:#X}”</td><td>0X7B</td><td>0x式十六进制 字母大写</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">123</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:b&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:d&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:o&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:x&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:#x&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;:#X&#125;&quot;</span>.<span class="hljs-built_in">format</span>(a))<br><br></code></pre></td></tr></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   1111011<br>  <strong>&gt;&gt;&gt;</strong>   123<br>  <strong>&gt;&gt;&gt;</strong>   173<br>  <strong>&gt;&gt;&gt;</strong>   7b<br>  <strong>&gt;&gt;&gt;</strong>   0x7b<br>  <strong>&gt;&gt;&gt;</strong>   0X7B</p><h3 id="五、叹号用法"><a href="#五、叹号用法" class="headerlink" title="五、叹号用法"></a>五、叹号用法</h3><p>！后面可以加s r a 分别对应str() repr() ascii() 作用是在填充前先用对应的函数来处理参数<br>差别就是<br>str()是面向用户的，目的是可读性，<br>repr()带有引号，<br>ascii()是面向Python解析器的，返回值表示在python内部的含义,ascii (),返回ascii编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;!s&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;你&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;!r&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;你&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;!a&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;你&quot;</span>))<br><br></code></pre></td></tr></table></figure><p>  <strong>&gt;&gt;&gt;</strong>   你<br>  <strong>&gt;&gt;&gt;</strong>   ‘你’<br>  <strong>&gt;&gt;&gt;</strong>   ‘\u4f60’</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>format</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基础之文件操作</title>
    <link href="/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/22/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="一、访问模式说明"><a href="#一、访问模式说明" class="headerlink" title="一、访问模式说明"></a>一、访问模式说明</h3><table><thead><tr><th>模式</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>w</td><td>用与打开文件和写入，文件存在则覆盖，不存在则创建</td></tr><tr><td>a</td><td>用于追加，文件存在则把文字追加到后面，没有则创建，再写入</td></tr><tr><td>rb</td><td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>wb</td><td>以二进制格式打开一个文件只用于写入。文件已存在则覆盖。文件不存在，创建新文件。</td></tr><tr><td>ab</td><td>以二进制格式打开一个文件用于追加。文件已存在，新的内容将会被写入到已有内容之后。文件不存在，则创建再写入</td></tr><tr><td>r+</td><td>打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td>w+</td><td>打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td>a+</td><td>打开一个文件用于读写，如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果改文件不存在，创建新文件用于读写。</td></tr><tr><td>rb+</td><td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头</td></tr><tr><td>wb+</td><td>以二进制格式打开一个文件用于读写。文件存在则覆盖。改文件不存在，则新建文件。</td></tr><tr><td>ab+</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果改文件不存在，创建新文件用于读写。</td></tr></tbody></table><h3 id="二、打开的读写操作"><a href="#二、打开的读写操作" class="headerlink" title="二、打开的读写操作"></a>二、打开的读写操作</h3><p>open(path,mode,encoding,newline)</p><table><thead><tr><th>主要参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td>是</td><td>文件路径</td></tr><tr><td>mode</td><td>是</td><td>打开模式</td></tr><tr><td>encoding</td><td>否，默认None</td><td>编码格式</td></tr><tr><td>newline</td><td>否</td><td>newline=”” 默认为换行</td></tr></tbody></table><p>1、打开1.txt 文件 和 关闭文件(close())</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>)<br>a.close()<br></code></pre></td></tr></table></figure><p>2、用with 打开文件，with 会自动关闭文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>3、创建一个 demo.txt 文件并写入 “好好学习，”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">&quot;好好学习，&quot;</span>)<br></code></pre></td></tr></table></figure><p>4、打开demo.txt 文件 并把 “ 天天向上 “ 追加到文件末尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.txt&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    F.write(<span class="hljs-string">&quot;天天向上&quot;</span>)<br></code></pre></td></tr></table></figure><p>5、读取 demo.txt 文件的所有内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-built_in">print</span>(F.read())<br></code></pre></td></tr></table></figure><p> <strong>&gt;&gt;&gt;</strong>  好好学习，天天向上</p><p>6、按行读取  三字经.txt 文件内容( readline )</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;三字经.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> i&lt;<span class="hljs-number">118</span>:<br>        <span class="hljs-built_in">print</span>(F.readline())<br>        i+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>7、读取三字经所有内容并返回 列表 (readlines 返回一个列表) 并遍历打印</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;三字经.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> F.readlines():<br>        <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><h3 id="三、指定位置插入文本"><a href="#三、指定位置插入文本" class="headerlink" title="三、指定位置插入文本"></a>三、指定位置插入文本</h3><p>seek(offset,whence) 方法</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>offset</td><td>将光标向前移动n个位置</td></tr><tr><td>whence</td><td>参考位置，一般参数为 0,1,2</td></tr></tbody></table><p><strong>–&gt;</strong>  0 ：将开头作为参考位置</p><p><strong>–&gt;</strong>  1：将当前作为参考位置</p><p><strong>–&gt;</strong>  2：将末尾作为参考位置</p><p>1、在 demo.txt 文件开头写入 “我们要做”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.txt&quot;</span>,<span class="hljs-string">&quot;r+&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    con = F.read()  <span class="hljs-comment">#记录之前的内容</span><br>    F.seek(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>    F.write(<span class="hljs-string">&quot;我们要做到&quot;</span>+con)<br></code></pre></td></tr></table></figure><h3 id="四、CSV-文件操作"><a href="#四、CSV-文件操作" class="headerlink" title="四、CSV 文件操作"></a>四、CSV 文件操作</h3><p>方法：</p><p>writer() 返回一个writer 对像 并提供一个writerow 方法 将内容按行写入到文件中</p><p>reader() 返回一个生成器 通过遍历生成器 进而取出所有内容</p><p>1、将三字经.txt 写入到 deom.csv 文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;三字经.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.csv&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>,newline=<span class="hljs-string">&quot;&quot;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#创建一个文件对象</span><br>        f_csv = csv.writer(f)  <span class="hljs-comment">#创建一个csv写入对象</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> F.readlines():<br>            f_csv.writerow(i)  <br><br></code></pre></td></tr></table></figure><p>2、读取 demo.csv 文件的所有内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo.csv&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>,newline=<span class="hljs-string">&quot;&quot;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#创建一个文件对象</span><br>    f_csv = csv.reader(f)  <span class="hljs-comment">#返回一个可遍历对象</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f_csv:<br>        <span class="hljs-built_in">print</span>(i)<br><br></code></pre></td></tr></table></figure><h3 id="五、JSON文件操作"><a href="#五、JSON文件操作" class="headerlink" title="五、JSON文件操作"></a>五、JSON文件操作</h3><p>json 常用方法</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>json.dump</td><td>将Python对象编码存入.json文件中</td></tr><tr><td>json.load</td><td>将.josn文件解析成Python对象</td></tr><tr><td>json.dumps</td><td>将Python 对象编码为json字符串</td></tr><tr><td>json.loads</td><td>将json已编码字符串解析为Python 对象</td></tr></tbody></table><p>1、将一个字典编码成json 字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-number">567</span><br>&#125;<br>json_dump = json.dumps(<span class="hljs-built_in">dict</span>) <span class="hljs-comment">#对一个字典对象进行json编码成json字符串</span><br><span class="hljs-built_in">print</span>(json_dump)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_dump))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {“a”: 123, “b”: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘str’&gt;</p><p>2、将一个已编码的json 字符串解码为Python 对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-number">567</span><br>&#125;<br>json_dump = json.dumps(<span class="hljs-built_in">dict</span>)   <br>json_load = json.loads(json_dump) <span class="hljs-comment">#对一个已编码的json 字符串解码成Python对象</span><br><span class="hljs-built_in">print</span>(json_load)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_load))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘a’: 123, ‘b’: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘dict’&gt;</p><p>3、将Python对象编码存入demo1.json文件中</p><p>方法：</p><p>dump(obj,file)  obj : 字典对象   file 文件对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-built_in">dict</span> = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-number">123</span>,<br>    <span class="hljs-string">&quot;b&quot;</span>:<span class="hljs-number">567</span><br>&#125;<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo1.json&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> F: <span class="hljs-comment">#创建一个文件对象</span><br>    json_dump = json.dump(<span class="hljs-built_in">dict</span>,F)<br><br></code></pre></td></tr></table></figure><p>4、将 demo1.josn文件解析成Python对象并输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;demo1.json&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> F:<br>    json_load = json.load(F)<br>    <span class="hljs-built_in">print</span>(json_load)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(json_load))<br><br></code></pre></td></tr></table></figure><p><strong>&gt;&gt;&gt;</strong>  {‘a’: 123, ‘b’: 567}<br><strong>&gt;&gt;&gt;</strong>  &lt;class ‘dict’&gt;</p><p>5、</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
